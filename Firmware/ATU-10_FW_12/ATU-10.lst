;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 7/6/2021 1:16:15 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x3198      	MOVLP      24
0x0001	0x2D11      	GOTO       7441
_interupt:
;main.c,30 :: 		void interupt() iv 0x0004  {
0x0004	0x0870      	MOVF       R0, 0
0x0005	0x0140      	MOVLB      0
0x0006	0x00AE      	MOVWF      46
0x0007	0x0871      	MOVF       R1, 0
0x0008	0x00AD      	MOVWF      45
0x0009	0x0872      	MOVF       R2, 0
0x000A	0x00AC      	MOVWF      44
0x000B	0x0873      	MOVF       R3, 0
0x000C	0x00AB      	MOVWF      43
0x000D	0x0874      	MOVF       R4, 0
0x000E	0x00AA      	MOVWF      42
0x000F	0x0875      	MOVF       R5, 0
0x0010	0x00A9      	MOVWF      41
0x0011	0x0876      	MOVF       R6, 0
0x0012	0x00A8      	MOVWF      40
0x0013	0x0877      	MOVF       R7, 0
0x0014	0x00A7      	MOVWF      39
0x0015	0x0878      	MOVF       R8, 0
0x0016	0x00A6      	MOVWF      38
0x0017	0x0879      	MOVF       R9, 0
0x0018	0x00A5      	MOVWF      37
0x0019	0x087A      	MOVF       R10, 0
0x001A	0x00A4      	MOVWF      36
0x001B	0x087B      	MOVF       R11, 0
0x001C	0x00A3      	MOVWF      35
0x001D	0x087C      	MOVF       R12, 0
0x001E	0x00A2      	MOVWF      34
;main.c,32 :: 		if(TMR0IF_bit) {   // Timer0
0x001F	0x3180      	MOVLP      0
0x0020	0x014E      	MOVLB      14
0x0021	0x1E8C      	BTFSS      TMR0IF_bit, BitPos(TMR0IF_bit+0)
0x0022	0x2830      	GOTO       L_interupt0
;main.c,33 :: 		TMR0IF_bit = 0;
0x0023	0x128C      	BCF        TMR0IF_bit, BitPos(TMR0IF_bit+0)
;main.c,34 :: 		Tick++;
0x0024	0x3001      	MOVLW      1
0x0025	0x0142      	MOVLB      2
0x0026	0x07D8      	ADDWF      _Tick, 1
0x0027	0x3000      	MOVLW      0
0x0028	0x3DD9      	ADDWFC     _Tick+1, 1
0x0029	0x3DDA      	ADDWFC     _Tick+2, 1
0x002A	0x3DDB      	ADDWFC     _Tick+3, 1
;main.c,35 :: 		TMR0L = 0xC0;   // 80_000 cycles to OF
0x002B	0x30C0      	MOVLW      192
0x002C	0x0140      	MOVLB      0
0x002D	0x009C      	MOVWF      TMR0L
;main.c,36 :: 		TMR0H = 0xE0;
0x002E	0x30E0      	MOVLW      224
0x002F	0x009D      	MOVWF      TMR0H
;main.c,37 :: 		}
L_interupt0:
0x0030	0x0140      	MOVLB      0
;main.c,39 :: 		if(Tick>=btn_cnt){  // every 10ms
0x0031	0x083F      	MOVF       _btn_cnt+3, 0
0x0032	0x0142      	MOVLB      2
0x0033	0x025B      	SUBWF      _Tick+3, 0
0x0034	0x1D03      	BTFSS      STATUS, 2
0x0035	0x2846      	GOTO       L__interupt233
0x0036	0x0140      	MOVLB      0
0x0037	0x083E      	MOVF       _btn_cnt+2, 0
0x0038	0x0142      	MOVLB      2
0x0039	0x025A      	SUBWF      _Tick+2, 0
0x003A	0x1D03      	BTFSS      STATUS, 2
0x003B	0x2846      	GOTO       L__interupt233
0x003C	0x0140      	MOVLB      0
0x003D	0x083D      	MOVF       _btn_cnt+1, 0
0x003E	0x0142      	MOVLB      2
0x003F	0x0259      	SUBWF      _Tick+1, 0
0x0040	0x1D03      	BTFSS      STATUS, 2
0x0041	0x2846      	GOTO       L__interupt233
0x0042	0x0140      	MOVLB      0
0x0043	0x083C      	MOVF       _btn_cnt, 0
0x0044	0x0142      	MOVLB      2
0x0045	0x0258      	SUBWF      _Tick, 0
L__interupt233:
0x0046	0x1C03      	BTFSS      STATUS, 0
0x0047	0x291D      	GOTO       L_interupt1
;main.c,40 :: 		btn_cnt += 10;
0x0048	0x300A      	MOVLW      10
0x0049	0x0140      	MOVLB      0
0x004A	0x07BC      	ADDWF      _btn_cnt, 1
0x004B	0x3000      	MOVLW      0
0x004C	0x3DBD      	ADDWFC     _btn_cnt+1, 1
0x004D	0x3DBE      	ADDWFC     _btn_cnt+2, 1
0x004E	0x3DBF      	ADDWFC     _btn_cnt+3, 1
;main.c,42 :: 		if(GetButton | Start){
0x004F	0x1A8D      	BTFSC      PORTB, 5
0x0050	0x2853      	GOTO       L__interupt234
0x0051	0x1474      	BSF        R4, 0
0x0052	0x2854      	GOTO       L__interupt235
L__interupt234:
0x0053	0x1074      	BCF        R4, 0
L__interupt235:
0x0054	0x188F      	BTFSC      PORTD, 1
0x0055	0x2858      	GOTO       L__interupt236
0x0056	0x1403      	BSF        STATUS, 0
0x0057	0x2859      	GOTO       L__interupt237
L__interupt236:
0x0058	0x1003      	BCF        STATUS, 0
L__interupt237:
0x0059	0x1874      	BTFSC      R4, 0
0x005A	0x285F      	GOTO       L__interupt238
0x005B	0x1803      	BTFSC      STATUS, 0
0x005C	0x285F      	GOTO       L__interupt238
0x005D	0x1074      	BCF        R4, 0
0x005E	0x2860      	GOTO       L__interupt239
L__interupt238:
0x005F	0x1474      	BSF        R4, 0
L__interupt239:
0x0060	0x1C74      	BTFSS      R4, 0
0x0061	0x28AA      	GOTO       L_interupt2
;main.c,43 :: 		disp_cnt = Tick + Disp_time*1000;
0x0062	0x0142      	MOVLB      2
0x0063	0x0854      	MOVF       _Disp_time, 0
0x0064	0x00F0      	MOVWF      R0
0x0065	0x0855      	MOVF       _Disp_time+1, 0
0x0066	0x00F1      	MOVWF      R1
0x0067	0x0856      	MOVF       _Disp_time+2, 0
0x0068	0x00F2      	MOVWF      R2
0x0069	0x0857      	MOVF       _Disp_time+3, 0
0x006A	0x00F3      	MOVWF      R3
0x006B	0x30E8      	MOVLW      232
0x006C	0x00F4      	MOVWF      R4
0x006D	0x3003      	MOVLW      3
0x006E	0x00F5      	MOVWF      R5
0x006F	0x01F6      	CLRF       R6
0x0070	0x01F7      	CLRF       R7
0x0071	0x2209      	CALL       _Mul_32x32_U
0x0072	0x0870      	MOVF       R0, 0
0x0073	0x0142      	MOVLB      2
0x0074	0x0758      	ADDWF      _Tick, 0
0x0075	0x0143      	MOVLB      3
0x0076	0x00C1      	MOVWF      _disp_cnt
0x0077	0x0871      	MOVF       R1, 0
0x0078	0x0142      	MOVLB      2
0x0079	0x3D59      	ADDWFC     _Tick+1, 0
0x007A	0x0143      	MOVLB      3
0x007B	0x00C2      	MOVWF      _disp_cnt+1
0x007C	0x0872      	MOVF       R2, 0
0x007D	0x0142      	MOVLB      2
0x007E	0x3D5A      	ADDWFC     _Tick+2, 0
0x007F	0x0143      	MOVLB      3
0x0080	0x00C3      	MOVWF      _disp_cnt+2
0x0081	0x0873      	MOVF       R3, 0
0x0082	0x0142      	MOVLB      2
0x0083	0x3D5B      	ADDWFC     _Tick+3, 0
0x0084	0x0143      	MOVLB      3
0x0085	0x00C4      	MOVWF      _disp_cnt+3
;main.c,44 :: 		off_cnt = Tick + Off_time*1000;
0x0086	0x0140      	MOVLB      0
0x0087	0x0850      	MOVF       _Off_time, 0
0x0088	0x00F0      	MOVWF      R0
0x0089	0x0851      	MOVF       _Off_time+1, 0
0x008A	0x00F1      	MOVWF      R1
0x008B	0x0852      	MOVF       _Off_time+2, 0
0x008C	0x00F2      	MOVWF      R2
0x008D	0x0853      	MOVF       _Off_time+3, 0
0x008E	0x00F3      	MOVWF      R3
0x008F	0x30E8      	MOVLW      232
0x0090	0x00F4      	MOVWF      R4
0x0091	0x3003      	MOVLW      3
0x0092	0x00F5      	MOVWF      R5
0x0093	0x01F6      	CLRF       R6
0x0094	0x01F7      	CLRF       R7
0x0095	0x2209      	CALL       _Mul_32x32_U
0x0096	0x0870      	MOVF       R0, 0
0x0097	0x0142      	MOVLB      2
0x0098	0x0758      	ADDWF      _Tick, 0
0x0099	0x0143      	MOVLB      3
0x009A	0x00A2      	MOVWF      _off_cnt
0x009B	0x0871      	MOVF       R1, 0
0x009C	0x0142      	MOVLB      2
0x009D	0x3D59      	ADDWFC     _Tick+1, 0
0x009E	0x0143      	MOVLB      3
0x009F	0x00A3      	MOVWF      _off_cnt+1
0x00A0	0x0872      	MOVF       R2, 0
0x00A1	0x0142      	MOVLB      2
0x00A2	0x3D5A      	ADDWFC     _Tick+2, 0
0x00A3	0x0143      	MOVLB      3
0x00A4	0x00A4      	MOVWF      _off_cnt+2
0x00A5	0x0873      	MOVF       R3, 0
0x00A6	0x0142      	MOVLB      2
0x00A7	0x3D5B      	ADDWFC     _Tick+3, 0
0x00A8	0x0143      	MOVLB      3
0x00A9	0x00A5      	MOVWF      _off_cnt+3
;main.c,45 :: 		}
L_interupt2:
;main.c,47 :: 		if(GetButton){  //
0x00AA	0x0140      	MOVLB      0
0x00AB	0x1A8D      	BTFSC      PORTB, 5
0x00AC	0x28AF      	GOTO       L__interupt240
0x00AD	0x1403      	BSF        STATUS, 0
0x00AE	0x28B0      	GOTO       L__interupt241
L__interupt240:
0x00AF	0x1003      	BCF        STATUS, 0
L__interupt241:
0x00B0	0x1C03      	BTFSS      STATUS, 0
0x00B1	0x28D0      	GOTO       L_interupt3
;main.c,48 :: 		if(btn_1_cnt<250) btn_1_cnt++;
0x00B2	0x30FA      	MOVLW      250
0x00B3	0x0141      	MOVLB      1
0x00B4	0x0225      	SUBWF      _btn_1_cnt, 0
0x00B5	0x1803      	BTFSC      STATUS, 0
0x00B6	0x28B8      	GOTO       L_interupt4
0x00B7	0x0AA5      	INCF       _btn_1_cnt, 1
L_interupt4:
;main.c,49 :: 		if(btn_1_cnt==25) B_long = 1;  // long pressing detected
0x00B8	0x0825      	MOVF       _btn_1_cnt, 0
0x00B9	0x3A19      	XORLW      25
0x00BA	0x1D03      	BTFSS      STATUS, 2
0x00BB	0x28BE      	GOTO       L_interupt5
0x00BC	0x0143      	MOVLB      3
0x00BD	0x1626      	BSF        _B_long, BitPos(_B_long+0)
L_interupt5:
;main.c,50 :: 		if(btn_1_cnt==250 & OLED_PWD) B_xlong = 1;  // Xtra long pressing detected
0x00BE	0x0141      	MOVLB      1
0x00BF	0x0825      	MOVF       _btn_1_cnt, 0
0x00C0	0x3AFA      	XORLW      250
0x00C1	0x3001      	MOVLW      1
0x00C2	0x1D03      	BTFSS      STATUS, 2
0x00C3	0x3000      	MOVLW      0
0x00C4	0x00F1      	MOVWF      R1
0x00C5	0x01F0      	CLRF       R0
0x00C6	0x0140      	MOVLB      0
0x00C7	0x1A16      	BTFSC      LATA4_bit, BitPos(LATA4_bit+0)
0x00C8	0x0AF0      	INCF       R0, 1
0x00C9	0x0871      	MOVF       R1, 0
0x00CA	0x05F0      	ANDWF      R0, 1
0x00CB	0x1903      	BTFSC      STATUS, 2
0x00CC	0x28CF      	GOTO       L_interupt6
0x00CD	0x0143      	MOVLB      3
0x00CE	0x15A6      	BSF        _B_xlong, BitPos(_B_xlong+0)
L_interupt6:
;main.c,51 :: 		}
0x00CF	0x28E7      	GOTO       L_interupt7
L_interupt3:
;main.c,52 :: 		else if(btn_1_cnt>2 & btn_1_cnt<25){
0x00D0	0x0141      	MOVLB      1
0x00D1	0x0825      	MOVF       _btn_1_cnt, 0
0x00D2	0x3C02      	SUBLW      2
0x00D3	0x3001      	MOVLW      1
0x00D4	0x1803      	BTFSC      STATUS, 0
0x00D5	0x3000      	MOVLW      0
0x00D6	0x00F1      	MOVWF      R1
0x00D7	0x3019      	MOVLW      25
0x00D8	0x0225      	SUBWF      _btn_1_cnt, 0
0x00D9	0x3001      	MOVLW      1
0x00DA	0x1803      	BTFSC      STATUS, 0
0x00DB	0x3000      	MOVLW      0
0x00DC	0x00F0      	MOVWF      R0
0x00DD	0x0871      	MOVF       R1, 0
0x00DE	0x05F0      	ANDWF      R0, 1
0x00DF	0x1903      	BTFSC      STATUS, 2
0x00E0	0x28E6      	GOTO       L_interupt8
;main.c,53 :: 		B_short = 1;               // short pressing detected
0x00E1	0x0143      	MOVLB      3
0x00E2	0x16A6      	BSF        _B_short, BitPos(_B_short+0)
;main.c,54 :: 		btn_1_cnt = 0;
0x00E3	0x0141      	MOVLB      1
0x00E4	0x01A5      	CLRF       _btn_1_cnt
;main.c,55 :: 		}
0x00E5	0x28E7      	GOTO       L_interupt9
L_interupt8:
;main.c,57 :: 		btn_1_cnt = 0;
0x00E6	0x01A5      	CLRF       _btn_1_cnt
L_interupt9:
L_interupt7:
;main.c,59 :: 		if(Start){
0x00E7	0x0140      	MOVLB      0
0x00E8	0x188F      	BTFSC      PORTD, 1
0x00E9	0x28EC      	GOTO       L__interupt242
0x00EA	0x1403      	BSF        STATUS, 0
0x00EB	0x28ED      	GOTO       L__interupt243
L__interupt242:
0x00EC	0x1003      	BCF        STATUS, 0
L__interupt243:
0x00ED	0x1C03      	BTFSS      STATUS, 0
0x00EE	0x2906      	GOTO       L_interupt10
;main.c,60 :: 		if(btn_2_cnt<25) btn_2_cnt++;
0x00EF	0x3019      	MOVLW      25
0x00F0	0x0141      	MOVLB      1
0x00F1	0x0226      	SUBWF      _btn_2_cnt, 0
0x00F2	0x1803      	BTFSC      STATUS, 0
0x00F3	0x28F5      	GOTO       L_interupt11
0x00F4	0x0AA6      	INCF       _btn_2_cnt, 1
L_interupt11:
;main.c,61 :: 		if(btn_2_cnt==20 & Key_in) E_long = 1;
0x00F5	0x0826      	MOVF       _btn_2_cnt, 0
0x00F6	0x3A14      	XORLW      20
0x00F7	0x3001      	MOVLW      1
0x00F8	0x1D03      	BTFSS      STATUS, 2
0x00F9	0x3000      	MOVLW      0
0x00FA	0x00F1      	MOVWF      R1
0x00FB	0x01F0      	CLRF       R0
0x00FC	0x0140      	MOVLB      0
0x00FD	0x190F      	BTFSC      PORTD, 2
0x00FE	0x0AF0      	INCF       R0, 1
0x00FF	0x0871      	MOVF       R1, 0
0x0100	0x05F0      	ANDWF      R0, 1
0x0101	0x1903      	BTFSC      STATUS, 2
0x0102	0x2905      	GOTO       L_interupt12
0x0103	0x0143      	MOVLB      3
0x0104	0x14A6      	BSF        _E_long, BitPos(_E_long+0)
L_interupt12:
;main.c,62 :: 		}
0x0105	0x291D      	GOTO       L_interupt13
L_interupt10:
;main.c,63 :: 		else if(btn_2_cnt>1 & btn_2_cnt<10){
0x0106	0x0141      	MOVLB      1
0x0107	0x0826      	MOVF       _btn_2_cnt, 0
0x0108	0x3C01      	SUBLW      1
0x0109	0x3001      	MOVLW      1
0x010A	0x1803      	BTFSC      STATUS, 0
0x010B	0x3000      	MOVLW      0
0x010C	0x00F1      	MOVWF      R1
0x010D	0x300A      	MOVLW      10
0x010E	0x0226      	SUBWF      _btn_2_cnt, 0
0x010F	0x3001      	MOVLW      1
0x0110	0x1803      	BTFSC      STATUS, 0
0x0111	0x3000      	MOVLW      0
0x0112	0x00F0      	MOVWF      R0
0x0113	0x0871      	MOVF       R1, 0
0x0114	0x05F0      	ANDWF      R0, 1
0x0115	0x1903      	BTFSC      STATUS, 2
0x0116	0x291C      	GOTO       L_interupt14
;main.c,64 :: 		E_short = 1;
0x0117	0x0143      	MOVLB      3
0x0118	0x1526      	BSF        _E_short, BitPos(_E_short+0)
;main.c,65 :: 		btn_2_cnt = 0;
0x0119	0x0141      	MOVLB      1
0x011A	0x01A6      	CLRF       _btn_2_cnt
;main.c,66 :: 		}
0x011B	0x291D      	GOTO       L_interupt15
L_interupt14:
;main.c,68 :: 		btn_2_cnt = 0;
0x011C	0x01A6      	CLRF       _btn_2_cnt
L_interupt15:
L_interupt13:
;main.c,69 :: 		}
L_interupt1:
;main.c,70 :: 		return;
;main.c,71 :: 		}
L_end_interupt:
L__interupt232:
0x011D	0x0140      	MOVLB      0
0x011E	0x082E      	MOVF       46, 0
0x011F	0x00F0      	MOVWF      R0
0x0120	0x082D      	MOVF       45, 0
0x0121	0x00F1      	MOVWF      R1
0x0122	0x082C      	MOVF       44, 0
0x0123	0x00F2      	MOVWF      R2
0x0124	0x082B      	MOVF       43, 0
0x0125	0x00F3      	MOVWF      R3
0x0126	0x082A      	MOVF       42, 0
0x0127	0x00F4      	MOVWF      R4
0x0128	0x0829      	MOVF       41, 0
0x0129	0x00F5      	MOVWF      R5
0x012A	0x0828      	MOVF       40, 0
0x012B	0x00F6      	MOVWF      R6
0x012C	0x0827      	MOVF       39, 0
0x012D	0x00F7      	MOVWF      R7
0x012E	0x0826      	MOVF       38, 0
0x012F	0x00F8      	MOVWF      R8
0x0130	0x0825      	MOVF       37, 0
0x0131	0x00F9      	MOVWF      R9
0x0132	0x0824      	MOVF       36, 0
0x0133	0x00FA      	MOVWF      R10
0x0134	0x0823      	MOVF       35, 0
0x0135	0x00FB      	MOVWF      R11
0x0136	0x0822      	MOVF       34, 0
0x0137	0x00FC      	MOVWF      R12
0x0138	0x0009      	RETFIE     %s
; end of _interupt
_Soft_I2C_Start:
;Soft_I2C.c,17 :: 		void Soft_I2C_Start() {
;Soft_I2C.c,18 :: 		Soft_I2C_Scl = 1;
0x0139	0x0140      	MOVLB      0
0x013A	0x1596      	BSF        LATA3_bit, BitPos(LATA3_bit+0)
;Soft_I2C.c,19 :: 		Delay_I2C;
0x013B	0x3042      	MOVLW      66
0x013C	0x00FD      	MOVWF      R13
L_Soft_I2C_Start0:
0x013D	0x0BFD      	DECFSZ     R13, 1
0x013E	0x293D      	GOTO       L_Soft_I2C_Start0
0x013F	0x0000      	NOP
;Soft_I2C.c,20 :: 		Soft_I2C_Sda = 1;
0x0140	0x1516      	BSF        LATA2_bit, BitPos(LATA2_bit+0)
;Soft_I2C.c,21 :: 		Delay_I2C;
0x0141	0x3042      	MOVLW      66
0x0142	0x00FD      	MOVWF      R13
L_Soft_I2C_Start1:
0x0143	0x0BFD      	DECFSZ     R13, 1
0x0144	0x2943      	GOTO       L_Soft_I2C_Start1
0x0145	0x0000      	NOP
;Soft_I2C.c,22 :: 		Soft_I2C_Sda = 0;
0x0146	0x1116      	BCF        LATA2_bit, BitPos(LATA2_bit+0)
;Soft_I2C.c,23 :: 		Delay_I2C;
0x0147	0x3042      	MOVLW      66
0x0148	0x00FD      	MOVWF      R13
L_Soft_I2C_Start2:
0x0149	0x0BFD      	DECFSZ     R13, 1
0x014A	0x2949      	GOTO       L_Soft_I2C_Start2
0x014B	0x0000      	NOP
;Soft_I2C.c,24 :: 		Soft_I2C_Scl = 0;
0x014C	0x1196      	BCF        LATA3_bit, BitPos(LATA3_bit+0)
;Soft_I2C.c,25 :: 		Delay_I2C;
0x014D	0x3042      	MOVLW      66
0x014E	0x00FD      	MOVWF      R13
L_Soft_I2C_Start3:
0x014F	0x0BFD      	DECFSZ     R13, 1
0x0150	0x294F      	GOTO       L_Soft_I2C_Start3
0x0151	0x0000      	NOP
;Soft_I2C.c,26 :: 		return;
;Soft_I2C.c,27 :: 		}
L_end_Soft_I2C_Start:
0x0152	0x0008      	RETURN
; end of _Soft_I2C_Start
_Soft_I2C_Write:
;Soft_I2C.c,29 :: 		char Soft_I2C_Write(char d) {
;Soft_I2C.c,31 :: 		for(i=0; i<8; i++) {
0x0153	0x01F1      	CLRF       R1
L_Soft_I2C_Write4:
0x0154	0x3008      	MOVLW      8
0x0155	0x0271      	SUBWF      R1, 0
0x0156	0x1803      	BTFSC      STATUS, 0
0x0157	0x2970      	GOTO       L_Soft_I2C_Write5
;Soft_I2C.c,32 :: 		Soft_I2C_Sda = d.B7;
0x0158	0x0144      	MOVLB      4
0x0159	0x1BC6      	BTFSC      FARG_Soft_I2C_Write_d, 7
0x015A	0x295E      	GOTO       L__Soft_I2C_Write29
0x015B	0x0140      	MOVLB      0
0x015C	0x1116      	BCF        LATA2_bit, BitPos(LATA2_bit+0)
0x015D	0x2960      	GOTO       L__Soft_I2C_Write30
L__Soft_I2C_Write29:
0x015E	0x0140      	MOVLB      0
0x015F	0x1516      	BSF        LATA2_bit, BitPos(LATA2_bit+0)
L__Soft_I2C_Write30:
;Soft_I2C.c,33 :: 		Delay_I2C;
0x0160	0x3042      	MOVLW      66
0x0161	0x00FD      	MOVWF      R13
L_Soft_I2C_Write7:
0x0162	0x0BFD      	DECFSZ     R13, 1
0x0163	0x2962      	GOTO       L_Soft_I2C_Write7
0x0164	0x0000      	NOP
;Soft_I2C.c,34 :: 		Soft_I2C_Scl = 1;
0x0165	0x1596      	BSF        LATA3_bit, BitPos(LATA3_bit+0)
;Soft_I2C.c,35 :: 		Delay_I2C;
0x0166	0x3042      	MOVLW      66
0x0167	0x00FD      	MOVWF      R13
L_Soft_I2C_Write8:
0x0168	0x0BFD      	DECFSZ     R13, 1
0x0169	0x2968      	GOTO       L_Soft_I2C_Write8
0x016A	0x0000      	NOP
;Soft_I2C.c,36 :: 		Soft_I2C_Scl = 0;
0x016B	0x1196      	BCF        LATA3_bit, BitPos(LATA3_bit+0)
;Soft_I2C.c,37 :: 		d = d << 1;
0x016C	0x0144      	MOVLB      4
0x016D	0x35C6      	LSLF       FARG_Soft_I2C_Write_d, 1
;Soft_I2C.c,31 :: 		for(i=0; i<8; i++) {
0x016E	0x0AF1      	INCF       R1, 1
;Soft_I2C.c,38 :: 		}
0x016F	0x2954      	GOTO       L_Soft_I2C_Write4
L_Soft_I2C_Write5:
;Soft_I2C.c,40 :: 		Soft_I2C_Sda = 1; //ACK
0x0170	0x0140      	MOVLB      0
0x0171	0x1516      	BSF        LATA2_bit, BitPos(LATA2_bit+0)
;Soft_I2C.c,41 :: 		Delay_I2C;
0x0172	0x3042      	MOVLW      66
0x0173	0x00FD      	MOVWF      R13
L_Soft_I2C_Write9:
0x0174	0x0BFD      	DECFSZ     R13, 1
0x0175	0x2974      	GOTO       L_Soft_I2C_Write9
0x0176	0x0000      	NOP
;Soft_I2C.c,42 :: 		Soft_I2C_Scl = 1;
0x0177	0x1596      	BSF        LATA3_bit, BitPos(LATA3_bit+0)
;Soft_I2C.c,43 :: 		ack = Soft_I2C_Sda_in;
0x0178	0x3000      	MOVLW      0
0x0179	0x190C      	BTFSC      PORTA, 2
0x017A	0x3001      	MOVLW      1
0x017B	0x00F2      	MOVWF      R2
;Soft_I2C.c,44 :: 		Delay_I2C;
0x017C	0x3042      	MOVLW      66
0x017D	0x00FD      	MOVWF      R13
L_Soft_I2C_Write10:
0x017E	0x0BFD      	DECFSZ     R13, 1
0x017F	0x297E      	GOTO       L_Soft_I2C_Write10
0x0180	0x0000      	NOP
;Soft_I2C.c,45 :: 		Soft_I2C_Scl = 0;
0x0181	0x1196      	BCF        LATA3_bit, BitPos(LATA3_bit+0)
;Soft_I2C.c,46 :: 		Delay_I2C;
0x0182	0x3042      	MOVLW      66
0x0183	0x00FD      	MOVWF      R13
L_Soft_I2C_Write11:
0x0184	0x0BFD      	DECFSZ     R13, 1
0x0185	0x2984      	GOTO       L_Soft_I2C_Write11
0x0186	0x0000      	NOP
;Soft_I2C.c,47 :: 		return ack;
0x0187	0x0872      	MOVF       R2, 0
0x0188	0x00F0      	MOVWF      R0
;Soft_I2C.c,48 :: 		}
L_end_Soft_I2C_Write:
0x0189	0x0008      	RETURN
; end of _Soft_I2C_Write
_set_addressing:
;oled_control.c,98 :: 		void set_addressing (char pagenum, char c_start) {
;oled_control.c,100 :: 		c = c_start + oled_shift;
0x018A	0x0141      	MOVLB      1
0x018B	0x082A      	MOVF       oled_control_oled_shift, 0
0x018C	0x0144      	MOVLB      4
0x018D	0x0742      	ADDWF      FARG_set_addressing_c_start, 0
0x018E	0x00C5      	MOVWF      set_addressing_c_L0
;oled_control.c,101 :: 		Soft_I2C_Start();
0x018F	0x2139      	CALL       _Soft_I2C_Start
;oled_control.c,102 :: 		Soft_I2C_Write(oled_addr);             // device addres
0x0190	0x0141      	MOVLB      1
0x0191	0x0828      	MOVF       oled_control_oled_addr, 0
0x0192	0x0144      	MOVLB      4
0x0193	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0194	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,103 :: 		Soft_I2C_Write(0);              // 0 - continious mode, command; 64 - Co, data
0x0195	0x0144      	MOVLB      4
0x0196	0x01C6      	CLRF       FARG_Soft_I2C_Write_d
0x0197	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,104 :: 		Soft_I2C_Write(0xB0 + pagenum);  // set page number
0x0198	0x0144      	MOVLB      4
0x0199	0x0841      	MOVF       FARG_set_addressing_pagenum, 0
0x019A	0x3EB0      	ADDLW      176
0x019B	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x019C	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,106 :: 		if (c <= 15) { a = c; b = 0; }
0x019D	0x0144      	MOVLB      4
0x019E	0x0845      	MOVF       set_addressing_c_L0, 0
0x019F	0x3C0F      	SUBLW      15
0x01A0	0x1C03      	BTFSS      STATUS, 0
0x01A1	0x29A6      	GOTO       L_set_addressing8
0x01A2	0x0845      	MOVF       set_addressing_c_L0, 0
0x01A3	0x00C3      	MOVWF      set_addressing_a_L0
0x01A4	0x01C4      	CLRF       set_addressing_b_L0
0x01A5	0x29B7      	GOTO       L_set_addressing9
L_set_addressing8:
;oled_control.c,107 :: 		else { b = c / 16; a = c - b * 16; }
0x01A6	0x0845      	MOVF       set_addressing_c_L0, 0
0x01A7	0x00F2      	MOVWF      R2
0x01A8	0x36F2      	LSRF       R2, 1
0x01A9	0x36F2      	LSRF       R2, 1
0x01AA	0x36F2      	LSRF       R2, 1
0x01AB	0x36F2      	LSRF       R2, 1
0x01AC	0x0872      	MOVF       R2, 0
0x01AD	0x00C4      	MOVWF      set_addressing_b_L0
0x01AE	0x0872      	MOVF       R2, 0
0x01AF	0x00F0      	MOVWF      R0
0x01B0	0x35F0      	LSLF       R0, 1
0x01B1	0x35F0      	LSLF       R0, 1
0x01B2	0x35F0      	LSLF       R0, 1
0x01B3	0x35F0      	LSLF       R0, 1
0x01B4	0x0870      	MOVF       R0, 0
0x01B5	0x0245      	SUBWF      set_addressing_c_L0, 0
0x01B6	0x00C3      	MOVWF      set_addressing_a_L0
L_set_addressing9:
;oled_control.c,108 :: 		Soft_I2C_Write (a);        // set lower nibble of start address
0x01B7	0x0843      	MOVF       set_addressing_a_L0, 0
0x01B8	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x01B9	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,109 :: 		Soft_I2C_Write (0x10 + b); // set higher nibble of start address
0x01BA	0x0144      	MOVLB      4
0x01BB	0x0844      	MOVF       set_addressing_b_L0, 0
0x01BC	0x3E10      	ADDLW      16
0x01BD	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x01BE	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,111 :: 		Soft_I2C_Start();
0x01BF	0x2139      	CALL       _Soft_I2C_Start
;oled_control.c,112 :: 		Soft_I2C_Write(oled_addr);        // device addres
0x01C0	0x0141      	MOVLB      1
0x01C1	0x0828      	MOVF       oled_control_oled_addr, 0
0x01C2	0x0144      	MOVLB      4
0x01C3	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x01C4	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,113 :: 		Soft_I2C_Write(64);              // 0 - continious mode, command; 64 - Co, data
0x01C5	0x3040      	MOVLW      64
0x01C6	0x0144      	MOVLB      4
0x01C7	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x01C8	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,114 :: 		return;
;oled_control.c,115 :: 		}
L_end_set_addressing:
0x01C9	0x0008      	RETURN
; end of _set_addressing
_Soft_I2C_Stop:
;Soft_I2C.c,84 :: 		void Soft_I2C_Stop() {
;Soft_I2C.c,85 :: 		Soft_I2C_Sda = 0;
0x01CA	0x0140      	MOVLB      0
0x01CB	0x1116      	BCF        LATA2_bit, BitPos(LATA2_bit+0)
;Soft_I2C.c,86 :: 		Delay_I2C;
0x01CC	0x3042      	MOVLW      66
0x01CD	0x00FD      	MOVWF      R13
L_Soft_I2C_Stop23:
0x01CE	0x0BFD      	DECFSZ     R13, 1
0x01CF	0x29CE      	GOTO       L_Soft_I2C_Stop23
0x01D0	0x0000      	NOP
;Soft_I2C.c,87 :: 		Soft_I2C_Scl = 1;
0x01D1	0x1596      	BSF        LATA3_bit, BitPos(LATA3_bit+0)
;Soft_I2C.c,88 :: 		Delay_I2C;
0x01D2	0x3042      	MOVLW      66
0x01D3	0x00FD      	MOVWF      R13
L_Soft_I2C_Stop24:
0x01D4	0x0BFD      	DECFSZ     R13, 1
0x01D5	0x29D4      	GOTO       L_Soft_I2C_Stop24
0x01D6	0x0000      	NOP
;Soft_I2C.c,89 :: 		Soft_I2C_Sda = 1;
0x01D7	0x1516      	BSF        LATA2_bit, BitPos(LATA2_bit+0)
;Soft_I2C.c,90 :: 		Delay_I2C;
0x01D8	0x3042      	MOVLW      66
0x01D9	0x00FD      	MOVWF      R13
L_Soft_I2C_Stop25:
0x01DA	0x0BFD      	DECFSZ     R13, 1
0x01DB	0x29DA      	GOTO       L_Soft_I2C_Stop25
0x01DC	0x0000      	NOP
;Soft_I2C.c,91 :: 		return;
;Soft_I2C.c,92 :: 		}
L_end_Soft_I2C_Stop:
0x01DD	0x0008      	RETURN
; end of _Soft_I2C_Stop
_Mul_8X8_U:
;__Lib_Math.c,103 :: 		
;__Lib_Math.c,109 :: 		
0x01DE	0x0140      	MOVLB      0
;__Lib_Math.c,110 :: 		
0x01DF	0x0870      	MOVF       R0, 0
;__Lib_Math.c,111 :: 		
0x01E0	0x00F1      	MOVWF      R1
;__Lib_Math.c,112 :: 		
0x01E1	0x01F0      	CLRF       R0
;__Lib_Math.c,113 :: 		
0x01E2	0x3008      	MOVLW      8
;__Lib_Math.c,114 :: 		
0x01E3	0x00FC      	MOVWF      R12
;__Lib_Math.c,115 :: 		
0x01E4	0x0871      	MOVF       R1, 0
;__Lib_Math.c,116 :: 		
0x01E5	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,117 :: 		
0x01E6	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,118 :: 		
0x01E7	0x29EC      	GOTO       $+5
;__Lib_Math.c,119 :: 		
0x01E8	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,120 :: 		
0x01E9	0x29E5      	GOTO       $-4
;__Lib_Math.c,121 :: 		
0x01EA	0x01F1      	CLRF       R1
;__Lib_Math.c,122 :: 		
0x01EB	0x3400      	RETLW      0
;__Lib_Math.c,123 :: 		
0x01EC	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,124 :: 		
0x01ED	0x29F1      	GOTO       $+4
;__Lib_Math.c,125 :: 		
0x01EE	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,126 :: 		
0x01EF	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,127 :: 		
0x01F0	0x07F1      	ADDWF      R1, 1
;__Lib_Math.c,128 :: 		
0x01F1	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,129 :: 		
0x01F2	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,130 :: 		
0x01F3	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,131 :: 		
0x01F4	0x29EE      	GOTO       $-6
;__Lib_Math.c,133 :: 		
;__Lib_Math.c,134 :: 		
L_end_Mul_8X8_U:
0x01F5	0x0008      	RETURN
; end of _Mul_8X8_U
_RES032:
;__Lib_MathDouble.c,123 :: 		
;__Lib_MathDouble.c,128 :: 		
0x01F6	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,129 :: 		
0x01F7	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,130 :: 		
0x01F8	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,131 :: 		
0x01F9	0x01F8      	CLRF       R8
;__Lib_MathDouble.c,132 :: 		
0x01FA	0x01F3      	CLRF       R3
;__Lib_MathDouble.c,133 :: 		
0x01FB	0x3000      	MOVLW      0
;__Lib_MathDouble.c,135 :: 		
L_end_RES032:
0x01FC	0x0008      	RETURN
; end of _RES032
_SETFUN32:
;__Lib_MathDouble.c,138 :: 		
;__Lib_MathDouble.c,145 :: 		
0x01FD	0x157B      	BSF        R11, 2
;__Lib_MathDouble.c,146 :: 		
0x01FE	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.c,147 :: 		
0x01FF	0x2A07      	GOTO       SETFUN32EEE
;__Lib_MathDouble.c,148 :: 		
0x0200	0x3001      	MOVLW      1
;__Lib_MathDouble.c,149 :: 		
0x0201	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,150 :: 		
0x0202	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,151 :: 		
0x0203	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,152 :: 		
0x0204	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,153 :: 		
0x0205	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.c,154 :: 		
0x0206	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,155 :: 		
SETFUN32EEE:
;__Lib_MathDouble.c,156 :: 		
0x0207	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,158 :: 		
L_end_SETFUN32:
0x0208	0x0008      	RETURN
; end of _SETFUN32
_Mul_32x32_U:
;__Lib_Math.c,1766 :: 		
;__Lib_Math.c,1781 :: 		
0x0209	0x0140      	MOVLB      0
;__Lib_Math.c,1782 :: 		
0x020A	0x3022      	MOVLW      34
;__Lib_Math.c,1783 :: 		
0x020B	0x00FC      	MOVWF      R12
;__Lib_Math.c,1784 :: 		
0x020C	0x01F8      	CLRF       R8
;__Lib_Math.c,1785 :: 		
0x020D	0x01F9      	CLRF       R9
;__Lib_Math.c,1786 :: 		
0x020E	0x01FA      	CLRF       R10
;__Lib_Math.c,1787 :: 		
0x020F	0x01FB      	CLRF       R11
;__Lib_Math.c,1789 :: 		
_NEXT:
;__Lib_Math.c,1793 :: 		
0x0210	0x03FC      	DECF       R12, 1
;__Lib_Math.c,1794 :: 		
0x0211	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1795 :: 		
0x0212	0x2A3E      	GOTO       _EXIT2
;__Lib_Math.c,1796 :: 		
0x0213	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,1798 :: 		
_LOOP:
;__Lib_Math.c,1807 :: 		
0x0214	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,1808 :: 		
0x0215	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,1809 :: 		
0x0216	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,1810 :: 		
0x0217	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,1811 :: 		
0x0218	0x0CF3      	RRF        R3, 1
;__Lib_Math.c,1812 :: 		
0x0219	0x0CF2      	RRF        R2, 1
;__Lib_Math.c,1813 :: 		
0x021A	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,1814 :: 		
0x021B	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,1819 :: 		
0x021C	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1820 :: 		
0x021D	0x2A10      	GOTO       _NEXT
;__Lib_Math.c,1821 :: 		
0x021E	0x03FC      	DECF       R12, 1
;__Lib_Math.c,1822 :: 		
0x021F	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1823 :: 		
0x0220	0x2A30      	GOTO       _EXIT1
;__Lib_Math.c,1830 :: 		
0x0221	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1831 :: 		
0x0222	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1832 :: 		
0x0223	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1833 :: 		
0x0224	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1834 :: 		
0x0225	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1835 :: 		
0x0226	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1836 :: 		
0x0227	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1837 :: 		
0x0228	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1838 :: 		
0x0229	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1839 :: 		
0x022A	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1840 :: 		
0x022B	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1841 :: 		
0x022C	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1842 :: 		
0x022D	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1843 :: 		
0x022E	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1845 :: 		
0x022F	0x2A14      	GOTO       _LOOP
;__Lib_Math.c,1847 :: 		
_EXIT1:
;__Lib_Math.c,1852 :: 		
0x0230	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1853 :: 		
0x0231	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1854 :: 		
0x0232	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1855 :: 		
0x0233	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1856 :: 		
0x0234	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1857 :: 		
0x0235	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1858 :: 		
0x0236	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1859 :: 		
0x0237	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1860 :: 		
0x0238	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1861 :: 		
0x0239	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1862 :: 		
0x023A	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1863 :: 		
0x023B	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1864 :: 		
0x023C	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1865 :: 		
0x023D	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1868 :: 		
_EXIT2:
;__Lib_Math.c,1870 :: 		
L_end_Mul_32x32_U:
0x023E	0x0008      	RETURN
; end of _Mul_32x32_U
_oled_wr_str_s:
;oled_control.c,117 :: 		void oled_wr_str_s(char page, char col, char str[], char len) {  //  128*64 OLED
;oled_control.c,119 :: 		set_addressing (page, col);
0x023F	0x0144      	MOVLB      4
0x0240	0x0839      	MOVF       FARG_oled_wr_str_s_page, 0
0x0241	0x00C1      	MOVWF      FARG_set_addressing_pagenum
0x0242	0x083A      	MOVF       FARG_oled_wr_str_s_col, 0
0x0243	0x00C2      	MOVWF      FARG_set_addressing_c_start
0x0244	0x218A      	CALL       _set_addressing
;oled_control.c,121 :: 		for (i = 0; i < len; i++) { // write string
0x0245	0x0144      	MOVLB      4
0x0246	0x01BE      	CLRF       oled_wr_str_s_i_L0
L_oled_wr_str_s10:
0x0247	0x083D      	MOVF       FARG_oled_wr_str_s_len, 0
0x0248	0x023E      	SUBWF      oled_wr_str_s_i_L0, 0
0x0249	0x1803      	BTFSC      STATUS, 0
0x024A	0x2A74      	GOTO       L_oled_wr_str_s11
;oled_control.c,122 :: 		g = str[i] - 32; // table shift
0x024B	0x083E      	MOVF       oled_wr_str_s_i_L0, 0
0x024C	0x073B      	ADDWF      FARG_oled_wr_str_s_str, 0
0x024D	0x0084      	MOVWF      FSR0
0x024E	0x3000      	MOVLW      0
0x024F	0x3D3C      	ADDWFC     FARG_oled_wr_str_s_str+1, 0
0x0250	0x0085      	MOVWF      FSR0H
0x0251	0x3020      	MOVLW      32
0x0252	0x0200      	SUBWF      INDF0, 0
0x0253	0x00C0      	MOVWF      oled_wr_str_s_g_L0
;oled_control.c,123 :: 		for (h = 0; h < 5; h++) {  // write letter
0x0254	0x01BF      	CLRF       oled_wr_str_s_h_L0
L_oled_wr_str_s13:
0x0255	0x3005      	MOVLW      5
0x0256	0x023F      	SUBWF      oled_wr_str_s_h_L0, 0
0x0257	0x1803      	BTFSC      STATUS, 0
0x0258	0x2A6F      	GOTO       L_oled_wr_str_s14
;oled_control.c,124 :: 		Soft_I2C_Write(font_5x8[g*5+h]);
0x0259	0x0840      	MOVF       oled_wr_str_s_g_L0, 0
0x025A	0x00F0      	MOVWF      R0
0x025B	0x3005      	MOVLW      5
0x025C	0x00F4      	MOVWF      R4
0x025D	0x21DE      	CALL       _Mul_8X8_U
0x025E	0x0144      	MOVLB      4
0x025F	0x083F      	MOVF       oled_wr_str_s_h_L0, 0
0x0260	0x07F0      	ADDWF      R0, 1
0x0261	0x3000      	MOVLW      0
0x0262	0x3DF1      	ADDWFC     R1, 1
0x0263	0x301B      	MOVLW      oled_control_font_5x8
0x0264	0x0770      	ADDWF      R0, 0
0x0265	0x0084      	MOVWF      FSR0
0x0266	0x309E      	MOVLW      hi_addr(oled_control_font_5x8)
0x0267	0x3D71      	ADDWFC     R1, 0
0x0268	0x0085      	MOVWF      FSR0H
0x0269	0x0800      	MOVF       INDF0, 0
0x026A	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x026B	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,123 :: 		for (h = 0; h < 5; h++) {  // write letter
0x026C	0x0144      	MOVLB      4
0x026D	0x0ABF      	INCF       oled_wr_str_s_h_L0, 1
;oled_control.c,125 :: 		}
0x026E	0x2A55      	GOTO       L_oled_wr_str_s13
L_oled_wr_str_s14:
;oled_control.c,126 :: 		Soft_I2C_Write (0);
0x026F	0x01C6      	CLRF       FARG_Soft_I2C_Write_d
0x0270	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,121 :: 		for (i = 0; i < len; i++) { // write string
0x0271	0x0144      	MOVLB      4
0x0272	0x0ABE      	INCF       oled_wr_str_s_i_L0, 1
;oled_control.c,127 :: 		}
0x0273	0x2A47      	GOTO       L_oled_wr_str_s10
L_oled_wr_str_s11:
;oled_control.c,128 :: 		Soft_I2C_Stop ();
0x0274	0x21CA      	CALL       _Soft_I2C_Stop
;oled_control.c,129 :: 		return;
;oled_control.c,130 :: 		}
L_end_oled_wr_str_s:
0x0275	0x0008      	RETURN
; end of _oled_wr_str_s
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x0276	0x303A      	MOVLW      58
0x0277	0x00FD      	MOVWF      R13
L_Delay_22us2:
0x0278	0x0BFD      	DECFSZ     R13, 1
0x0279	0x2A78      	GOTO       L_Delay_22us2
0x027A	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x027B	0x0008      	RETURN
; end of _Delay_22us
_oled_clear:
;oled_control.c,73 :: 		void oled_clear(void){
;oled_control.c,76 :: 		Soft_I2C_Start();
0x027C	0x2139      	CALL       _Soft_I2C_Start
;oled_control.c,77 :: 		Soft_I2C_Write(oled_addr);             // device addres
0x027D	0x0141      	MOVLB      1
0x027E	0x0828      	MOVF       oled_control_oled_addr, 0
0x027F	0x0144      	MOVLB      4
0x0280	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0281	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,78 :: 		Soft_I2C_Write(64);              // 0 - continious mode, command; 64 - Co, data
0x0282	0x3040      	MOVLW      64
0x0283	0x0144      	MOVLB      4
0x0284	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0285	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,80 :: 		for (r = 0; r <=7; r++) {
0x0286	0x0144      	MOVLB      4
0x0287	0x01BA      	CLRF       oled_clear_r_L0
L_oled_clear2:
0x0288	0x083A      	MOVF       oled_clear_r_L0, 0
0x0289	0x3C07      	SUBLW      7
0x028A	0x1C03      	BTFSS      STATUS, 0
0x028B	0x2A9E      	GOTO       L_oled_clear3
;oled_control.c,81 :: 		set_addressing (r, 0);    // clear all 8 pages
0x028C	0x083A      	MOVF       oled_clear_r_L0, 0
0x028D	0x00C1      	MOVWF      FARG_set_addressing_pagenum
0x028E	0x01C2      	CLRF       FARG_set_addressing_c_start
0x028F	0x218A      	CALL       _set_addressing
;oled_control.c,82 :: 		for (i = 0; i < 128; i++, Soft_I2C_Write(0x00)); // clear one page pixels
0x0290	0x0144      	MOVLB      4
0x0291	0x01B9      	CLRF       oled_clear_i_L0
L_oled_clear5:
0x0292	0x0144      	MOVLB      4
0x0293	0x3080      	MOVLW      128
0x0294	0x0239      	SUBWF      oled_clear_i_L0, 0
0x0295	0x1803      	BTFSC      STATUS, 0
0x0296	0x2A9B      	GOTO       L_oled_clear6
0x0297	0x0AB9      	INCF       oled_clear_i_L0, 1
0x0298	0x01C6      	CLRF       FARG_Soft_I2C_Write_d
0x0299	0x2153      	CALL       _Soft_I2C_Write
0x029A	0x2A92      	GOTO       L_oled_clear5
L_oled_clear6:
;oled_control.c,80 :: 		for (r = 0; r <=7; r++) {
0x029B	0x0144      	MOVLB      4
0x029C	0x0ABA      	INCF       oled_clear_r_L0, 1
;oled_control.c,83 :: 		}
0x029D	0x2A88      	GOTO       L_oled_clear2
L_oled_clear3:
;oled_control.c,84 :: 		Soft_I2C_Stop ();
0x029E	0x21CA      	CALL       _Soft_I2C_Stop
;oled_control.c,86 :: 		return;
;oled_control.c,87 :: 		}
L_end_oled_clear:
0x029F	0x0008      	RETURN
; end of _oled_clear
_FIXSIGN32:
;__Lib_MathDouble.c,112 :: 		
;__Lib_MathDouble.c,116 :: 		
0x02A0	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,117 :: 		
0x02A1	0x13F2      	BCF        R2, 7
;__Lib_MathDouble.c,118 :: 		
0x02A2	0x3000      	MOVLW      0
;__Lib_MathDouble.c,120 :: 		
L_end_FIXSIGN32:
0x02A3	0x0008      	RETURN
; end of _FIXSIGN32
_send_command:
;oled_control.c,89 :: 		void send_command (char oled_command) {
;oled_control.c,90 :: 		Soft_I2C_Start();
0x02A4	0x2139      	CALL       _Soft_I2C_Start
;oled_control.c,91 :: 		Soft_I2C_Write(oled_addr);         // device addres
0x02A5	0x0141      	MOVLB      1
0x02A6	0x0828      	MOVF       oled_control_oled_addr, 0
0x02A7	0x0144      	MOVLB      4
0x02A8	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x02A9	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,92 :: 		Soft_I2C_Write(128);              // 128 - command, 192 - data
0x02AA	0x3080      	MOVLW      128
0x02AB	0x0144      	MOVLB      4
0x02AC	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x02AD	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,93 :: 		Soft_I2C_Write(oled_command);
0x02AE	0x0144      	MOVLB      4
0x02AF	0x0839      	MOVF       FARG_send_command_oled_command, 0
0x02B0	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x02B1	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,94 :: 		Soft_I2C_Stop();
0x02B2	0x21CA      	CALL       _Soft_I2C_Stop
;oled_control.c,95 :: 		return;
;oled_control.c,96 :: 		}
L_end_send_command:
0x02B3	0x0008      	RETURN
; end of _send_command
_Greating:
;main.c,373 :: 		void Greating(){
;main.c,374 :: 		Green = 0;
0x02B4	0x0140      	MOVLB      0
0x02B5	0x1197      	BCF        LATB3_bit, BitPos(LATB3_bit+0)
;main.c,375 :: 		oled_clear();
0x02B6	0x227C      	CALL       _oled_clear
;main.c,376 :: 		oled_wr_str_s(0, 0, " DESIGNED BY N7DDC", 18);
0x02B7	0x0144      	MOVLB      4
0x02B8	0x01B9      	CLRF       FARG_oled_wr_str_s_page
0x02B9	0x01BA      	CLRF       FARG_oled_wr_str_s_col
0x02BA	0x3020      	MOVLW      ?lstr22_main
0x02BB	0x00BB      	MOVWF      FARG_oled_wr_str_s_str
0x02BC	0x3001      	MOVLW      hi_addr(?lstr22_main)
0x02BD	0x00BC      	MOVWF      FARG_oled_wr_str_s_str+1
0x02BE	0x3012      	MOVLW      18
0x02BF	0x00BD      	MOVWF      FARG_oled_wr_str_s_len
0x02C0	0x223F      	CALL       _oled_wr_str_s
;main.c,377 :: 		oled_wr_str_s(2, 0, " FW VERSION ", 12);
0x02C1	0x3002      	MOVLW      2
0x02C2	0x0144      	MOVLB      4
0x02C3	0x00B9      	MOVWF      FARG_oled_wr_str_s_page
0x02C4	0x01BA      	CLRF       FARG_oled_wr_str_s_col
0x02C5	0x303D      	MOVLW      ?lstr23_main
0x02C6	0x00BB      	MOVWF      FARG_oled_wr_str_s_str
0x02C7	0x3001      	MOVLW      hi_addr(?lstr23_main)
0x02C8	0x00BC      	MOVWF      FARG_oled_wr_str_s_str+1
0x02C9	0x300C      	MOVLW      12
0x02CA	0x00BD      	MOVWF      FARG_oled_wr_str_s_len
0x02CB	0x223F      	CALL       _oled_wr_str_s
;main.c,378 :: 		oled_wr_str_s(2, 12*7, FW_VER, 3);
0x02CC	0x3002      	MOVLW      2
0x02CD	0x0144      	MOVLB      4
0x02CE	0x00B9      	MOVWF      FARG_oled_wr_str_s_page
0x02CF	0x3054      	MOVLW      84
0x02D0	0x00BA      	MOVWF      FARG_oled_wr_str_s_col
0x02D1	0x30E8      	MOVLW      ?lstr24_main
0x02D2	0x00BB      	MOVWF      FARG_oled_wr_str_s_str
0x02D3	0x3000      	MOVLW      hi_addr(?lstr24_main)
0x02D4	0x00BC      	MOVWF      FARG_oled_wr_str_s_str+1
0x02D5	0x3003      	MOVLW      3
0x02D6	0x00BD      	MOVWF      FARG_oled_wr_str_s_len
0x02D7	0x223F      	CALL       _oled_wr_str_s
;main.c,379 :: 		Delay_ms(3000);
0x02D8	0x307A      	MOVLW      122
0x02D9	0x00FB      	MOVWF      R11
0x02DA	0x30C1      	MOVLW      193
0x02DB	0x00FC      	MOVWF      R12
0x02DC	0x3081      	MOVLW      129
0x02DD	0x00FD      	MOVWF      R13
L_Greating87:
0x02DE	0x0BFD      	DECFSZ     R13, 1
0x02DF	0x2ADE      	GOTO       L_Greating87
0x02E0	0x0BFC      	DECFSZ     R12, 1
0x02E1	0x2ADE      	GOTO       L_Greating87
0x02E2	0x0BFB      	DECFSZ     R11, 1
0x02E3	0x2ADE      	GOTO       L_Greating87
0x02E4	0x0000      	NOP
0x02E5	0x0000      	NOP
;main.c,380 :: 		while(GetButton) asm NOP;
L_Greating88:
0x02E6	0x1A8D      	BTFSC      PORTB, 5
0x02E7	0x2AEA      	GOTO       L__Greating282
0x02E8	0x1403      	BSF        STATUS, 0
0x02E9	0x2AEB      	GOTO       L__Greating283
L__Greating282:
0x02EA	0x1003      	BCF        STATUS, 0
L__Greating283:
0x02EB	0x1C03      	BTFSS      STATUS, 0
0x02EC	0x2AEF      	GOTO       L_Greating89
0x02ED	0x0000      	NOP
0x02EE	0x2AE6      	GOTO       L_Greating88
L_Greating89:
;main.c,381 :: 		Green = 1;
0x02EF	0x1597      	BSF        LATB3_bit, BitPos(LATB3_bit+0)
;main.c,382 :: 		return;
;main.c,383 :: 		}
L_end_Greating:
0x02F0	0x0008      	RETURN
; end of _Greating
_ADC_Init_Advanced:
;__Lib_ADC_18xxx.c,39 :: 		
;__Lib_ADC_18xxx.c,40 :: 		
0x02F1	0x30A2      	MOVLW      _ADC_Get_Sample
0x02F2	0x0143      	MOVLB      3
0x02F3	0x00BD      	MOVWF      _ADC_Get_Sample_Ptr
0x02F4	0x3004      	MOVLW      hi_addr(_ADC_Get_Sample)
0x02F5	0x00BE      	MOVWF      _ADC_Get_Sample_Ptr+1
0x02F6	0x302F      	MOVLW      FARG_ADC_Get_Sample_channel
0x02F7	0x00BF      	MOVWF      _ADC_Get_Sample_Ptr+2
0x02F8	0x3002      	MOVLW      hi_addr(FARG_ADC_Get_Sample_channel)
0x02F9	0x00C0      	MOVWF      _ADC_Get_Sample_Ptr+3
;__Lib_ADC_18xxx.c,42 :: 		
0x02FA	0x0141      	MOVLB      1
0x02FB	0x0193      	CLRF       ADCON0
;__Lib_ADC_18xxx.c,43 :: 		
0x02FC	0x0194      	CLRF       ADCON1
;__Lib_ADC_18xxx.c,44 :: 		
0x02FD	0x0195      	CLRF       ADCON2
;__Lib_ADC_18xxx.c,45 :: 		
0x02FE	0x0196      	CLRF       ADCON3
;__Lib_ADC_18xxx.c,47 :: 		
0x02FF	0x30EC      	MOVLW      236
0x0300	0x059A      	ANDWF      ADREF, 1
;__Lib_ADC_18xxx.c,48 :: 		
0x0301	0x3013      	MOVLW      19
0x0302	0x0144      	MOVLB      4
0x0303	0x052F      	ANDWF      FARG_ADC_Init_Advanced_reference, 0
0x0304	0x00F0      	MOVWF      R0
0x0305	0x0870      	MOVF       R0, 0
0x0306	0x0141      	MOVLB      1
0x0307	0x049A      	IORWF       ADREF, 1
;__Lib_ADC_18xxx.c,50 :: 		
0x0308	0x30C0      	MOVLW      192
0x0309	0x0144      	MOVLB      4
0x030A	0x052F      	ANDWF      FARG_ADC_Init_Advanced_reference, 0
0x030B	0x00F0      	MOVWF      R0
0x030C	0x1903      	BTFSC      STATUS, 2
0x030D	0x2B24      	GOTO       L_ADC_Init_Advanced0
;__Lib_ADC_18xxx.c,51 :: 		
0x030E	0x30C0      	MOVLW      192
0x030F	0x052F      	ANDWF      FARG_ADC_Init_Advanced_reference, 0
0x0310	0x00F2      	MOVWF      R2
0x0311	0x3006      	MOVLW      6
0x0312	0x00F1      	MOVWF      R1
0x0313	0x0872      	MOVF       R2, 0
0x0314	0x00F0      	MOVWF      R0
0x0315	0x0871      	MOVF       R1, 0
L__ADC_Init_Advanced8:
0x0316	0x1903      	BTFSC      STATUS, 2
0x0317	0x2B1B      	GOTO       L__ADC_Init_Advanced9
0x0318	0x36F0      	LSRF       R0, 1
0x0319	0x3EFF      	ADDLW      255
0x031A	0x2B16      	GOTO       L__ADC_Init_Advanced8
L__ADC_Init_Advanced9:
0x031B	0x0870      	MOVF       R0, 0
0x031C	0x0152      	MOVLB      18
0x031D	0x008C      	MOVWF      FVRCON
;__Lib_ADC_18xxx.c,52 :: 		
0x031E	0x178C      	BSF        FVRCON, 7
;__Lib_ADC_18xxx.c,53 :: 		
L_ADC_Init_Advanced1:
0x031F	0x1B0C      	BTFSC      FVRCON, 6
0x0320	0x2B23      	GOTO       L_ADC_Init_Advanced2
;__Lib_ADC_18xxx.c,54 :: 		
0x0321	0x0000      	NOP
0x0322	0x2B1F      	GOTO       L_ADC_Init_Advanced1
L_ADC_Init_Advanced2:
;__Lib_ADC_18xxx.c,55 :: 		
0x0323	0x2B27      	GOTO       L_ADC_Init_Advanced3
L_ADC_Init_Advanced0:
0x0324	0x0152      	MOVLB      18
;__Lib_ADC_18xxx.c,57 :: 		
0x0325	0x30FC      	MOVLW      252
0x0326	0x058C      	ANDWF      FVRCON, 1
L_ADC_Init_Advanced3:
;__Lib_ADC_18xxx.c,59 :: 		
0x0327	0x0141      	MOVLB      1
0x0328	0x1613      	BSF        ADCON0, 4
;__Lib_ADC_18xxx.c,60 :: 		
0x0329	0x1513      	BSF        ADCON0, 2
;__Lib_ADC_18xxx.c,61 :: 		
0x032A	0x1793      	BSF        ADCON0, 7
;__Lib_ADC_18xxx.c,62 :: 		
L_end_ADC_Init_Advanced:
0x032B	0x0008      	RETURN
; end of _ADC_Init_Advanced
_oled_wr_str:
;oled_control.c,133 :: 		void oled_wr_str (char page, char col, char str[], char leng ) {  //
;oled_control.c,135 :: 		Soft_I2C_Start();
0x032C	0x2139      	CALL       _Soft_I2C_Start
;oled_control.c,136 :: 		Soft_I2C_Write(oled_addr);       // device addres
0x032D	0x0141      	MOVLB      1
0x032E	0x0828      	MOVF       oled_control_oled_addr, 0
0x032F	0x0144      	MOVLB      4
0x0330	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0331	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,137 :: 		Soft_I2C_Write(64);              // 0 - continious mode, command; 64 - Co, data
0x0332	0x3040      	MOVLW      64
0x0333	0x0144      	MOVLB      4
0x0334	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0335	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,139 :: 		set_addressing (page, col);
0x0336	0x0144      	MOVLB      4
0x0337	0x082F      	MOVF       FARG_oled_wr_str_page, 0
0x0338	0x00C1      	MOVWF      FARG_set_addressing_pagenum
0x0339	0x0830      	MOVF       FARG_oled_wr_str_col, 0
0x033A	0x00C2      	MOVWF      FARG_set_addressing_c_start
0x033B	0x218A      	CALL       _set_addressing
;oled_control.c,141 :: 		for (i = 0; i < leng; i++) { // write string
0x033C	0x0144      	MOVLB      4
0x033D	0x01B4      	CLRF       oled_wr_str_i_L0
L_oled_wr_str16:
0x033E	0x0833      	MOVF       FARG_oled_wr_str_leng, 0
0x033F	0x0234      	SUBWF      oled_wr_str_i_L0, 0
0x0340	0x1803      	BTFSC      STATUS, 0
0x0341	0x2BCD      	GOTO       L_oled_wr_str17
;oled_control.c,142 :: 		if (str[i] == 0) g = 0; else g = str[i] - 32; // NULL detection
0x0342	0x0834      	MOVF       oled_wr_str_i_L0, 0
0x0343	0x0731      	ADDWF      FARG_oled_wr_str_str, 0
0x0344	0x0084      	MOVWF      FSR0
0x0345	0x3000      	MOVLW      0
0x0346	0x3D32      	ADDWFC     FARG_oled_wr_str_str+1, 0
0x0347	0x0085      	MOVWF      FSR0H
0x0348	0x0800      	MOVF       INDF0, 0
0x0349	0x3A00      	XORLW      0
0x034A	0x1D03      	BTFSS      STATUS, 2
0x034B	0x2B4E      	GOTO       L_oled_wr_str19
0x034C	0x01B6      	CLRF       oled_wr_str_g_L0
0x034D	0x2B57      	GOTO       L_oled_wr_str20
L_oled_wr_str19:
0x034E	0x0834      	MOVF       oled_wr_str_i_L0, 0
0x034F	0x0731      	ADDWF      FARG_oled_wr_str_str, 0
0x0350	0x0084      	MOVWF      FSR0
0x0351	0x3000      	MOVLW      0
0x0352	0x3D32      	ADDWFC     FARG_oled_wr_str_str+1, 0
0x0353	0x0085      	MOVWF      FSR0H
0x0354	0x3020      	MOVLW      32
0x0355	0x0200      	SUBWF      INDF0, 0
0x0356	0x00B6      	MOVWF      oled_wr_str_g_L0
L_oled_wr_str20:
;oled_control.c,143 :: 		for (h = 0; h <= 4; h++) {  // write letter
0x0357	0x01B5      	CLRF       oled_wr_str_h_L0
L_oled_wr_str21:
0x0358	0x0835      	MOVF       oled_wr_str_h_L0, 0
0x0359	0x3C04      	SUBLW      4
0x035A	0x1C03      	BTFSS      STATUS, 0
0x035B	0x2BC5      	GOTO       L_oled_wr_str22
;oled_control.c,144 :: 		w1 = font_5x8[g*5+h];
0x035C	0x0836      	MOVF       oled_wr_str_g_L0, 0
0x035D	0x00F0      	MOVWF      R0
0x035E	0x3005      	MOVLW      5
0x035F	0x00F4      	MOVWF      R4
0x0360	0x21DE      	CALL       _Mul_8X8_U
0x0361	0x0144      	MOVLB      4
0x0362	0x0835      	MOVF       oled_wr_str_h_L0, 0
0x0363	0x07F0      	ADDWF      R0, 1
0x0364	0x3000      	MOVLW      0
0x0365	0x3DF1      	ADDWFC     R1, 1
0x0366	0x301B      	MOVLW      oled_control_font_5x8
0x0367	0x0770      	ADDWF      R0, 0
0x0368	0x0084      	MOVWF      FSR0
0x0369	0x309E      	MOVLW      hi_addr(oled_control_font_5x8)
0x036A	0x3D71      	ADDWFC     R1, 0
0x036B	0x0085      	MOVWF      FSR0H
0x036C	0x0800      	MOVF       INDF0, 0
0x036D	0x00B7      	MOVWF      oled_wr_str_w1_L0
;oled_control.c,145 :: 		if(page != 2) {
0x036E	0x082F      	MOVF       FARG_oled_wr_str_page, 0
0x036F	0x3A02      	XORLW      2
0x0370	0x1903      	BTFSC      STATUS, 2
0x0371	0x2B9B      	GOTO       L_oled_wr_str24
;oled_control.c,146 :: 		w2.B7 = w1.B3;
0x0372	0x19B7      	BTFSC      oled_wr_str_w1_L0, 3
0x0373	0x2B76      	GOTO       L__oled_wr_str68
0x0374	0x13B8      	BCF        oled_wr_str_w2_L0, 7
0x0375	0x2B77      	GOTO       L__oled_wr_str69
L__oled_wr_str68:
0x0376	0x17B8      	BSF        oled_wr_str_w2_L0, 7
L__oled_wr_str69:
;oled_control.c,147 :: 		w2.B6 = w1.B3;
0x0377	0x19B7      	BTFSC      oled_wr_str_w1_L0, 3
0x0378	0x2B7B      	GOTO       L__oled_wr_str70
0x0379	0x1338      	BCF        oled_wr_str_w2_L0, 6
0x037A	0x2B7C      	GOTO       L__oled_wr_str71
L__oled_wr_str70:
0x037B	0x1738      	BSF        oled_wr_str_w2_L0, 6
L__oled_wr_str71:
;oled_control.c,148 :: 		w2.B5 = w1.B2;
0x037C	0x1937      	BTFSC      oled_wr_str_w1_L0, 2
0x037D	0x2B80      	GOTO       L__oled_wr_str72
0x037E	0x12B8      	BCF        oled_wr_str_w2_L0, 5
0x037F	0x2B81      	GOTO       L__oled_wr_str73
L__oled_wr_str72:
0x0380	0x16B8      	BSF        oled_wr_str_w2_L0, 5
L__oled_wr_str73:
;oled_control.c,149 :: 		w2.B4 = w1.B2;
0x0381	0x1937      	BTFSC      oled_wr_str_w1_L0, 2
0x0382	0x2B85      	GOTO       L__oled_wr_str74
0x0383	0x1238      	BCF        oled_wr_str_w2_L0, 4
0x0384	0x2B86      	GOTO       L__oled_wr_str75
L__oled_wr_str74:
0x0385	0x1638      	BSF        oled_wr_str_w2_L0, 4
L__oled_wr_str75:
;oled_control.c,150 :: 		w2.B3 = w1.B1;
0x0386	0x18B7      	BTFSC      oled_wr_str_w1_L0, 1
0x0387	0x2B8A      	GOTO       L__oled_wr_str76
0x0388	0x11B8      	BCF        oled_wr_str_w2_L0, 3
0x0389	0x2B8B      	GOTO       L__oled_wr_str77
L__oled_wr_str76:
0x038A	0x15B8      	BSF        oled_wr_str_w2_L0, 3
L__oled_wr_str77:
;oled_control.c,151 :: 		w2.B2 = w1.B1;
0x038B	0x18B7      	BTFSC      oled_wr_str_w1_L0, 1
0x038C	0x2B8F      	GOTO       L__oled_wr_str78
0x038D	0x1138      	BCF        oled_wr_str_w2_L0, 2
0x038E	0x2B90      	GOTO       L__oled_wr_str79
L__oled_wr_str78:
0x038F	0x1538      	BSF        oled_wr_str_w2_L0, 2
L__oled_wr_str79:
;oled_control.c,152 :: 		w2.B1 = w1.B0;
0x0390	0x1837      	BTFSC      oled_wr_str_w1_L0, 0
0x0391	0x2B94      	GOTO       L__oled_wr_str80
0x0392	0x10B8      	BCF        oled_wr_str_w2_L0, 1
0x0393	0x2B95      	GOTO       L__oled_wr_str81
L__oled_wr_str80:
0x0394	0x14B8      	BSF        oled_wr_str_w2_L0, 1
L__oled_wr_str81:
;oled_control.c,153 :: 		w2.B0 = w1.B0; }
0x0395	0x1837      	BTFSC      oled_wr_str_w1_L0, 0
0x0396	0x2B99      	GOTO       L__oled_wr_str82
0x0397	0x1038      	BCF        oled_wr_str_w2_L0, 0
0x0398	0x2B9A      	GOTO       L__oled_wr_str83
L__oled_wr_str82:
0x0399	0x1438      	BSF        oled_wr_str_w2_L0, 0
L__oled_wr_str83:
0x039A	0x2BBB      	GOTO       L_oled_wr_str25
L_oled_wr_str24:
;oled_control.c,155 :: 		w2.B7 = w1.B2;
0x039B	0x1937      	BTFSC      oled_wr_str_w1_L0, 2
0x039C	0x2B9F      	GOTO       L__oled_wr_str84
0x039D	0x13B8      	BCF        oled_wr_str_w2_L0, 7
0x039E	0x2BA0      	GOTO       L__oled_wr_str85
L__oled_wr_str84:
0x039F	0x17B8      	BSF        oled_wr_str_w2_L0, 7
L__oled_wr_str85:
;oled_control.c,156 :: 		w2.B6 = w1.B2;
0x03A0	0x1937      	BTFSC      oled_wr_str_w1_L0, 2
0x03A1	0x2BA4      	GOTO       L__oled_wr_str86
0x03A2	0x1338      	BCF        oled_wr_str_w2_L0, 6
0x03A3	0x2BA5      	GOTO       L__oled_wr_str87
L__oled_wr_str86:
0x03A4	0x1738      	BSF        oled_wr_str_w2_L0, 6
L__oled_wr_str87:
;oled_control.c,157 :: 		w2.B5 = w1.B1;
0x03A5	0x18B7      	BTFSC      oled_wr_str_w1_L0, 1
0x03A6	0x2BA9      	GOTO       L__oled_wr_str88
0x03A7	0x12B8      	BCF        oled_wr_str_w2_L0, 5
0x03A8	0x2BAA      	GOTO       L__oled_wr_str89
L__oled_wr_str88:
0x03A9	0x16B8      	BSF        oled_wr_str_w2_L0, 5
L__oled_wr_str89:
;oled_control.c,158 :: 		w2.B4 = w1.B1;
0x03AA	0x18B7      	BTFSC      oled_wr_str_w1_L0, 1
0x03AB	0x2BAE      	GOTO       L__oled_wr_str90
0x03AC	0x1238      	BCF        oled_wr_str_w2_L0, 4
0x03AD	0x2BAF      	GOTO       L__oled_wr_str91
L__oled_wr_str90:
0x03AE	0x1638      	BSF        oled_wr_str_w2_L0, 4
L__oled_wr_str91:
;oled_control.c,159 :: 		w2.B3 = w1.B0;
0x03AF	0x1837      	BTFSC      oled_wr_str_w1_L0, 0
0x03B0	0x2BB3      	GOTO       L__oled_wr_str92
0x03B1	0x11B8      	BCF        oled_wr_str_w2_L0, 3
0x03B2	0x2BB4      	GOTO       L__oled_wr_str93
L__oled_wr_str92:
0x03B3	0x15B8      	BSF        oled_wr_str_w2_L0, 3
L__oled_wr_str93:
;oled_control.c,160 :: 		w2.B2 = w1.B0;
0x03B4	0x1837      	BTFSC      oled_wr_str_w1_L0, 0
0x03B5	0x2BB8      	GOTO       L__oled_wr_str94
0x03B6	0x1138      	BCF        oled_wr_str_w2_L0, 2
0x03B7	0x2BB9      	GOTO       L__oled_wr_str95
L__oled_wr_str94:
0x03B8	0x1538      	BSF        oled_wr_str_w2_L0, 2
L__oled_wr_str95:
;oled_control.c,161 :: 		w2.B1 = 0;
0x03B9	0x10B8      	BCF        oled_wr_str_w2_L0, 1
;oled_control.c,162 :: 		w2.B0 = 0;
0x03BA	0x1038      	BCF        oled_wr_str_w2_L0, 0
;oled_control.c,163 :: 		}
L_oled_wr_str25:
;oled_control.c,164 :: 		Soft_I2C_Write(w2);
0x03BB	0x0838      	MOVF       oled_wr_str_w2_L0, 0
0x03BC	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x03BD	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,165 :: 		Soft_I2C_Write(w2);
0x03BE	0x0144      	MOVLB      4
0x03BF	0x0838      	MOVF       oled_wr_str_w2_L0, 0
0x03C0	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x03C1	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,143 :: 		for (h = 0; h <= 4; h++) {  // write letter
0x03C2	0x0144      	MOVLB      4
0x03C3	0x0AB5      	INCF       oled_wr_str_h_L0, 1
;oled_control.c,166 :: 		}
0x03C4	0x2B58      	GOTO       L_oled_wr_str21
L_oled_wr_str22:
;oled_control.c,167 :: 		Soft_I2C_Write (0);
0x03C5	0x01C6      	CLRF       FARG_Soft_I2C_Write_d
0x03C6	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,168 :: 		Soft_I2C_Write (0);
0x03C7	0x0144      	MOVLB      4
0x03C8	0x01C6      	CLRF       FARG_Soft_I2C_Write_d
0x03C9	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,141 :: 		for (i = 0; i < leng; i++) { // write string
0x03CA	0x0144      	MOVLB      4
0x03CB	0x0AB4      	INCF       oled_wr_str_i_L0, 1
;oled_control.c,169 :: 		}
0x03CC	0x2B3E      	GOTO       L_oled_wr_str16
L_oled_wr_str17:
;oled_control.c,170 :: 		set_addressing (page+1, col);
0x03CD	0x0A2F      	INCF       FARG_oled_wr_str_page, 0
0x03CE	0x00C1      	MOVWF      FARG_set_addressing_pagenum
0x03CF	0x0830      	MOVF       FARG_oled_wr_str_col, 0
0x03D0	0x00C2      	MOVWF      FARG_set_addressing_c_start
0x03D1	0x218A      	CALL       _set_addressing
;oled_control.c,172 :: 		for (i = 0; i < leng; i++) { // write string
0x03D2	0x0144      	MOVLB      4
0x03D3	0x01B4      	CLRF       oled_wr_str_i_L0
L_oled_wr_str26:
0x03D4	0x0833      	MOVF       FARG_oled_wr_str_leng, 0
0x03D5	0x0234      	SUBWF      oled_wr_str_i_L0, 0
0x03D6	0x1803      	BTFSC      STATUS, 0
0x03D7	0x2C6B      	GOTO       L_oled_wr_str27
;oled_control.c,173 :: 		if (str[i] == 0) g = 0; else g = str[i] - 32; // NULL detection
0x03D8	0x0834      	MOVF       oled_wr_str_i_L0, 0
0x03D9	0x0731      	ADDWF      FARG_oled_wr_str_str, 0
0x03DA	0x0084      	MOVWF      FSR0
0x03DB	0x3000      	MOVLW      0
0x03DC	0x3D32      	ADDWFC     FARG_oled_wr_str_str+1, 0
0x03DD	0x0085      	MOVWF      FSR0H
0x03DE	0x0800      	MOVF       INDF0, 0
0x03DF	0x3A00      	XORLW      0
0x03E0	0x1D03      	BTFSS      STATUS, 2
0x03E1	0x2BE4      	GOTO       L_oled_wr_str29
0x03E2	0x01B6      	CLRF       oled_wr_str_g_L0
0x03E3	0x2BED      	GOTO       L_oled_wr_str30
L_oled_wr_str29:
0x03E4	0x0834      	MOVF       oled_wr_str_i_L0, 0
0x03E5	0x0731      	ADDWF      FARG_oled_wr_str_str, 0
0x03E6	0x0084      	MOVWF      FSR0
0x03E7	0x3000      	MOVLW      0
0x03E8	0x3D32      	ADDWFC     FARG_oled_wr_str_str+1, 0
0x03E9	0x0085      	MOVWF      FSR0H
0x03EA	0x3020      	MOVLW      32
0x03EB	0x0200      	SUBWF      INDF0, 0
0x03EC	0x00B6      	MOVWF      oled_wr_str_g_L0
L_oled_wr_str30:
;oled_control.c,174 :: 		for (h = 0; h <= 4; h++) {  // write letter
0x03ED	0x01B5      	CLRF       oled_wr_str_h_L0
L_oled_wr_str31:
0x03EE	0x0835      	MOVF       oled_wr_str_h_L0, 0
0x03EF	0x3C04      	SUBLW      4
0x03F0	0x1C03      	BTFSS      STATUS, 0
0x03F1	0x2C63      	GOTO       L_oled_wr_str32
;oled_control.c,175 :: 		w1 = font_5x8[g*5+h];
0x03F2	0x0836      	MOVF       oled_wr_str_g_L0, 0
0x03F3	0x00F0      	MOVWF      R0
0x03F4	0x3005      	MOVLW      5
0x03F5	0x00F4      	MOVWF      R4
0x03F6	0x21DE      	CALL       _Mul_8X8_U
0x03F7	0x0144      	MOVLB      4
0x03F8	0x0835      	MOVF       oled_wr_str_h_L0, 0
0x03F9	0x07F0      	ADDWF      R0, 1
0x03FA	0x3000      	MOVLW      0
0x03FB	0x3DF1      	ADDWFC     R1, 1
0x03FC	0x301B      	MOVLW      oled_control_font_5x8
0x03FD	0x0770      	ADDWF      R0, 0
0x03FE	0x0084      	MOVWF      FSR0
0x03FF	0x309E      	MOVLW      hi_addr(oled_control_font_5x8)
0x0400	0x3D71      	ADDWFC     R1, 0
0x0401	0x0085      	MOVWF      FSR0H
0x0402	0x0800      	MOVF       INDF0, 0
0x0403	0x00B7      	MOVWF      oled_wr_str_w1_L0
;oled_control.c,176 :: 		if(page != 2) {
0x0404	0x082F      	MOVF       FARG_oled_wr_str_page, 0
0x0405	0x3A02      	XORLW      2
0x0406	0x1903      	BTFSC      STATUS, 2
0x0407	0x2C31      	GOTO       L_oled_wr_str34
;oled_control.c,177 :: 		w2.B7 = w1.B7;
0x0408	0x1BB7      	BTFSC      oled_wr_str_w1_L0, 7
0x0409	0x2C0C      	GOTO       L__oled_wr_str96
0x040A	0x13B8      	BCF        oled_wr_str_w2_L0, 7
0x040B	0x2C0D      	GOTO       L__oled_wr_str97
L__oled_wr_str96:
0x040C	0x17B8      	BSF        oled_wr_str_w2_L0, 7
L__oled_wr_str97:
;oled_control.c,178 :: 		w2.B6 = w1.B7;
0x040D	0x1BB7      	BTFSC      oled_wr_str_w1_L0, 7
0x040E	0x2C11      	GOTO       L__oled_wr_str98
0x040F	0x1338      	BCF        oled_wr_str_w2_L0, 6
0x0410	0x2C12      	GOTO       L__oled_wr_str99
L__oled_wr_str98:
0x0411	0x1738      	BSF        oled_wr_str_w2_L0, 6
L__oled_wr_str99:
;oled_control.c,179 :: 		w2.B5 = w1.B6;
0x0412	0x1B37      	BTFSC      oled_wr_str_w1_L0, 6
0x0413	0x2C16      	GOTO       L__oled_wr_str100
0x0414	0x12B8      	BCF        oled_wr_str_w2_L0, 5
0x0415	0x2C17      	GOTO       L__oled_wr_str101
L__oled_wr_str100:
0x0416	0x16B8      	BSF        oled_wr_str_w2_L0, 5
L__oled_wr_str101:
;oled_control.c,180 :: 		w2.B4 = w1.B6;
0x0417	0x1B37      	BTFSC      oled_wr_str_w1_L0, 6
0x0418	0x2C1B      	GOTO       L__oled_wr_str102
0x0419	0x1238      	BCF        oled_wr_str_w2_L0, 4
0x041A	0x2C1C      	GOTO       L__oled_wr_str103
L__oled_wr_str102:
0x041B	0x1638      	BSF        oled_wr_str_w2_L0, 4
L__oled_wr_str103:
;oled_control.c,181 :: 		w2.B3 = w1.B5;
0x041C	0x1AB7      	BTFSC      oled_wr_str_w1_L0, 5
0x041D	0x2C20      	GOTO       L__oled_wr_str104
0x041E	0x11B8      	BCF        oled_wr_str_w2_L0, 3
0x041F	0x2C21      	GOTO       L__oled_wr_str105
L__oled_wr_str104:
0x0420	0x15B8      	BSF        oled_wr_str_w2_L0, 3
L__oled_wr_str105:
;oled_control.c,182 :: 		w2.B2 = w1.B5;
0x0421	0x1AB7      	BTFSC      oled_wr_str_w1_L0, 5
0x0422	0x2C25      	GOTO       L__oled_wr_str106
0x0423	0x1138      	BCF        oled_wr_str_w2_L0, 2
0x0424	0x2C26      	GOTO       L__oled_wr_str107
L__oled_wr_str106:
0x0425	0x1538      	BSF        oled_wr_str_w2_L0, 2
L__oled_wr_str107:
;oled_control.c,183 :: 		w2.B1 = w1.B4;
0x0426	0x1A37      	BTFSC      oled_wr_str_w1_L0, 4
0x0427	0x2C2A      	GOTO       L__oled_wr_str108
0x0428	0x10B8      	BCF        oled_wr_str_w2_L0, 1
0x0429	0x2C2B      	GOTO       L__oled_wr_str109
L__oled_wr_str108:
0x042A	0x14B8      	BSF        oled_wr_str_w2_L0, 1
L__oled_wr_str109:
;oled_control.c,184 :: 		w2.B0 = w1.B4; }
0x042B	0x1A37      	BTFSC      oled_wr_str_w1_L0, 4
0x042C	0x2C2F      	GOTO       L__oled_wr_str110
0x042D	0x1038      	BCF        oled_wr_str_w2_L0, 0
0x042E	0x2C30      	GOTO       L__oled_wr_str111
L__oled_wr_str110:
0x042F	0x1438      	BSF        oled_wr_str_w2_L0, 0
L__oled_wr_str111:
0x0430	0x2C59      	GOTO       L_oled_wr_str35
L_oled_wr_str34:
;oled_control.c,186 :: 		w2.B7 = w1.B6;
0x0431	0x1B37      	BTFSC      oled_wr_str_w1_L0, 6
0x0432	0x2C35      	GOTO       L__oled_wr_str112
0x0433	0x13B8      	BCF        oled_wr_str_w2_L0, 7
0x0434	0x2C36      	GOTO       L__oled_wr_str113
L__oled_wr_str112:
0x0435	0x17B8      	BSF        oled_wr_str_w2_L0, 7
L__oled_wr_str113:
;oled_control.c,187 :: 		w2.B6 = w1.B6;
0x0436	0x1B37      	BTFSC      oled_wr_str_w1_L0, 6
0x0437	0x2C3A      	GOTO       L__oled_wr_str114
0x0438	0x1338      	BCF        oled_wr_str_w2_L0, 6
0x0439	0x2C3B      	GOTO       L__oled_wr_str115
L__oled_wr_str114:
0x043A	0x1738      	BSF        oled_wr_str_w2_L0, 6
L__oled_wr_str115:
;oled_control.c,188 :: 		w2.B5 = w1.B5;
0x043B	0x1AB7      	BTFSC      oled_wr_str_w1_L0, 5
0x043C	0x2C3F      	GOTO       L__oled_wr_str116
0x043D	0x12B8      	BCF        oled_wr_str_w2_L0, 5
0x043E	0x2C40      	GOTO       L__oled_wr_str117
L__oled_wr_str116:
0x043F	0x16B8      	BSF        oled_wr_str_w2_L0, 5
L__oled_wr_str117:
;oled_control.c,189 :: 		w2.B4 = w1.B5;
0x0440	0x1AB7      	BTFSC      oled_wr_str_w1_L0, 5
0x0441	0x2C44      	GOTO       L__oled_wr_str118
0x0442	0x1238      	BCF        oled_wr_str_w2_L0, 4
0x0443	0x2C45      	GOTO       L__oled_wr_str119
L__oled_wr_str118:
0x0444	0x1638      	BSF        oled_wr_str_w2_L0, 4
L__oled_wr_str119:
;oled_control.c,190 :: 		w2.B3 = w1.B4;
0x0445	0x1A37      	BTFSC      oled_wr_str_w1_L0, 4
0x0446	0x2C49      	GOTO       L__oled_wr_str120
0x0447	0x11B8      	BCF        oled_wr_str_w2_L0, 3
0x0448	0x2C4A      	GOTO       L__oled_wr_str121
L__oled_wr_str120:
0x0449	0x15B8      	BSF        oled_wr_str_w2_L0, 3
L__oled_wr_str121:
;oled_control.c,191 :: 		w2.B2 = w1.B4;
0x044A	0x1A37      	BTFSC      oled_wr_str_w1_L0, 4
0x044B	0x2C4E      	GOTO       L__oled_wr_str122
0x044C	0x1138      	BCF        oled_wr_str_w2_L0, 2
0x044D	0x2C4F      	GOTO       L__oled_wr_str123
L__oled_wr_str122:
0x044E	0x1538      	BSF        oled_wr_str_w2_L0, 2
L__oled_wr_str123:
;oled_control.c,192 :: 		w2.B1 = w1.B3;
0x044F	0x19B7      	BTFSC      oled_wr_str_w1_L0, 3
0x0450	0x2C53      	GOTO       L__oled_wr_str124
0x0451	0x10B8      	BCF        oled_wr_str_w2_L0, 1
0x0452	0x2C54      	GOTO       L__oled_wr_str125
L__oled_wr_str124:
0x0453	0x14B8      	BSF        oled_wr_str_w2_L0, 1
L__oled_wr_str125:
;oled_control.c,193 :: 		w2.B0 = w1.B3;
0x0454	0x19B7      	BTFSC      oled_wr_str_w1_L0, 3
0x0455	0x2C58      	GOTO       L__oled_wr_str126
0x0456	0x1038      	BCF        oled_wr_str_w2_L0, 0
0x0457	0x2C59      	GOTO       L__oled_wr_str127
L__oled_wr_str126:
0x0458	0x1438      	BSF        oled_wr_str_w2_L0, 0
L__oled_wr_str127:
;oled_control.c,194 :: 		}
L_oled_wr_str35:
;oled_control.c,195 :: 		Soft_I2C_Write(w2);
0x0459	0x0838      	MOVF       oled_wr_str_w2_L0, 0
0x045A	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x045B	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,196 :: 		Soft_I2C_Write(w2);
0x045C	0x0144      	MOVLB      4
0x045D	0x0838      	MOVF       oled_wr_str_w2_L0, 0
0x045E	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x045F	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,174 :: 		for (h = 0; h <= 4; h++) {  // write letter
0x0460	0x0144      	MOVLB      4
0x0461	0x0AB5      	INCF       oled_wr_str_h_L0, 1
;oled_control.c,197 :: 		}
0x0462	0x2BEE      	GOTO       L_oled_wr_str31
L_oled_wr_str32:
;oled_control.c,198 :: 		Soft_I2C_Write (0);
0x0463	0x01C6      	CLRF       FARG_Soft_I2C_Write_d
0x0464	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,199 :: 		Soft_I2C_Write (0);
0x0465	0x0144      	MOVLB      4
0x0466	0x01C6      	CLRF       FARG_Soft_I2C_Write_d
0x0467	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,172 :: 		for (i = 0; i < leng; i++) { // write string
0x0468	0x0144      	MOVLB      4
0x0469	0x0AB4      	INCF       oled_wr_str_i_L0, 1
;oled_control.c,200 :: 		}
0x046A	0x2BD4      	GOTO       L_oled_wr_str26
L_oled_wr_str27:
;oled_control.c,201 :: 		Soft_I2C_Stop ();
0x046B	0x21CA      	CALL       _Soft_I2C_Stop
;oled_control.c,202 :: 		}
L_end_oled_wr_str:
0x046C	0x0008      	RETURN
; end of _oled_wr_str
_oled_bat:
;oled_control.c,205 :: 		void oled_bat () {
;oled_control.c,207 :: 		Soft_I2C_Start();
0x046D	0x2139      	CALL       _Soft_I2C_Start
;oled_control.c,208 :: 		Soft_I2C_Write(oled_addr);       // device addres
0x046E	0x0141      	MOVLB      1
0x046F	0x0828      	MOVF       oled_control_oled_addr, 0
0x0470	0x0144      	MOVLB      4
0x0471	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0472	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,209 :: 		Soft_I2C_Write(64);              // 0 - continious mode, command; 64 - Co, data
0x0473	0x3040      	MOVLW      64
0x0474	0x0144      	MOVLB      4
0x0475	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0476	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,212 :: 		for(g=0; g<=3; g++) {     // batt drawing
0x0477	0x0144      	MOVLB      4
0x0478	0x01B0      	CLRF       oled_bat_g_L0
L_oled_bat36:
0x0479	0x0830      	MOVF       oled_bat_g_L0, 0
0x047A	0x3C03      	SUBLW      3
0x047B	0x1C03      	BTFSS      STATUS, 0
0x047C	0x2CA0      	GOTO       L_oled_bat37
;oled_control.c,213 :: 		set_addressing (g, 115);
0x047D	0x0830      	MOVF       oled_bat_g_L0, 0
0x047E	0x00C1      	MOVWF      FARG_set_addressing_pagenum
0x047F	0x3073      	MOVLW      115
0x0480	0x00C2      	MOVWF      FARG_set_addressing_c_start
0x0481	0x218A      	CALL       _set_addressing
;oled_control.c,214 :: 		for(i=0; i<=10; i++) { Soft_I2C_Write(batt[g*11+i]); }
0x0482	0x0144      	MOVLB      4
0x0483	0x01AF      	CLRF       oled_bat_i_L0
L_oled_bat39:
0x0484	0x082F      	MOVF       oled_bat_i_L0, 0
0x0485	0x3C0A      	SUBLW      10
0x0486	0x1C03      	BTFSS      STATUS, 0
0x0487	0x2C9E      	GOTO       L_oled_bat40
0x0488	0x0830      	MOVF       oled_bat_g_L0, 0
0x0489	0x00F0      	MOVWF      R0
0x048A	0x300B      	MOVLW      11
0x048B	0x00F4      	MOVWF      R4
0x048C	0x21DE      	CALL       _Mul_8X8_U
0x048D	0x0144      	MOVLB      4
0x048E	0x082F      	MOVF       oled_bat_i_L0, 0
0x048F	0x07F0      	ADDWF      R0, 1
0x0490	0x3000      	MOVLW      0
0x0491	0x3DF1      	ADDWFC     R1, 1
0x0492	0x3082      	MOVLW      oled_control_batt
0x0493	0x0770      	ADDWF      R0, 0
0x0494	0x0084      	MOVWF      FSR0
0x0495	0x30A0      	MOVLW      hi_addr(oled_control_batt)
0x0496	0x3D71      	ADDWFC     R1, 0
0x0497	0x0085      	MOVWF      FSR0H
0x0498	0x0800      	MOVF       INDF0, 0
0x0499	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x049A	0x2153      	CALL       _Soft_I2C_Write
0x049B	0x0144      	MOVLB      4
0x049C	0x0AAF      	INCF       oled_bat_i_L0, 1
0x049D	0x2C84      	GOTO       L_oled_bat39
L_oled_bat40:
;oled_control.c,212 :: 		for(g=0; g<=3; g++) {     // batt drawing
0x049E	0x0AB0      	INCF       oled_bat_g_L0, 1
;oled_control.c,215 :: 		}
0x049F	0x2C79      	GOTO       L_oled_bat36
L_oled_bat37:
;oled_control.c,216 :: 		Soft_I2C_Stop ();
0x04A0	0x21CA      	CALL       _Soft_I2C_Stop
;oled_control.c,217 :: 		return;
;oled_control.c,218 :: 		}
L_end_oled_bat:
0x04A1	0x0008      	RETURN
; end of _oled_bat
_ADC_Get_Sample:
;__Lib_ADC_18xxx.c,64 :: 		
;__Lib_ADC_18xxx.c,65 :: 		
0x04A2	0x303F      	MOVLW      63
0x04A3	0x0144      	MOVLB      4
0x04A4	0x052F      	ANDWF      FARG_ADC_Get_Sample_channel, 0
0x04A5	0x0141      	MOVLB      1
0x04A6	0x009E      	MOVWF      ADPCH
;__Lib_ADC_18xxx.c,66 :: 		
0x04A7	0x2276      	CALL       _Delay_22us
;__Lib_ADC_18xxx.c,68 :: 		
0x04A8	0x1413      	BSF        ADCON0, 0
;__Lib_ADC_18xxx.c,69 :: 		
0x04A9	0x0000      	NOP
;__Lib_ADC_18xxx.c,70 :: 		
L_ADC_Get_Sample4:
0x04AA	0x1C13      	BTFSS      ADCON0, 0
0x04AB	0x2CAD      	GOTO       L_ADC_Get_Sample5
;__Lib_ADC_18xxx.c,71 :: 		
0x04AC	0x2CAA      	GOTO       L_ADC_Get_Sample4
L_ADC_Get_Sample5:
;__Lib_ADC_18xxx.c,73 :: 		
0x04AD	0x080C      	MOVF       ADRES, 0
0x04AE	0x00F0      	MOVWF      R0
0x04AF	0x080D      	MOVF       ADRES+1, 0
0x04B0	0x00F1      	MOVWF      R1
;__Lib_ADC_18xxx.c,74 :: 		
L_end_ADC_Get_Sample:
0x04B1	0x0008      	RETURN
; end of _ADC_Get_Sample
_Div_16X16_U:
;__Lib_Math.c,213 :: 		
;__Lib_Math.c,220 :: 		
0x04B2	0x0140      	MOVLB      0
;__Lib_Math.c,221 :: 		
0x04B3	0x01F8      	CLRF       R8
;__Lib_Math.c,222 :: 		
0x04B4	0x01F9      	CLRF       R9
;__Lib_Math.c,223 :: 		
0x04B5	0x3010      	MOVLW      16
;__Lib_Math.c,224 :: 		
0x04B6	0x00FC      	MOVWF      R12
;__Lib_Math.c,225 :: 		
0x04B7	0x0D71      	RLF        R1, 0
;__Lib_Math.c,226 :: 		
0x04B8	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,227 :: 		
0x04B9	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,228 :: 		
0x04BA	0x0874      	MOVF       R4, 0
;__Lib_Math.c,229 :: 		
0x04BB	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,230 :: 		
0x04BC	0x0875      	MOVF       R5, 0
;__Lib_Math.c,231 :: 		
0x04BD	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,232 :: 		
0x04BE	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,233 :: 		
0x04BF	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,234 :: 		
0x04C0	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,235 :: 		
0x04C1	0x2CC9      	GOTO       $+8
;__Lib_Math.c,236 :: 		
0x04C2	0x0874      	MOVF       R4, 0
;__Lib_Math.c,237 :: 		
0x04C3	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,238 :: 		
0x04C4	0x0875      	MOVF       R5, 0
;__Lib_Math.c,239 :: 		
0x04C5	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,240 :: 		
0x04C6	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,241 :: 		
0x04C7	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,242 :: 		
0x04C8	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,243 :: 		
0x04C9	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,244 :: 		
0x04CA	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,245 :: 		
0x04CB	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,246 :: 		
0x04CC	0x2CB7      	GOTO       $-21
;__Lib_Math.c,248 :: 		
L_end_Div_16X16_U:
0x04CD	0x0008      	RETURN
; end of _Div_16X16_U
_oled_init:
;oled_control.c,12 :: 		void oled_init (void) {  // OLED init
;oled_control.c,13 :: 		Soft_I2C_Start();
0x04CE	0x2139      	CALL       _Soft_I2C_Start
;oled_control.c,14 :: 		Soft_I2C_Write(oled_addr);             // device addres
0x04CF	0x0141      	MOVLB      1
0x04D0	0x0828      	MOVF       oled_control_oled_addr, 0
0x04D1	0x0144      	MOVLB      4
0x04D2	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x04D3	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,15 :: 		Soft_I2C_Write(0);              // 0 - continious mode, command; 64 - Co, data
0x04D4	0x0144      	MOVLB      4
0x04D5	0x01C6      	CLRF       FARG_Soft_I2C_Write_d
0x04D6	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,16 :: 		Soft_I2C_Write (0xAE); // display OFF
0x04D7	0x30AE      	MOVLW      174
0x04D8	0x0144      	MOVLB      4
0x04D9	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x04DA	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,18 :: 		Soft_I2C_Write (0xD5); // clock division
0x04DB	0x30D5      	MOVLW      213
0x04DC	0x0144      	MOVLB      4
0x04DD	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x04DE	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,19 :: 		Soft_I2C_Write (0x80); // ratio
0x04DF	0x3080      	MOVLW      128
0x04E0	0x0144      	MOVLB      4
0x04E1	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x04E2	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,21 :: 		Soft_I2C_Write (0xA8); //  multiplexer
0x04E3	0x30A8      	MOVLW      168
0x04E4	0x0144      	MOVLB      4
0x04E5	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x04E6	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,22 :: 		Soft_I2C_Write (63); //
0x04E7	0x303F      	MOVLW      63
0x04E8	0x0144      	MOVLB      4
0x04E9	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x04EA	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,24 :: 		Soft_I2C_Write (0xD3); //  offset
0x04EB	0x30D3      	MOVLW      211
0x04EC	0x0144      	MOVLB      4
0x04ED	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x04EE	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,25 :: 		Soft_I2C_Write (shift_line); // 32 no offset for x64 !
0x04EF	0x0141      	MOVLB      1
0x04F0	0x082B      	MOVF       oled_control_shift_line, 0
0x04F1	0x0144      	MOVLB      4
0x04F2	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x04F3	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,27 :: 		Soft_I2C_Write (0x40); // set line, line = 0
0x04F4	0x3040      	MOVLW      64
0x04F5	0x0144      	MOVLB      4
0x04F6	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x04F7	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,29 :: 		Soft_I2C_Write (0x8D); //  charge pump
0x04F8	0x308D      	MOVLW      141
0x04F9	0x0144      	MOVLB      4
0x04FA	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x04FB	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,30 :: 		Soft_I2C_Write (0x14); //  0x10 - external, 0x14 - internal
0x04FC	0x3014      	MOVLW      20
0x04FD	0x0144      	MOVLB      4
0x04FE	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x04FF	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,32 :: 		Soft_I2C_Write (0x81); //  contrast
0x0500	0x3081      	MOVLW      129
0x0501	0x0144      	MOVLB      4
0x0502	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0503	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,33 :: 		Soft_I2C_Write (255); //   0-255
0x0504	0x30FF      	MOVLW      255
0x0505	0x0144      	MOVLB      4
0x0506	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0507	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,35 :: 		Soft_I2C_Write (0xD9); //  pre-charge
0x0508	0x30D9      	MOVLW      217
0x0509	0x0144      	MOVLB      4
0x050A	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x050B	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,36 :: 		Soft_I2C_Write (0xF1); //  0x22 - external, 0xF1 - internal
0x050C	0x30F1      	MOVLW      241
0x050D	0x0144      	MOVLB      4
0x050E	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x050F	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,38 :: 		Soft_I2C_Write (0x20); //  memory addressing mode
0x0510	0x3020      	MOVLW      32
0x0511	0x0144      	MOVLB      4
0x0512	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0513	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,39 :: 		Soft_I2C_Write (0x02); //  page addressing mode   02
0x0514	0x3002      	MOVLW      2
0x0515	0x0144      	MOVLB      4
0x0516	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0517	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,41 :: 		Soft_I2C_Write (0x21); // set column range
0x0518	0x3021      	MOVLW      33
0x0519	0x0144      	MOVLB      4
0x051A	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x051B	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,42 :: 		Soft_I2C_Write (0);    // column start
0x051C	0x0144      	MOVLB      4
0x051D	0x01C6      	CLRF       FARG_Soft_I2C_Write_d
0x051E	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,43 :: 		Soft_I2C_Write (127);  // column stop
0x051F	0x307F      	MOVLW      127
0x0520	0x0144      	MOVLB      4
0x0521	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0522	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,45 :: 		Soft_I2C_Write (0x2E); //  stop scrolling
0x0523	0x302E      	MOVLW      46
0x0524	0x0144      	MOVLB      4
0x0525	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0526	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,47 :: 		if(inversion) {
0x0527	0x0141      	MOVLB      1
0x0528	0x0827      	MOVF       oled_control_inversion, 0
0x0529	0x1903      	BTFSC      STATUS, 2
0x052A	0x2D34      	GOTO       L_oled_init0
;oled_control.c,48 :: 		Soft_I2C_Write (0xA0); //  segment re-map, A0 - normal, A1 - remapped
0x052B	0x30A0      	MOVLW      160
0x052C	0x0144      	MOVLB      4
0x052D	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x052E	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,49 :: 		Soft_I2C_Write (0xC0); // scan direction, C0 - normal, C8 - remapped
0x052F	0x30C0      	MOVLW      192
0x0530	0x0144      	MOVLB      4
0x0531	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0532	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,50 :: 		}
0x0533	0x2D3C      	GOTO       L_oled_init1
L_oled_init0:
;oled_control.c,52 :: 		Soft_I2C_Write (0xA1); //  segment re-map, A0 - normal, A1 - remapped
0x0534	0x30A1      	MOVLW      161
0x0535	0x0144      	MOVLB      4
0x0536	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0537	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,53 :: 		Soft_I2C_Write (0xC8); // scan direction, C0 - normal, C8 - remapped
0x0538	0x30C8      	MOVLW      200
0x0539	0x0144      	MOVLB      4
0x053A	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x053B	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,54 :: 		}
L_oled_init1:
;oled_control.c,56 :: 		Soft_I2C_Write (0xDA); //  COM pins configure
0x053C	0x30DA      	MOVLW      218
0x053D	0x0144      	MOVLB      4
0x053E	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x053F	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,57 :: 		Soft_I2C_Write (0x02); // 02 for 32 12 for x64
0x0540	0x3002      	MOVLW      2
0x0541	0x0144      	MOVLB      4
0x0542	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0543	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,59 :: 		Soft_I2C_Write (0xDB); //  V-COM detect
0x0544	0x30DB      	MOVLW      219
0x0545	0x0144      	MOVLB      4
0x0546	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0547	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,60 :: 		Soft_I2C_Write (0x40); //
0x0548	0x3040      	MOVLW      64
0x0549	0x0144      	MOVLB      4
0x054A	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x054B	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,62 :: 		Soft_I2C_Write (0xA4); //  display entire ON
0x054C	0x30A4      	MOVLW      164
0x054D	0x0144      	MOVLB      4
0x054E	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x054F	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,64 :: 		Soft_I2C_Write (0xA6); // 0xA6 - normal, 0xA7 - inverse
0x0550	0x30A6      	MOVLW      166
0x0551	0x0144      	MOVLB      4
0x0552	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x0553	0x2153      	CALL       _Soft_I2C_Write
;oled_control.c,66 :: 		Soft_I2C_Stop ();
0x0554	0x21CA      	CALL       _Soft_I2C_Stop
;oled_control.c,68 :: 		oled_clear();
0x0555	0x227C      	CALL       _oled_clear
;oled_control.c,69 :: 		send_command (0xAF); //  display ON
0x0556	0x30AF      	MOVLW      175
0x0557	0x0144      	MOVLB      4
0x0558	0x00B9      	MOVWF      FARG_send_command_oled_command
0x0559	0x22A4      	CALL       _send_command
;oled_control.c,70 :: 		return;
;oled_control.c,71 :: 		}
L_end_oled_init:
0x055A	0x0008      	RETURN
; end of _oled_init
_Soft_I2C_Init:
;Soft_I2C.c,12 :: 		void Soft_I2C_Init(void) {
;Soft_I2C.c,13 :: 		Soft_I2C_Stop();
0x055B	0x21CA      	CALL       _Soft_I2C_Stop
;Soft_I2C.c,14 :: 		return;
;Soft_I2C.c,15 :: 		}
L_end_Soft_I2C_Init:
0x055C	0x0008      	RETURN
; end of _Soft_I2C_Init
_NRM3232:
;__Lib_MathDouble.c,167 :: 		
;__Lib_MathDouble.c,173 :: 		
;__Lib_MathDouble.c,175 :: 		
0x055D	0x01A1      	CLRF       __math_tempbD
;__Lib_MathDouble.c,176 :: 		
0x055E	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,177 :: 		
0x055F	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,178 :: 		
0x0560	0x2D72      	GOTO       NORM3232
;__Lib_MathDouble.c,179 :: 		
0x0561	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,180 :: 		
0x0562	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,181 :: 		
0x0563	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,182 :: 		
0x0564	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,183 :: 		
0x0565	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,184 :: 		
0x0566	0x15A1      	BSF        __math_tempbD, 3
;__Lib_MathDouble.c,186 :: 		
0x0567	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,187 :: 		
0x0568	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,188 :: 		
0x0569	0x2D72      	GOTO       NORM3232
;__Lib_MathDouble.c,189 :: 		
0x056A	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,190 :: 		
0x056B	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,191 :: 		
0x056C	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,192 :: 		
0x056D	0x11A1      	BCF        __math_tempbD, 3
;__Lib_MathDouble.c,193 :: 		
0x056E	0x1621      	BSF        __math_tempbD, 4
;__Lib_MathDouble.c,195 :: 		
0x056F	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,196 :: 		
0x0570	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,197 :: 		
0x0571	0x2D80      	GOTO       JPNRES032
;__Lib_MathDouble.c,198 :: 		
NORM3232:
;__Lib_MathDouble.c,199 :: 		
0x0572	0x0821      	MOVF       __math_tempbD, 0
;__Lib_MathDouble.c,200 :: 		
0x0573	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,201 :: 		
0x0574	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,202 :: 		
0x0575	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,203 :: 		
0x0576	0x2D84      	GOTO       JPNSETFUN32
;__Lib_MathDouble.c,204 :: 		
0x0577	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,205 :: 		
NORM3232A:
;__Lib_MathDouble.c,206 :: 		
0x0578	0x1BF2      	BTFSC      R2, 7
;__Lib_MathDouble.c,207 :: 		
0x0579	0x2D88      	GOTO       JMPNFIXSIGN32
;__Lib_MathDouble.c,208 :: 		
0x057A	0x0DF0      	RLF        R0, 1
;__Lib_MathDouble.c,209 :: 		
0x057B	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,210 :: 		
0x057C	0x0DF2      	RLF        R2, 1
;__Lib_MathDouble.c,211 :: 		
0x057D	0x0BF3      	DECFSZ     R3, 1
;__Lib_MathDouble.c,212 :: 		
0x057E	0x2D78      	GOTO       NORM3232A
;__Lib_MathDouble.c,213 :: 		
0x057F	0x2D84      	GOTO       JPNSETFUN32
;__Lib_MathDouble.c,214 :: 		
JPNRES032:
;__Lib_MathDouble.c,215 :: 		
0x0580	0x3001      	MOVLW      1
;__Lib_MathDouble.c,216 :: 		
0x0581	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,218 :: 		
0x0582	0x21F6      	CALL       _RES032
;__Lib_MathDouble.c,220 :: 		
0x0583	0x2D8B      	GOTO       NORM32EEE
;__Lib_MathDouble.c,221 :: 		
JPNSETFUN32:
;__Lib_MathDouble.c,222 :: 		
0x0584	0x3002      	MOVLW      2
;__Lib_MathDouble.c,223 :: 		
0x0585	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,225 :: 		
0x0586	0x21FD      	CALL       _SETFUN32
;__Lib_MathDouble.c,227 :: 		
0x0587	0x2D8B      	GOTO       NORM32EEE
;__Lib_MathDouble.c,228 :: 		
JMPNFIXSIGN32:
;__Lib_MathDouble.c,229 :: 		
0x0588	0x3004      	MOVLW      4
;__Lib_MathDouble.c,230 :: 		
0x0589	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,232 :: 		
0x058A	0x22A0      	CALL       _FIXSIGN32
;__Lib_MathDouble.c,234 :: 		
NORM32EEE:
;__Lib_MathDouble.c,236 :: 		
L_end_NRM3232:
0x058B	0x0008      	RETURN
; end of _NRM3232
_Div_16x16_S_L:
;__Lib_Math.c,416 :: 		
;__Lib_Math.c,422 :: 		
0x058C	0x0D71      	RLF        R1, 0
;__Lib_Math.c,423 :: 		
0x058D	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,424 :: 		
0x058E	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,425 :: 		
0x058F	0x0874      	MOVF       R4, 0
;__Lib_Math.c,426 :: 		
0x0590	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,427 :: 		
0x0591	0x0875      	MOVF       R5, 0
;__Lib_Math.c,428 :: 		
0x0592	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,429 :: 		
0x0593	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,430 :: 		
0x0594	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,431 :: 		
0x0595	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,432 :: 		
0x0596	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,434 :: 		
0x0597	0x300F      	MOVLW      15
;__Lib_Math.c,435 :: 		
0x0598	0x00FC      	MOVWF      R12
;__Lib_Math.c,437 :: 		
0x0599	0x0D71      	RLF        R1, 0
;__Lib_Math.c,438 :: 		
0x059A	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,439 :: 		
0x059B	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,440 :: 		
0x059C	0x0874      	MOVF       R4, 0
;__Lib_Math.c,442 :: 		
0x059D	0x1C70      	BTFSS      R0, 0
;__Lib_Math.c,443 :: 		
0x059E	0x2DA5      	GOTO       $+7
;__Lib_Math.c,444 :: 		
0x059F	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,445 :: 		
0x05A0	0x0875      	MOVF       R5, 0
;__Lib_Math.c,446 :: 		
0x05A1	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,447 :: 		
0x05A2	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,448 :: 		
0x05A3	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,449 :: 		
0x05A4	0x2DAA      	GOTO       $+6
;__Lib_Math.c,451 :: 		
0x05A5	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,452 :: 		
0x05A6	0x0875      	MOVF       R5, 0
;__Lib_Math.c,453 :: 		
0x05A7	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,454 :: 		
0x05A8	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,455 :: 		
0x05A9	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,457 :: 		
0x05AA	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,458 :: 		
0x05AB	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,460 :: 		
0x05AC	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,461 :: 		
0x05AD	0x2D99      	GOTO       $-20
;__Lib_Math.c,463 :: 		
0x05AE	0x1870      	BTFSC      R0, 0
;__Lib_Math.c,464 :: 		
0x05AF	0x2DB6      	GOTO       $+7
;__Lib_Math.c,465 :: 		
0x05B0	0x0874      	MOVF       R4, 0
;__Lib_Math.c,466 :: 		
0x05B1	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,467 :: 		
0x05B2	0x0875      	MOVF       R5, 0
;__Lib_Math.c,468 :: 		
0x05B3	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,469 :: 		
0x05B4	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,470 :: 		
0x05B5	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,471 :: 		
0x05B6	0x0000      	NOP
;__Lib_Math.c,473 :: 		
L_end_Div_16x16_S_L:
0x05B7	0x0008      	RETURN
; end of _Div_16x16_S_L
_VDelay_ms:
;__Lib_Delays.c,82 :: 		void VDelay_ms(unsigned Time_ms){
;__Lib_Delays.c,84 :: 		NumberOfCyc = Clock_kHz()>>2; // this will be done by compiler, no asm will be genereated except that for assignment;
0x05B8	0x3040      	MOVLW      64
0x05B9	0x0144      	MOVLB      4
0x05BA	0x00B1      	MOVWF      VDelay_ms_NumberOfCyc_L0
0x05BB	0x301F      	MOVLW      31
0x05BC	0x00B2      	MOVWF      VDelay_ms_NumberOfCyc_L0+1
0x05BD	0x01B3      	CLRF       VDelay_ms_NumberOfCyc_L0+2
0x05BE	0x01B4      	CLRF       VDelay_ms_NumberOfCyc_L0+3
;__Lib_Delays.c,85 :: 		NumberOfCyc *= Time_ms;
0x05BF	0x3040      	MOVLW      64
0x05C0	0x00F0      	MOVWF      R0
0x05C1	0x301F      	MOVLW      31
0x05C2	0x00F1      	MOVWF      R1
0x05C3	0x3000      	MOVLW      0
0x05C4	0x00F2      	MOVWF      R2
0x05C5	0x3000      	MOVLW      0
0x05C6	0x00F3      	MOVWF      R3
0x05C7	0x082F      	MOVF       FARG_VDelay_ms_Time_ms, 0
0x05C8	0x00F4      	MOVWF      R4
0x05C9	0x0830      	MOVF       FARG_VDelay_ms_Time_ms+1, 0
0x05CA	0x00F5      	MOVWF      R5
0x05CB	0x01F6      	CLRF       R6
0x05CC	0x01F7      	CLRF       R7
0x05CD	0x2209      	CALL       _Mul_32x32_U
0x05CE	0x0870      	MOVF       R0, 0
0x05CF	0x0144      	MOVLB      4
0x05D0	0x00B1      	MOVWF      VDelay_ms_NumberOfCyc_L0
0x05D1	0x0871      	MOVF       R1, 0
0x05D2	0x00B2      	MOVWF      VDelay_ms_NumberOfCyc_L0+1
0x05D3	0x0872      	MOVF       R2, 0
0x05D4	0x00B3      	MOVWF      VDelay_ms_NumberOfCyc_L0+2
0x05D5	0x0873      	MOVF       R3, 0
0x05D6	0x00B4      	MOVWF      VDelay_ms_NumberOfCyc_L0+3
;__Lib_Delays.c,86 :: 		if (NumberOfCyc < 690)
0x05D7	0x3000      	MOVLW      0
0x05D8	0x0273      	SUBWF      R3, 0
0x05D9	0x1D03      	BTFSS      STATUS, 2
0x05DA	0x2DE5      	GOTO       L__VDelay_ms39
0x05DB	0x3000      	MOVLW      0
0x05DC	0x0272      	SUBWF      R2, 0
0x05DD	0x1D03      	BTFSS      STATUS, 2
0x05DE	0x2DE5      	GOTO       L__VDelay_ms39
0x05DF	0x3002      	MOVLW      2
0x05E0	0x0271      	SUBWF      R1, 0
0x05E1	0x1D03      	BTFSS      STATUS, 2
0x05E2	0x2DE5      	GOTO       L__VDelay_ms39
0x05E3	0x30B2      	MOVLW      178
0x05E4	0x0270      	SUBWF      R0, 0
L__VDelay_ms39:
0x05E5	0x1803      	BTFSC      STATUS, 0
0x05E6	0x2DE8      	GOTO       L_VDelay_ms16
;__Lib_Delays.c,87 :: 		return;
0x05E7	0x2E17      	GOTO       L_end_VDelay_ms
L_VDelay_ms16:
;__Lib_Delays.c,88 :: 		NumberOfCyc -= 690;
0x05E8	0x30B2      	MOVLW      178
0x05E9	0x02B1      	SUBWF      VDelay_ms_NumberOfCyc_L0, 1
0x05EA	0x3002      	MOVLW      2
0x05EB	0x3BB2      	SUBWFB     VDelay_ms_NumberOfCyc_L0+1, 1
0x05EC	0x3000      	MOVLW      0
0x05ED	0x3BB3      	SUBWFB     VDelay_ms_NumberOfCyc_L0+2, 1
0x05EE	0x3BB4      	SUBWFB     VDelay_ms_NumberOfCyc_L0+3, 1
;__Lib_Delays.c,89 :: 		NumberOfCyc =  NumberOfCyc >> 5; // Dec and While below take around 32 instructions
0x05EF	0x3005      	MOVLW      5
0x05F0	0x00F0      	MOVWF      R0
0x05F1	0x0870      	MOVF       R0, 0
L__VDelay_ms40:
0x05F2	0x1903      	BTFSC      STATUS, 2
0x05F3	0x2DFA      	GOTO       L__VDelay_ms41
0x05F4	0x36B4      	LSRF       VDelay_ms_NumberOfCyc_L0+3, 1
0x05F5	0x0CB3      	RRF        VDelay_ms_NumberOfCyc_L0+2, 1
0x05F6	0x0CB2      	RRF        VDelay_ms_NumberOfCyc_L0+1, 1
0x05F7	0x0CB1      	RRF        VDelay_ms_NumberOfCyc_L0, 1
0x05F8	0x3EFF      	ADDLW      255
0x05F9	0x2DF2      	GOTO       L__VDelay_ms40
L__VDelay_ms41:
;__Lib_Delays.c,90 :: 		while (NumberOfCyc--)
L_VDelay_ms17:
0x05FA	0x0831      	MOVF       VDelay_ms_NumberOfCyc_L0, 0
0x05FB	0x00F0      	MOVWF      R0
0x05FC	0x0832      	MOVF       VDelay_ms_NumberOfCyc_L0+1, 0
0x05FD	0x00F1      	MOVWF      R1
0x05FE	0x0833      	MOVF       VDelay_ms_NumberOfCyc_L0+2, 0
0x05FF	0x00F2      	MOVWF      R2
0x0600	0x0834      	MOVF       VDelay_ms_NumberOfCyc_L0+3, 0
0x0601	0x00F3      	MOVWF      R3
0x0602	0x3001      	MOVLW      1
0x0603	0x02B1      	SUBWF      VDelay_ms_NumberOfCyc_L0, 1
0x0604	0x3000      	MOVLW      0
0x0605	0x3BB2      	SUBWFB     VDelay_ms_NumberOfCyc_L0+1, 1
0x0606	0x3BB3      	SUBWFB     VDelay_ms_NumberOfCyc_L0+2, 1
0x0607	0x3BB4      	SUBWFB     VDelay_ms_NumberOfCyc_L0+3, 1
0x0608	0x0870      	MOVF       R0, 0
0x0609	0x0471      	IORWF       R1, 0
0x060A	0x0472      	IORWF       R2, 0
0x060B	0x0473      	IORWF       R3, 0
0x060C	0x1903      	BTFSC      STATUS, 2
0x060D	0x2E17      	GOTO       L_VDelay_ms18
;__Lib_Delays.c,92 :: 		asm nop;
0x060E	0x0000      	NOP
;__Lib_Delays.c,93 :: 		asm nop;
0x060F	0x0000      	NOP
;__Lib_Delays.c,94 :: 		asm nop;
0x0610	0x0000      	NOP
;__Lib_Delays.c,95 :: 		asm nop;
0x0611	0x0000      	NOP
;__Lib_Delays.c,96 :: 		asm nop;
0x0612	0x0000      	NOP
;__Lib_Delays.c,97 :: 		asm nop;
0x0613	0x0000      	NOP
;__Lib_Delays.c,98 :: 		asm nop;
0x0614	0x0000      	NOP
;__Lib_Delays.c,99 :: 		asm nop;
0x0615	0x0000      	NOP
;__Lib_Delays.c,100 :: 		}
0x0616	0x2DFA      	GOTO       L_VDelay_ms17
L_VDelay_ms18:
;__Lib_Delays.c,101 :: 		}
L_end_VDelay_ms:
0x0617	0x0008      	RETURN
; end of _VDelay_ms
_Mul_16X16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x0618	0x0140      	MOVLB      0
;__Lib_Math.c,144 :: 		
0x0619	0x01FB      	CLRF       R11
;__Lib_Math.c,145 :: 		
0x061A	0x01FA      	CLRF       R10
;__Lib_Math.c,146 :: 		
0x061B	0x01F9      	CLRF       R9
;__Lib_Math.c,147 :: 		
0x061C	0x3080      	MOVLW      128
;__Lib_Math.c,148 :: 		
0x061D	0x00F8      	MOVWF      R8
;__Lib_Math.c,149 :: 		
0x061E	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,150 :: 		
0x061F	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,151 :: 		
0x0620	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,152 :: 		
0x0621	0x2E2B      	GOTO       $+10
;__Lib_Math.c,153 :: 		
0x0622	0x0874      	MOVF       R4, 0
;__Lib_Math.c,154 :: 		
0x0623	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,155 :: 		
0x0624	0x0875      	MOVF       R5, 0
;__Lib_Math.c,156 :: 		
0x0625	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,157 :: 		
0x0626	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,158 :: 		
0x0627	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,159 :: 		
0x0628	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,160 :: 		
0x0629	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,161 :: 		
0x062A	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,162 :: 		
0x062B	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,163 :: 		
0x062C	0x2E33      	GOTO       $+7
;__Lib_Math.c,164 :: 		
0x062D	0x0874      	MOVF       R4, 0
;__Lib_Math.c,165 :: 		
0x062E	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,166 :: 		
0x062F	0x0875      	MOVF       R5, 0
;__Lib_Math.c,167 :: 		
0x0630	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,168 :: 		
0x0631	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,169 :: 		
0x0632	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,170 :: 		
0x0633	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,171 :: 		
0x0634	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,172 :: 		
0x0635	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,173 :: 		
0x0636	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,174 :: 		
0x0637	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,175 :: 		
0x0638	0x2E1E      	GOTO       $-26
;__Lib_Math.c,176 :: 		
0x0639	0x087B      	MOVF       R11, 0
;__Lib_Math.c,177 :: 		
0x063A	0x00F3      	MOVWF      R3
;__Lib_Math.c,178 :: 		
0x063B	0x087A      	MOVF       R10, 0
;__Lib_Math.c,179 :: 		
0x063C	0x00F2      	MOVWF      R2
;__Lib_Math.c,180 :: 		
0x063D	0x0879      	MOVF       R9, 0
;__Lib_Math.c,181 :: 		
0x063E	0x00F1      	MOVWF      R1
;__Lib_Math.c,182 :: 		
0x063F	0x0878      	MOVF       R8, 0
;__Lib_Math.c,183 :: 		
0x0640	0x00F0      	MOVWF      R0
;__Lib_Math.c,186 :: 		
L_end_Mul_16X16_U:
0x0641	0x0008      	RETURN
; end of _Mul_16X16_U
_SETFOV32:
;__Lib_MathDouble.c,79 :: 		
;__Lib_MathDouble.c,86 :: 		
0x0642	0x14FB      	BSF        R11, 1
;__Lib_MathDouble.c,87 :: 		
0x0643	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.c,88 :: 		
0x0644	0x2E4C      	GOTO       SETFOV32EEE
;__Lib_MathDouble.c,89 :: 		
0x0645	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,90 :: 		
0x0646	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,91 :: 		
0x0647	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,92 :: 		
0x0648	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,93 :: 		
0x0649	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,94 :: 		
0x064A	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.c,95 :: 		
0x064B	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,96 :: 		
SETFOV32EEE:
;__Lib_MathDouble.c,97 :: 		
0x064C	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,99 :: 		
L_end_SETFOV32:
0x064D	0x0008      	RETURN
; end of _SETFOV32
_SETIOV3224:
;__Lib_MathDouble.c,996 :: 		
;__Lib_MathDouble.c,1002 :: 		
0x064E	0x147B      	BSF        R11, 0
;__Lib_MathDouble.c,1003 :: 		
0x064F	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.c,1004 :: 		
0x0650	0x2E59      	GOTO       SETIOV3224EEE
;__Lib_MathDouble.c,1006 :: 		
0x0651	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1007 :: 		
0x0652	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,1008 :: 		
0x0653	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,1009 :: 		
0x0654	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,1010 :: 		
0x0655	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,1011 :: 		
0x0656	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,1012 :: 		
0x0657	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.c,1013 :: 		
0x0658	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,1014 :: 		
SETIOV3224EEE:
;__Lib_MathDouble.c,1015 :: 		
0x0659	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,1017 :: 		
L_end_SETIOV3224:
0x065A	0x0008      	RETURN
; end of _SETIOV3224
_Div_16x16_S:
;__Lib_Math.c,475 :: 		
;__Lib_Math.c,483 :: 		
0x065B	0x0874      	MOVF       R4, 0
0x065C	0x3A00      	XORLW      0
0x065D	0x1D03      	BTFSS      STATUS, 2
0x065E	0x2E68      	GOTO       L_Div_16x16_S0
;__Lib_Math.c,484 :: 		
0x065F	0x0875      	MOVF       R5, 0
0x0660	0x3A00      	XORLW      0
0x0661	0x1D03      	BTFSS      STATUS, 2
0x0662	0x2E68      	GOTO       L_Div_16x16_S1
;__Lib_Math.c,485 :: 		
0x0663	0x30FF      	MOVLW      255
0x0664	0x00F0      	MOVWF      R0
;__Lib_Math.c,486 :: 		
0x0665	0x307F      	MOVLW      127
0x0666	0x00F1      	MOVWF      R1
;__Lib_Math.c,487 :: 		
0x0667	0x2EC0      	GOTO       L_end_Div_16x16_S
;__Lib_Math.c,488 :: 		
L_Div_16x16_S1:
L_Div_16x16_S0:
;__Lib_Math.c,491 :: 		
0x0668	0x0140      	MOVLB      0
;__Lib_Math.c,492 :: 		
0x0669	0x01FD      	CLRF       R13
;__Lib_Math.c,493 :: 		
0x066A	0x01F9      	CLRF       R9
;__Lib_Math.c,494 :: 		
0x066B	0x01F8      	CLRF       R8
;__Lib_Math.c,495 :: 		
0x066C	0x0871      	MOVF       R1, 0
;__Lib_Math.c,496 :: 		
0x066D	0x0470      	IORWF       R0, 0
;__Lib_Math.c,497 :: 		
0x066E	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,498 :: 		
0x066F	0x3400      	RETLW      0
;__Lib_Math.c,500 :: 		
0x0670	0x0871      	MOVF       R1, 0
;__Lib_Math.c,501 :: 		
0x0671	0x0675      	XORWF      R5, 0
;__Lib_Math.c,502 :: 		
0x0672	0x00FA      	MOVWF      R10
;__Lib_Math.c,503 :: 		
0x0673	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,504 :: 		
0x0674	0x09FD      	COMF       R13, 1
;__Lib_Math.c,506 :: 		
0x0675	0x01FB      	CLRF       R11
;__Lib_Math.c,508 :: 		
0x0676	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,509 :: 		
0x0677	0x2E7D      	GOTO       $+6
;__Lib_Math.c,511 :: 		
0x0678	0x09F4      	COMF       R4, 1
;__Lib_Math.c,512 :: 		
0x0679	0x09F5      	COMF       R5, 1
;__Lib_Math.c,513 :: 		
0x067A	0x0AF4      	INCF       R4, 1
;__Lib_Math.c,514 :: 		
0x067B	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,515 :: 		
0x067C	0x0AF5      	INCF       R5, 1
;__Lib_Math.c,517 :: 		
0x067D	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,518 :: 		
0x067E	0x2E84      	GOTO       $+6
;__Lib_Math.c,520 :: 		
0x067F	0x09F0      	COMF       R0, 1
;__Lib_Math.c,521 :: 		
0x0680	0x09F1      	COMF       R1, 1
;__Lib_Math.c,522 :: 		
0x0681	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,523 :: 		
0x0682	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,524 :: 		
0x0683	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,526 :: 		
0x0684	0x0871      	MOVF       R1, 0
;__Lib_Math.c,527 :: 		
0x0685	0x0475      	IORWF       R5, 0
;__Lib_Math.c,528 :: 		
0x0686	0x00FA      	MOVWF      R10
;__Lib_Math.c,529 :: 		
0x0687	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,530 :: 		
0x0688	0x2E99      	GOTO       $+17
;__Lib_Math.c,532 :: 		
0x0689	0x258C      	CALL       _Div_16x16_S_L
;__Lib_Math.c,534 :: 		
0x068A	0x187B      	BTFSC      R11, 0
;__Lib_Math.c,535 :: 		
0x068B	0x2EAC      	GOTO       $+33
;__Lib_Math.c,537 :: 		
0x068C	0x1FFD      	BTFSS      R13, 7
;__Lib_Math.c,538 :: 		
0x068D	0x3400      	RETLW      0
;__Lib_Math.c,540 :: 		
0x068E	0x09F0      	COMF       R0, 1
;__Lib_Math.c,541 :: 		
0x068F	0x09F1      	COMF       R1, 1
;__Lib_Math.c,542 :: 		
0x0690	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,543 :: 		
0x0691	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,544 :: 		
0x0692	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,546 :: 		
0x0693	0x09F8      	COMF       R8, 1
;__Lib_Math.c,547 :: 		
0x0694	0x09F9      	COMF       R9, 1
;__Lib_Math.c,548 :: 		
0x0695	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,549 :: 		
0x0696	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,550 :: 		
0x0697	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,552 :: 		
0x0698	0x3400      	RETLW      0
;__Lib_Math.c,554 :: 		
0x0699	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,555 :: 		
0x069A	0x2EA8      	GOTO       $+14
;__Lib_Math.c,556 :: 		
0x069B	0x1BF1      	BTFSC      R1, 7
;__Lib_Math.c,557 :: 		
0x069C	0x2EA4      	GOTO       $+8
;__Lib_Math.c,558 :: 		
0x069D	0x0871      	MOVF       R1, 0
;__Lib_Math.c,559 :: 		
0x069E	0x00F9      	MOVWF      R9
;__Lib_Math.c,560 :: 		
0x069F	0x0870      	MOVF       R0, 0
;__Lib_Math.c,561 :: 		
0x06A0	0x00F8      	MOVWF      R8
;__Lib_Math.c,562 :: 		
0x06A1	0x01F1      	CLRF       R1
;__Lib_Math.c,563 :: 		
0x06A2	0x01F0      	CLRF       R0
;__Lib_Math.c,564 :: 		
0x06A3	0x2E8C      	GOTO       $-23
;__Lib_Math.c,565 :: 		
0x06A4	0x01F1      	CLRF       R1
;__Lib_Math.c,566 :: 		
0x06A5	0x01F0      	CLRF       R0
;__Lib_Math.c,567 :: 		
0x06A6	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,568 :: 		
0x06A7	0x3400      	RETLW      0
;__Lib_Math.c,570 :: 		
0x06A8	0x09F1      	COMF       R1, 1
;__Lib_Math.c,571 :: 		
0x06A9	0x09F0      	COMF       R0, 1
;__Lib_Math.c,572 :: 		
0x06AA	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,573 :: 		
0x06AB	0x2E89      	GOTO       $-34
;__Lib_Math.c,575 :: 		
0x06AC	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,576 :: 		
0x06AD	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,577 :: 		
0x06AE	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,578 :: 		
0x06AF	0x0874      	MOVF       R4, 0
;__Lib_Math.c,579 :: 		
0x06B0	0x0278      	SUBWF      R8, 0
;__Lib_Math.c,580 :: 		
0x06B1	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,581 :: 		
0x06B2	0x2E8C      	GOTO       $-38
;__Lib_Math.c,582 :: 		
0x06B3	0x0875      	MOVF       R5, 0
;__Lib_Math.c,583 :: 		
0x06B4	0x0279      	SUBWF      R9, 0
;__Lib_Math.c,584 :: 		
0x06B5	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,585 :: 		
0x06B6	0x2E8C      	GOTO       $-42
;__Lib_Math.c,586 :: 		
0x06B7	0x01F9      	CLRF       R9
;__Lib_Math.c,587 :: 		
0x06B8	0x01F8      	CLRF       R8
;__Lib_Math.c,588 :: 		
0x06B9	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,589 :: 		
0x06BA	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,590 :: 		
0x06BB	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,591 :: 		
0x06BC	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,592 :: 		
0x06BD	0x2E8C      	GOTO       $-49
;__Lib_Math.c,593 :: 		
0x06BE	0x0000      	NOP
;__Lib_Math.c,594 :: 		
0x06BF	0x34FF      	RETLW      255
;__Lib_Math.c,596 :: 		
L_end_Div_16x16_S:
0x06C0	0x0008      	RETURN
; end of _Div_16x16_S
_get_batt:
;main.c,628 :: 		void get_batt(void){
;main.c,629 :: 		ADC_Init_Advanced(_ADC_INTERNAL_FVRH1);
0x06C1	0x3043      	MOVLW      67
0x06C2	0x0144      	MOVLB      4
0x06C3	0x00AF      	MOVWF      FARG_ADC_Init_Advanced_reference
0x06C4	0x22F1      	CALL       _ADC_Init_Advanced
;main.c,630 :: 		Delay_us(100);
0x06C5	0x3002      	MOVLW      2
0x06C6	0x00FC      	MOVWF      R12
0x06C7	0x3008      	MOVLW      8
0x06C8	0x00FD      	MOVWF      R13
L_get_batt157:
0x06C9	0x0BFD      	DECFSZ     R13, 1
0x06CA	0x2EC9      	GOTO       L_get_batt157
0x06CB	0x0BFC      	DECFSZ     R12, 1
0x06CC	0x2EC9      	GOTO       L_get_batt157
0x06CD	0x0000      	NOP
;main.c,631 :: 		Voltage = ADC_Get_Sample(Battery_input) * 11;
0x06CE	0x3009      	MOVLW      9
0x06CF	0x0144      	MOVLB      4
0x06D0	0x00AF      	MOVWF      FARG_ADC_Get_Sample_channel
0x06D1	0x24A2      	CALL       _ADC_Get_Sample
0x06D2	0x300B      	MOVLW      11
0x06D3	0x00F4      	MOVWF      R4
0x06D4	0x3000      	MOVLW      0
0x06D5	0x00F5      	MOVWF      R5
0x06D6	0x2618      	CALL       _Mul_16X16_U
0x06D7	0x0870      	MOVF       R0, 0
0x06D8	0x0143      	MOVLB      3
0x06D9	0x00A0      	MOVWF      _Voltage
0x06DA	0x0871      	MOVF       R1, 0
0x06DB	0x00A1      	MOVWF      _Voltage+1
;main.c,632 :: 		return;
;main.c,633 :: 		}
L_end_get_batt:
0x06DC	0x0008      	RETURN
; end of _get_batt
_oled_start:
;main.c,141 :: 		void oled_start(){
;main.c,142 :: 		OLED_PWD = 1;
0x06DD	0x0140      	MOVLB      0
0x06DE	0x1616      	BSF        LATA4_bit, BitPos(LATA4_bit+0)
;main.c,144 :: 		Delay_ms(200);
0x06DF	0x3009      	MOVLW      9
0x06E0	0x00FB      	MOVWF      R11
0x06E1	0x301E      	MOVLW      30
0x06E2	0x00FC      	MOVWF      R12
0x06E3	0x30E4      	MOVLW      228
0x06E4	0x00FD      	MOVWF      R13
L_oled_start36:
0x06E5	0x0BFD      	DECFSZ     R13, 1
0x06E6	0x2EE5      	GOTO       L_oled_start36
0x06E7	0x0BFC      	DECFSZ     R12, 1
0x06E8	0x2EE5      	GOTO       L_oled_start36
0x06E9	0x0BFB      	DECFSZ     R11, 1
0x06EA	0x2EE5      	GOTO       L_oled_start36
0x06EB	0x0000      	NOP
;main.c,145 :: 		Soft_I2C_init();
0x06EC	0x255B      	CALL       _Soft_I2C_Init
;main.c,146 :: 		Delay_ms(10);
0x06ED	0x3068      	MOVLW      104
0x06EE	0x00FC      	MOVWF      R12
0x06EF	0x30E4      	MOVLW      228
0x06F0	0x00FD      	MOVWF      R13
L_oled_start37:
0x06F1	0x0BFD      	DECFSZ     R13, 1
0x06F2	0x2EF1      	GOTO       L_oled_start37
0x06F3	0x0BFC      	DECFSZ     R12, 1
0x06F4	0x2EF1      	GOTO       L_oled_start37
0x06F5	0x0000      	NOP
;main.c,147 :: 		oled_init();
0x06F6	0x24CE      	CALL       _oled_init
;main.c,149 :: 		if(gre){
0x06F7	0x0143      	MOVLB      3
0x06F8	0x1F26      	BTFSS      _gre, BitPos(_gre+0)
0x06F9	0x2EFE      	GOTO       L_oled_start38
;main.c,150 :: 		Greating();
0x06FA	0x22B4      	CALL       _Greating
;main.c,151 :: 		gre = 0;
0x06FB	0x0143      	MOVLB      3
0x06FC	0x1326      	BCF        _gre, BitPos(_gre+0)
;main.c,152 :: 		oled_clear();
0x06FD	0x227C      	CALL       _oled_clear
;main.c,153 :: 		}
L_oled_start38:
;main.c,154 :: 		oled_wr_str(0, 0, "PWR     W", 9);
0x06FE	0x0144      	MOVLB      4
0x06FF	0x01AF      	CLRF       FARG_oled_wr_str_page
0x0700	0x01B0      	CLRF       FARG_oled_wr_str_col
0x0701	0x3033      	MOVLW      ?lstr1_main
0x0702	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x0703	0x3001      	MOVLW      hi_addr(?lstr1_main)
0x0704	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x0705	0x3009      	MOVLW      9
0x0706	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x0707	0x232C      	CALL       _oled_wr_str
;main.c,155 :: 		oled_bat();
0x0708	0x246D      	CALL       _oled_bat
;main.c,156 :: 		oled_wr_str(2, 0, "SWR      ", 9);
0x0709	0x3002      	MOVLW      2
0x070A	0x0144      	MOVLB      4
0x070B	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x070C	0x01B0      	CLRF       FARG_oled_wr_str_col
0x070D	0x304A      	MOVLW      ?lstr2_main
0x070E	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x070F	0x3001      	MOVLW      hi_addr(?lstr2_main)
0x0710	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x0711	0x3009      	MOVLW      9
0x0712	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x0713	0x232C      	CALL       _oled_wr_str
;main.c,157 :: 		oled_wr_str(0, 42, "=", 1);
0x0714	0x0144      	MOVLB      4
0x0715	0x01AF      	CLRF       FARG_oled_wr_str_page
0x0716	0x302A      	MOVLW      42
0x0717	0x00B0      	MOVWF      FARG_oled_wr_str_col
0x0718	0x3066      	MOVLW      ?lstr3_main
0x0719	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x071A	0x3001      	MOVLW      hi_addr(?lstr3_main)
0x071B	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x071C	0x3001      	MOVLW      1
0x071D	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x071E	0x232C      	CALL       _oled_wr_str
;main.c,158 :: 		oled_wr_str(2, 42, "=", 1);
0x071F	0x3002      	MOVLW      2
0x0720	0x0144      	MOVLB      4
0x0721	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x0722	0x302A      	MOVLW      42
0x0723	0x00B0      	MOVWF      FARG_oled_wr_str_col
0x0724	0x3064      	MOVLW      ?lstr4_main
0x0725	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x0726	0x3001      	MOVLW      hi_addr(?lstr4_main)
0x0727	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x0728	0x3001      	MOVLW      1
0x0729	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x072A	0x232C      	CALL       _oled_wr_str
;main.c,159 :: 		Voltage_old = 9999;
0x072B	0x300F      	MOVLW      15
0x072C	0x0141      	MOVLB      1
0x072D	0x00EE      	MOVWF      _Voltage_old
0x072E	0x3027      	MOVLW      39
0x072F	0x00EF      	MOVWF      _Voltage_old+1
;main.c,160 :: 		SWR_fixed_old = 9999;
0x0730	0x300F      	MOVLW      15
0x0731	0x0142      	MOVLB      2
0x0732	0x00EC      	MOVWF      _SWR_fixed_old
0x0733	0x3027      	MOVLW      39
0x0734	0x00ED      	MOVWF      _SWR_fixed_old+1
;main.c,161 :: 		PWR_fixed_old = 9999;
0x0735	0x300F      	MOVLW      15
0x0736	0x00EA      	MOVWF      _PWR_fixed_old
0x0737	0x3027      	MOVLW      39
0x0738	0x00EB      	MOVWF      _PWR_fixed_old+1
;main.c,162 :: 		SWR_ind_old = 9999;
0x0739	0x300F      	MOVLW      15
0x073A	0x00E8      	MOVWF      _SWR_ind_old
0x073B	0x3027      	MOVLW      39
0x073C	0x00E9      	MOVWF      _SWR_ind_old+1
;main.c,163 :: 		SWR_ind = 0;
0x073D	0x0141      	MOVLB      1
0x073E	0x01EC      	CLRF       _SWR_ind
0x073F	0x01ED      	CLRF       _SWR_ind+1
;main.c,164 :: 		volt_cnt = Tick;
0x0740	0x0142      	MOVLB      2
0x0741	0x0858      	MOVF       _Tick, 0
0x0742	0x00E0      	MOVWF      _volt_cnt
0x0743	0x0859      	MOVF       _Tick+1, 0
0x0744	0x00E1      	MOVWF      _volt_cnt+1
0x0745	0x085A      	MOVF       _Tick+2, 0
0x0746	0x00E2      	MOVWF      _volt_cnt+2
0x0747	0x085B      	MOVF       _Tick+3, 0
0x0748	0x00E3      	MOVWF      _volt_cnt+3
;main.c,165 :: 		watch_cnt = Tick;
0x0749	0x0858      	MOVF       _Tick, 0
0x074A	0x00DC      	MOVWF      _watch_cnt
0x074B	0x0859      	MOVF       _Tick+1, 0
0x074C	0x00DD      	MOVWF      _watch_cnt+1
0x074D	0x085A      	MOVF       _Tick+2, 0
0x074E	0x00DE      	MOVWF      _watch_cnt+2
0x074F	0x085B      	MOVF       _Tick+3, 0
0x0750	0x00DF      	MOVWF      _watch_cnt+3
;main.c,166 :: 		B_short = 0; B_long = 0; B_xlong = 0;
0x0751	0x0143      	MOVLB      3
0x0752	0x12A6      	BCF        _B_short, BitPos(_B_short+0)
0x0753	0x1226      	BCF        _B_long, BitPos(_B_long+0)
0x0754	0x11A6      	BCF        _B_xlong, BitPos(_B_xlong+0)
;main.c,167 :: 		disp_cnt = Tick + Disp_time*1000;
0x0755	0x0142      	MOVLB      2
0x0756	0x0854      	MOVF       _Disp_time, 0
0x0757	0x00F0      	MOVWF      R0
0x0758	0x0855      	MOVF       _Disp_time+1, 0
0x0759	0x00F1      	MOVWF      R1
0x075A	0x0856      	MOVF       _Disp_time+2, 0
0x075B	0x00F2      	MOVWF      R2
0x075C	0x0857      	MOVF       _Disp_time+3, 0
0x075D	0x00F3      	MOVWF      R3
0x075E	0x30E8      	MOVLW      232
0x075F	0x00F4      	MOVWF      R4
0x0760	0x3003      	MOVLW      3
0x0761	0x00F5      	MOVWF      R5
0x0762	0x01F6      	CLRF       R6
0x0763	0x01F7      	CLRF       R7
0x0764	0x2209      	CALL       _Mul_32x32_U
0x0765	0x0870      	MOVF       R0, 0
0x0766	0x0142      	MOVLB      2
0x0767	0x0758      	ADDWF      _Tick, 0
0x0768	0x0143      	MOVLB      3
0x0769	0x00C1      	MOVWF      _disp_cnt
0x076A	0x0871      	MOVF       R1, 0
0x076B	0x0142      	MOVLB      2
0x076C	0x3D59      	ADDWFC     _Tick+1, 0
0x076D	0x0143      	MOVLB      3
0x076E	0x00C2      	MOVWF      _disp_cnt+1
0x076F	0x0872      	MOVF       R2, 0
0x0770	0x0142      	MOVLB      2
0x0771	0x3D5A      	ADDWFC     _Tick+2, 0
0x0772	0x0143      	MOVLB      3
0x0773	0x00C3      	MOVWF      _disp_cnt+2
0x0774	0x0873      	MOVF       R3, 0
0x0775	0x0142      	MOVLB      2
0x0776	0x3D5B      	ADDWFC     _Tick+3, 0
0x0777	0x0143      	MOVLB      3
0x0778	0x00C4      	MOVWF      _disp_cnt+3
;main.c,168 :: 		off_cnt = Tick + Off_time*1000;
0x0779	0x0140      	MOVLB      0
0x077A	0x0850      	MOVF       _Off_time, 0
0x077B	0x00F0      	MOVWF      R0
0x077C	0x0851      	MOVF       _Off_time+1, 0
0x077D	0x00F1      	MOVWF      R1
0x077E	0x0852      	MOVF       _Off_time+2, 0
0x077F	0x00F2      	MOVWF      R2
0x0780	0x0853      	MOVF       _Off_time+3, 0
0x0781	0x00F3      	MOVWF      R3
0x0782	0x30E8      	MOVLW      232
0x0783	0x00F4      	MOVWF      R4
0x0784	0x3003      	MOVLW      3
0x0785	0x00F5      	MOVWF      R5
0x0786	0x01F6      	CLRF       R6
0x0787	0x01F7      	CLRF       R7
0x0788	0x2209      	CALL       _Mul_32x32_U
0x0789	0x0870      	MOVF       R0, 0
0x078A	0x0142      	MOVLB      2
0x078B	0x0758      	ADDWF      _Tick, 0
0x078C	0x0143      	MOVLB      3
0x078D	0x00A2      	MOVWF      _off_cnt
0x078E	0x0871      	MOVF       R1, 0
0x078F	0x0142      	MOVLB      2
0x0790	0x3D59      	ADDWFC     _Tick+1, 0
0x0791	0x0143      	MOVLB      3
0x0792	0x00A3      	MOVWF      _off_cnt+1
0x0793	0x0872      	MOVF       R2, 0
0x0794	0x0142      	MOVLB      2
0x0795	0x3D5A      	ADDWFC     _Tick+2, 0
0x0796	0x0143      	MOVLB      3
0x0797	0x00A4      	MOVWF      _off_cnt+2
0x0798	0x0873      	MOVF       R3, 0
0x0799	0x0142      	MOVLB      2
0x079A	0x3D5B      	ADDWFC     _Tick+3, 0
0x079B	0x0143      	MOVLB      3
0x079C	0x00A5      	MOVWF      _off_cnt+3
;main.c,169 :: 		return;
;main.c,170 :: 		}
L_end_oled_start:
0x079D	0x0008      	RETURN
; end of _oled_start
_double2int:
;__Lib_MathDouble.c,1385 :: 		
;__Lib_MathDouble.c,1393 :: 		
0x079E	0x0140      	MOVLB      0
;__Lib_MathDouble.c,1395 :: 		
0x079F	0x01FB      	CLRF       R11
;__Lib_MathDouble.c,1396 :: 		
0x07A0	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,1397 :: 		
0x07A1	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1398 :: 		
0x07A2	0x2FDA      	GOTO       IRES016
;__Lib_MathDouble.c,1400 :: 		
0x07A3	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,1401 :: 		
0x07A4	0x00FA      	MOVWF      R10
;__Lib_MathDouble.c,1402 :: 		
0x07A5	0x17F2      	BSF        R2, 7
;__Lib_MathDouble.c,1404 :: 		
0x07A6	0x308E      	MOVLW      142
;__Lib_MathDouble.c,1405 :: 		
0x07A7	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,1406 :: 		
0x07A8	0x1FF3      	BTFSS      R3, 7
;__Lib_MathDouble.c,1407 :: 		
0x07A9	0x2FDD      	GOTO       SETIOV16
;__Lib_MathDouble.c,1408 :: 		
0x07AA	0x09F3      	COMF       R3, 1
;__Lib_MathDouble.c,1409 :: 		
0x07AB	0x0AF3      	INCF       R3, 1
;__Lib_MathDouble.c,1411 :: 		
0x07AC	0x3008      	MOVLW      8
;__Lib_MathDouble.c,1412 :: 		
0x07AD	0x0273      	SUBWF      R3, 0
;__Lib_MathDouble.c,1413 :: 		
0x07AE	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,1414 :: 		
0x07AF	0x2FC0      	GOTO       TSHIFT3216
;__Lib_MathDouble.c,1415 :: 		
0x07B0	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,1416 :: 		
0x07B1	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,1417 :: 		
0x07B2	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,1418 :: 		
0x07B3	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,1419 :: 		
0x07B4	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1421 :: 		
0x07B5	0x3008      	MOVLW      8
;__Lib_MathDouble.c,1422 :: 		
0x07B6	0x0273      	SUBWF      R3, 0
;__Lib_MathDouble.c,1423 :: 		
0x07B7	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,1424 :: 		
0x07B8	0x2FC0      	GOTO       TSHIFT3216
;__Lib_MathDouble.c,1425 :: 		
0x07B9	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,1426 :: 		
0x07BA	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,1427 :: 		
0x07BB	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,1429 :: 		
0x07BC	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,1430 :: 		
0x07BD	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,1431 :: 		
0x07BE	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,1432 :: 		
0x07BF	0x2FC8      	GOTO       SHIFT3216OK
;__Lib_MathDouble.c,1433 :: 		
TSHIFT3216:
;__Lib_MathDouble.c,1434 :: 		
0x07C0	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,1435 :: 		
0x07C1	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1436 :: 		
0x07C2	0x2FC8      	GOTO       SHIFT3216OK
;__Lib_MathDouble.c,1437 :: 		
SHIFT3216:
;__Lib_MathDouble.c,1438 :: 		
0x07C3	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,1439 :: 		
0x07C4	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,1440 :: 		
0x07C5	0x0CF1      	RRF        R1, 1
;__Lib_MathDouble.c,1441 :: 		
0x07C6	0x0BF3      	DECFSZ     R3, 1
;__Lib_MathDouble.c,1442 :: 		
0x07C7	0x2FC3      	GOTO       SHIFT3216
;__Lib_MathDouble.c,1443 :: 		
SHIFT3216OK:
;__Lib_MathDouble.c,1444 :: 		
0x07C8	0x1B7B      	BTFSC      R11, 6
;__Lib_MathDouble.c,1445 :: 		
0x07C9	0x1C71      	BTFSS      R1, 0
;__Lib_MathDouble.c,1446 :: 		
0x07CA	0x2FD2      	GOTO       INT3216OK
;__Lib_MathDouble.c,1447 :: 		
0x07CB	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,1448 :: 		
0x07CC	0x2FD2      	GOTO       INT3216OK
;__Lib_MathDouble.c,1449 :: 		
0x07CD	0x0AF1      	INCF       R1, 1
;__Lib_MathDouble.c,1450 :: 		
0x07CE	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1451 :: 		
0x07CF	0x0AF2      	INCF       R2, 1
;__Lib_MathDouble.c,1452 :: 		
0x07D0	0x1BF2      	BTFSC      R2, 7
;__Lib_MathDouble.c,1453 :: 		
0x07D1	0x2FE9      	GOTO       JPJSETIOV3224
;__Lib_MathDouble.c,1454 :: 		
INT3216OK:
;__Lib_MathDouble.c,1455 :: 		
0x07D2	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,1456 :: 		
0x07D3	0x2FEC      	GOTO       INT3216EOK
;__Lib_MathDouble.c,1458 :: 		
0x07D4	0x09F2      	COMF       R2, 1
;__Lib_MathDouble.c,1459 :: 		
0x07D5	0x09F1      	COMF       R1, 1
;__Lib_MathDouble.c,1460 :: 		
0x07D6	0x0AF1      	INCF       R1, 1
;__Lib_MathDouble.c,1461 :: 		
0x07D7	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1462 :: 		
0x07D8	0x0AF2      	INCF       R2, 1
;__Lib_MathDouble.c,1463 :: 		
0x07D9	0x2FEC      	GOTO       INT3216EOK
;__Lib_MathDouble.c,1465 :: 		
IRES016:
;__Lib_MathDouble.c,1466 :: 		
0x07DA	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1467 :: 		
0x07DB	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,1468 :: 		
0x07DC	0x2FEC      	GOTO       INT3216EOK
;__Lib_MathDouble.c,1469 :: 		
SETIOV16:
;__Lib_MathDouble.c,1470 :: 		
0x07DD	0x147B      	BSF        R11, 0
;__Lib_MathDouble.c,1471 :: 		
0x07DE	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.c,1472 :: 		
0x07DF	0x2FEF      	GOTO       INT3216EER
;__Lib_MathDouble.c,1474 :: 		
0x07E0	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1475 :: 		
0x07E1	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,1476 :: 		
0x07E2	0x2FEF      	GOTO       INT3216EER
;__Lib_MathDouble.c,1477 :: 		
0x07E3	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,1478 :: 		
0x07E4	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,1479 :: 		
0x07E5	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,1480 :: 		
0x07E6	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.c,1481 :: 		
0x07E7	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,1482 :: 		
0x07E8	0x2FEF      	GOTO       INT3216EER
;__Lib_MathDouble.c,1484 :: 		
JPJSETIOV3224:
;__Lib_MathDouble.c,1485 :: 		
0x07E9	0x3001      	MOVLW      1
;__Lib_MathDouble.c,1486 :: 		
0x07EA	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,1487 :: 		
0x07EB	0x2FF1      	GOTO       INT3216EEE
;__Lib_MathDouble.c,1488 :: 		
INT3216EOK:
;__Lib_MathDouble.c,1489 :: 		
0x07EC	0x3000      	MOVLW      0
;__Lib_MathDouble.c,1490 :: 		
0x07ED	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,1491 :: 		
0x07EE	0x2FF1      	GOTO       INT3216EEE
;__Lib_MathDouble.c,1492 :: 		
INT3216EER:
;__Lib_MathDouble.c,1493 :: 		
0x07EF	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,1494 :: 		
0x07F0	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,1495 :: 		
INT3216EEE:
;__Lib_MathDouble.c,1498 :: 		
0x07F1	0x08FC      	MOVF       R12, 1
;__Lib_MathDouble.c,1500 :: 		
0x07F2	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1501 :: 		
0x07F3	0x2FF5      	GOTO       L_Double2Int_0
;__Lib_MathDouble.c,1503 :: 		
0x07F4	0x264E      	CALL       _SETIOV3224
;__Lib_MathDouble.c,1505 :: 		
L_Double2Int_0:
;__Lib_MathDouble.c,1506 :: 		
0x07F5	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,1507 :: 		
0x07F6	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,1508 :: 		
0x07F7	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,1509 :: 		
0x07F8	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,1513 :: 		
L_end_double2int:
0x07F9	0x0008      	RETURN
; end of _double2int
_SETFDZ32:
;__Lib_MathDouble.c,102 :: 		
;__Lib_MathDouble.c,105 :: 		
0x0800	0x15FB      	BSF        R11, 3
;__Lib_MathDouble.c,106 :: 		
0x0801	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,108 :: 		
L_end_SETFDZ32:
0x0802	0x0008      	RETURN
; end of _SETFDZ32
_Mul_32x32_FP:
;__Lib_MathDouble.c,608 :: 		
;__Lib_MathDouble.c,620 :: 		
;__Lib_MathDouble.c,622 :: 		
0x0803	0x0140      	MOVLB      0
;__Lib_MathDouble.c,624 :: 		
0x0804	0x01FB      	CLRF       R11
;__Lib_MathDouble.c,625 :: 		
0x0805	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,626 :: 		
0x0806	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,627 :: 		
0x0807	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,628 :: 		
0x0808	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,629 :: 		
0x0809	0x2859      	GOTO       JPMRES032
;__Lib_MathDouble.c,631 :: 		
0x080A	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,632 :: 		
0x080B	0x0676      	XORWF      R6, 0
;__Lib_MathDouble.c,633 :: 		
0x080C	0x00FA      	MOVWF      R10
;__Lib_MathDouble.c,634 :: 		
0x080D	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,635 :: 		
0x080E	0x07F3      	ADDWF      R3, 1
;__Lib_MathDouble.c,636 :: 		
0x080F	0x307E      	MOVLW      126
;__Lib_MathDouble.c,637 :: 		
0x0810	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,638 :: 		
0x0811	0x2816      	GOTO       MTUN32
;__Lib_MathDouble.c,639 :: 		
0x0812	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,640 :: 		
0x0813	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,641 :: 		
0x0814	0x285E      	GOTO       JPMSETFOV32
;__Lib_MathDouble.c,642 :: 		
0x0815	0x2819      	GOTO       MOK32
;__Lib_MathDouble.c,643 :: 		
MTUN32:
;__Lib_MathDouble.c,644 :: 		
0x0816	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,645 :: 		
0x0817	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,646 :: 		
0x0818	0x2863      	GOTO       JPMSETFUN32
;__Lib_MathDouble.c,647 :: 		
MOK32:
;__Lib_MathDouble.c,648 :: 		
0x0819	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,649 :: 		
0x081A	0x00F8      	MOVWF      R8
;__Lib_MathDouble.c,650 :: 		
0x081B	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,651 :: 		
0x081C	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,652 :: 		
0x081D	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,653 :: 		
0x081E	0x00FD      	MOVWF      R13
;__Lib_MathDouble.c,654 :: 		
0x081F	0x17F8      	BSF        R8, 7
;__Lib_MathDouble.c,655 :: 		
0x0820	0x17F6      	BSF        R6, 7
;__Lib_MathDouble.c,656 :: 		
0x0821	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,657 :: 		
0x0822	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,658 :: 		
0x0823	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,659 :: 		
0x0824	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,660 :: 		
0x0825	0x3018      	MOVLW      24
;__Lib_MathDouble.c,661 :: 		
0x0826	0x00A1      	MOVWF      __math_tempbD
;__Lib_MathDouble.c,662 :: 		
MLOOP32:
;__Lib_MathDouble.c,663 :: 		
0x0827	0x1C7D      	BTFSS      R13, 0
;__Lib_MathDouble.c,664 :: 		
0x0828	0x2833      	GOTO       MNOADD32
;__Lib_MathDouble.c,666 :: 		
0x0829	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,667 :: 		
0x082A	0x07F0      	ADDWF      R0, 1
;__Lib_MathDouble.c,668 :: 		
0x082B	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,669 :: 		
0x082C	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,670 :: 		
0x082D	0x0F75      	INCFSZ     R5, 0
;__Lib_MathDouble.c,671 :: 		
0x082E	0x07F1      	ADDWF      R1, 1
;__Lib_MathDouble.c,672 :: 		
0x082F	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,673 :: 		
0x0830	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,674 :: 		
0x0831	0x0F76      	INCFSZ     R6, 0
;__Lib_MathDouble.c,675 :: 		
0x0832	0x07F2      	ADDWF      R2, 1
;__Lib_MathDouble.c,676 :: 		
MNOADD32:
;__Lib_MathDouble.c,677 :: 		
0x0833	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,678 :: 		
0x0834	0x0CF1      	RRF        R1, 1
;__Lib_MathDouble.c,679 :: 		
0x0835	0x0CF0      	RRF        R0, 1
;__Lib_MathDouble.c,680 :: 		
0x0836	0x0CF8      	RRF        R8, 1
;__Lib_MathDouble.c,681 :: 		
0x0837	0x0CFC      	RRF        R12, 1
;__Lib_MathDouble.c,682 :: 		
0x0838	0x0CFD      	RRF        R13, 1
;__Lib_MathDouble.c,683 :: 		
0x0839	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,684 :: 		
0x083A	0x0BA1      	DECFSZ     __math_tempbD, 1
;__Lib_MathDouble.c,685 :: 		
0x083B	0x2827      	GOTO       MLOOP32
;__Lib_MathDouble.c,686 :: 		
0x083C	0x1BF2      	BTFSC      R2, 7
;__Lib_MathDouble.c,687 :: 		
0x083D	0x2843      	GOTO       MROUND32
;__Lib_MathDouble.c,688 :: 		
0x083E	0x0DF8      	RLF        R8, 1
;__Lib_MathDouble.c,689 :: 		
0x083F	0x0DF0      	RLF        R0, 1
;__Lib_MathDouble.c,690 :: 		
0x0840	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,691 :: 		
0x0841	0x0DF2      	RLF        R2, 1
;__Lib_MathDouble.c,692 :: 		
0x0842	0x03F3      	DECF       R3, 1
;__Lib_MathDouble.c,693 :: 		
MROUND32:
;__Lib_MathDouble.c,694 :: 		
0x0843	0x1B7B      	BTFSC      R11, 6
;__Lib_MathDouble.c,695 :: 		
0x0844	0x1C70      	BTFSS      R0, 0
;__Lib_MathDouble.c,696 :: 		
0x0845	0x2855      	GOTO       MUL32OK
;__Lib_MathDouble.c,697 :: 		
0x0846	0x1FF8      	BTFSS      R8, 7
;__Lib_MathDouble.c,698 :: 		
0x0847	0x2855      	GOTO       MUL32OK
;__Lib_MathDouble.c,699 :: 		
0x0848	0x0AF0      	INCF       R0, 1
;__Lib_MathDouble.c,700 :: 		
0x0849	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,701 :: 		
0x084A	0x0AF1      	INCF       R1, 1
;__Lib_MathDouble.c,702 :: 		
0x084B	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,703 :: 		
0x084C	0x0AF2      	INCF       R2, 1
;__Lib_MathDouble.c,704 :: 		
0x084D	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,705 :: 		
0x084E	0x2855      	GOTO       MUL32OK
;__Lib_MathDouble.c,706 :: 		
0x084F	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,707 :: 		
0x0850	0x0CF1      	RRF        R1, 1
;__Lib_MathDouble.c,708 :: 		
0x0851	0x0CF0      	RRF        R0, 1
;__Lib_MathDouble.c,709 :: 		
0x0852	0x0AF3      	INCF       R3, 1
;__Lib_MathDouble.c,710 :: 		
0x0853	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,711 :: 		
0x0854	0x285E      	GOTO       JPMSETFOV32
;__Lib_MathDouble.c,712 :: 		
MUL32OK:
;__Lib_MathDouble.c,713 :: 		
0x0855	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,714 :: 		
0x0856	0x13F2      	BCF        R2, 7
;__Lib_MathDouble.c,715 :: 		
0x0857	0x3000      	MOVLW      0
;__Lib_MathDouble.c,717 :: 		
0x0858	0x2867      	GOTO       MUL32EEE
;__Lib_MathDouble.c,718 :: 		
JPMRES032:
;__Lib_MathDouble.c,719 :: 		
0x0859	0x3001      	MOVLW      1
;__Lib_MathDouble.c,722 :: 		
0x085A	0x3180      	MOVLP      0
0x085B	0x21F6      	CALL       _RES032
0x085C	0x3188      	MOVLP      8
;__Lib_MathDouble.c,724 :: 		
0x085D	0x2867      	GOTO       MUL32EEE
;__Lib_MathDouble.c,725 :: 		
JPMSETFOV32:
;__Lib_MathDouble.c,726 :: 		
0x085E	0x3002      	MOVLW      2
;__Lib_MathDouble.c,729 :: 		
0x085F	0x3180      	MOVLP      0
0x0860	0x2642      	CALL       _SETFOV32
0x0861	0x3188      	MOVLP      8
;__Lib_MathDouble.c,731 :: 		
0x0862	0x2867      	GOTO       MUL32EEE
;__Lib_MathDouble.c,732 :: 		
JPMSETFUN32:
;__Lib_MathDouble.c,733 :: 		
0x0863	0x3004      	MOVLW      4
;__Lib_MathDouble.c,736 :: 		
0x0864	0x3180      	MOVLP      0
0x0865	0x21FD      	CALL       _SETFUN32
0x0866	0x3188      	MOVLP      8
;__Lib_MathDouble.c,738 :: 		
MUL32EEE:
;__Lib_MathDouble.c,739 :: 		
0x0867	0x0000      	NOP
;__Lib_MathDouble.c,746 :: 		
L_end_Mul_32x32_FP:
0x0868	0x0008      	RETURN
; end of _Mul_32x32_FP
_int2double:
;__Lib_MathDouble.c,1802 :: 		
;__Lib_MathDouble.c,1808 :: 		
0x0869	0x0140      	MOVLB      0
;__Lib_MathDouble.c,1809 :: 		
0x086A	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,1810 :: 		
0x086B	0x00F8      	MOVWF      R8
;__Lib_MathDouble.c,1811 :: 		
0x086C	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,1812 :: 		
0x086D	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,1813 :: 		
0x086E	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,1814 :: 		
0x086F	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1815 :: 		
0x0870	0x01F3      	CLRF       R3
;__Lib_MathDouble.c,1818 :: 		
0x0871	0x01FB      	CLRF       R11
;__Lib_MathDouble.c,1819 :: 		
0x0872	0x01FC      	CLRF       R12
;__Lib_MathDouble.c,1821 :: 		
0x0873	0x3096      	MOVLW      150
;__Lib_MathDouble.c,1822 :: 		
0x0874	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,1823 :: 		
0x0875	0x01FA      	CLRF       R10
;__Lib_MathDouble.c,1824 :: 		
0x0876	0x1FF0      	BTFSS      R0, 7
;__Lib_MathDouble.c,1825 :: 		
0x0877	0x287E      	GOTO       FLO1632EEE
;__Lib_MathDouble.c,1827 :: 		
0x0878	0x09F8      	COMF       R8, 1
;__Lib_MathDouble.c,1828 :: 		
0x0879	0x09F0      	COMF       R0, 1
;__Lib_MathDouble.c,1830 :: 		
0x087A	0x0AF8      	INCF       R8, 1
;__Lib_MathDouble.c,1831 :: 		
0x087B	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1832 :: 		
0x087C	0x0AF0      	INCF       R0, 1
;__Lib_MathDouble.c,1834 :: 		
0x087D	0x17FA      	BSF        R10, 7
;__Lib_MathDouble.c,1835 :: 		
FLO1632EEE:
;__Lib_MathDouble.c,1836 :: 		
0x087E	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,1837 :: 		
0x087F	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,1838 :: 		
0x0880	0x0878      	MOVF       R8, 0
;__Lib_MathDouble.c,1839 :: 		
0x0881	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,1840 :: 		
0x0882	0x01F8      	CLRF       R8
;__Lib_MathDouble.c,1841 :: 		
0x0883	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1843 :: 		
0x0884	0x3180      	MOVLP      0
0x0885	0x255D      	CALL       _NRM3232
0x0886	0x3188      	MOVLP      8
;__Lib_MathDouble.c,1844 :: 		
L_end_int2double:
0x0887	0x0008      	RETURN
; end of _int2double
_NRM4032:
;__Lib_MathDouble.c,245 :: 		
;__Lib_MathDouble.c,252 :: 		
;__Lib_MathDouble.c,254 :: 		
0x0888	0x187C      	BTFSC      R12, 0
;__Lib_MathDouble.c,255 :: 		
0x0889	0x28BE      	GOTO       NRMRND4032
;__Lib_MathDouble.c,256 :: 		
0x088A	0x18FC      	BTFSC      R12, 1
;__Lib_MathDouble.c,257 :: 		
0x088B	0x288F      	GOTO       NRM4032
;__Lib_MathDouble.c,258 :: 		
0x088C	0x197C      	BTFSC      R12, 2
;__Lib_MathDouble.c,259 :: 		
0x088D	0x28E3      	GOTO       JMPSETFOV32
;__Lib_MathDouble.c,260 :: 		
0x088E	0x2888      	GOTO       $-6
;__Lib_MathDouble.c,261 :: 		
NRM4032:
;__Lib_MathDouble.c,262 :: 		
0x088F	0x01A1      	CLRF       __math_tempbD
;__Lib_MathDouble.c,263 :: 		
0x0890	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,264 :: 		
0x0891	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,265 :: 		
0x0892	0x28AF      	GOTO       NORM4032
;__Lib_MathDouble.c,266 :: 		
0x0893	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,267 :: 		
0x0894	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,268 :: 		
0x0895	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,269 :: 		
0x0896	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,270 :: 		
0x0897	0x0878      	MOVF       R8, 0
;__Lib_MathDouble.c,271 :: 		
0x0898	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,272 :: 		
0x0899	0x01F8      	CLRF       R8
;__Lib_MathDouble.c,273 :: 		
0x089A	0x15A1      	BSF        __math_tempbD, 3
;__Lib_MathDouble.c,275 :: 		
0x089B	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,276 :: 		
0x089C	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,277 :: 		
0x089D	0x28AF      	GOTO       NORM4032
;__Lib_MathDouble.c,278 :: 		
0x089E	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,279 :: 		
0x089F	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,280 :: 		
0x08A0	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,281 :: 		
0x08A1	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,282 :: 		
0x08A2	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,283 :: 		
0x08A3	0x11A1      	BCF        __math_tempbD, 3
;__Lib_MathDouble.c,284 :: 		
0x08A4	0x1621      	BSF        __math_tempbD, 4
;__Lib_MathDouble.c,286 :: 		
0x08A5	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,287 :: 		
0x08A6	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,288 :: 		
0x08A7	0x28AF      	GOTO       NORM4032
;__Lib_MathDouble.c,289 :: 		
0x08A8	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,290 :: 		
0x08A9	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,291 :: 		
0x08AA	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,292 :: 		
0x08AB	0x15A1      	BSF        __math_tempbD, 3
;__Lib_MathDouble.c,294 :: 		
0x08AC	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,295 :: 		
0x08AD	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,296 :: 		
0x08AE	0x28D1      	GOTO       JMPRES032
;__Lib_MathDouble.c,297 :: 		
NORM4032:
;__Lib_MathDouble.c,298 :: 		
0x08AF	0x0821      	MOVF       __math_tempbD, 0
;__Lib_MathDouble.c,299 :: 		
0x08B0	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,300 :: 		
0x08B1	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,301 :: 		
0x08B2	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,302 :: 		
0x08B3	0x28D7      	GOTO       JMPSETFUN32
;__Lib_MathDouble.c,303 :: 		
0x08B4	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,304 :: 		
NORM4032A:
;__Lib_MathDouble.c,305 :: 		
0x08B5	0x1BF2      	BTFSC      R2, 7
;__Lib_MathDouble.c,306 :: 		
0x08B6	0x28BE      	GOTO       NRMRND4032
;__Lib_MathDouble.c,307 :: 		
0x08B7	0x0DF8      	RLF        R8, 1
;__Lib_MathDouble.c,308 :: 		
0x08B8	0x0DF0      	RLF        R0, 1
;__Lib_MathDouble.c,309 :: 		
0x08B9	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,310 :: 		
0x08BA	0x0DF2      	RLF        R2, 1
;__Lib_MathDouble.c,311 :: 		
0x08BB	0x0BF3      	DECFSZ     R3, 1
;__Lib_MathDouble.c,312 :: 		
0x08BC	0x28B5      	GOTO       NORM4032A
;__Lib_MathDouble.c,313 :: 		
0x08BD	0x28D7      	GOTO       JMPSETFUN32
;__Lib_MathDouble.c,314 :: 		
NRMRND4032:
;__Lib_MathDouble.c,315 :: 		
0x08BE	0x1B7B      	BTFSC      R11, 6
;__Lib_MathDouble.c,316 :: 		
0x08BF	0x1C70      	BTFSS      R0, 0
;__Lib_MathDouble.c,317 :: 		
0x08C0	0x28DD      	GOTO       JMPFIXSIGN32
;__Lib_MathDouble.c,318 :: 		
0x08C1	0x1FF8      	BTFSS      R8, 7
;__Lib_MathDouble.c,319 :: 		
0x08C2	0x28DD      	GOTO       JMPFIXSIGN32
;__Lib_MathDouble.c,320 :: 		
0x08C3	0x0AF0      	INCF       R0, 1
;__Lib_MathDouble.c,321 :: 		
0x08C4	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,322 :: 		
0x08C5	0x0AF1      	INCF       R1, 1
;__Lib_MathDouble.c,323 :: 		
0x08C6	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,324 :: 		
0x08C7	0x0AF2      	INCF       R2, 1
;__Lib_MathDouble.c,325 :: 		
0x08C8	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,326 :: 		
0x08C9	0x28DD      	GOTO       JMPFIXSIGN32
;__Lib_MathDouble.c,327 :: 		
0x08CA	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,328 :: 		
0x08CB	0x0CF1      	RRF        R1, 1
;__Lib_MathDouble.c,329 :: 		
0x08CC	0x0CF0      	RRF        R0, 1
;__Lib_MathDouble.c,330 :: 		
0x08CD	0x0AF3      	INCF       R3, 1
;__Lib_MathDouble.c,331 :: 		
0x08CE	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,332 :: 		
0x08CF	0x28E3      	GOTO       JMPSETFOV32
;__Lib_MathDouble.c,333 :: 		
0x08D0	0x28DD      	GOTO       JMPFIXSIGN32
;__Lib_MathDouble.c,334 :: 		
JMPRES032:
;__Lib_MathDouble.c,335 :: 		
0x08D1	0x3001      	MOVLW      1
;__Lib_MathDouble.c,336 :: 		
0x08D2	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,338 :: 		
0x08D3	0x3180      	MOVLP      0
0x08D4	0x21F6      	CALL       _RES032
0x08D5	0x3188      	MOVLP      8
;__Lib_MathDouble.c,340 :: 		
0x08D6	0x28E8      	GOTO       NRM4032EEE
;__Lib_MathDouble.c,341 :: 		
JMPSETFUN32:
;__Lib_MathDouble.c,342 :: 		
0x08D7	0x3002      	MOVLW      2
;__Lib_MathDouble.c,343 :: 		
0x08D8	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,345 :: 		
0x08D9	0x3180      	MOVLP      0
0x08DA	0x21FD      	CALL       _SETFUN32
0x08DB	0x3188      	MOVLP      8
;__Lib_MathDouble.c,347 :: 		
0x08DC	0x28E8      	GOTO       NRM4032EEE
;__Lib_MathDouble.c,348 :: 		
JMPFIXSIGN32:
;__Lib_MathDouble.c,349 :: 		
0x08DD	0x3004      	MOVLW      4
;__Lib_MathDouble.c,350 :: 		
0x08DE	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,352 :: 		
0x08DF	0x3180      	MOVLP      0
0x08E0	0x22A0      	CALL       _FIXSIGN32
0x08E1	0x3188      	MOVLP      8
;__Lib_MathDouble.c,354 :: 		
0x08E2	0x28E8      	GOTO       NRM4032EEE
;__Lib_MathDouble.c,355 :: 		
JMPSETFOV32:
;__Lib_MathDouble.c,356 :: 		
0x08E3	0x3008      	MOVLW      8
;__Lib_MathDouble.c,357 :: 		
0x08E4	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,359 :: 		
0x08E5	0x3180      	MOVLP      0
0x08E6	0x2642      	CALL       _SETFOV32
0x08E7	0x3188      	MOVLP      8
;__Lib_MathDouble.c,361 :: 		
NRM4032EEE:
;__Lib_MathDouble.c,362 :: 		
0x08E8	0x0000      	NOP
;__Lib_MathDouble.c,370 :: 		
L_end_NRM4032:
0x08E9	0x0008      	RETURN
; end of _NRM4032
_WordToStr:
;__Lib_Conversions.c,98 :: 		
;__Lib_Conversions.c,103 :: 		
0x08EA	0x0144      	MOVLB      4
0x08EB	0x01AC      	CLRF       WordToStr_len_L0
L_WordToStr11:
0x08EC	0x3005      	MOVLW      5
0x08ED	0x022C      	SUBWF      WordToStr_len_L0, 0
0x08EE	0x1803      	BTFSC      STATUS, 0
0x08EF	0x28FA      	GOTO       L_WordToStr12
;__Lib_Conversions.c,104 :: 		
0x08F0	0x082C      	MOVF       WordToStr_len_L0, 0
0x08F1	0x072A      	ADDWF      FARG_WordToStr_output, 0
0x08F2	0x0086      	MOVWF      FSR1
0x08F3	0x3000      	MOVLW      0
0x08F4	0x3D2B      	ADDWFC     FARG_WordToStr_output+1, 0
0x08F5	0x0087      	MOVWF      FSR1H
0x08F6	0x3020      	MOVLW      32
0x08F7	0x0081      	MOVWF      INDF1
;__Lib_Conversions.c,103 :: 		
0x08F8	0x0AAC      	INCF       WordToStr_len_L0, 1
;__Lib_Conversions.c,104 :: 		
0x08F9	0x28EC      	GOTO       L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c,105 :: 		
0x08FA	0x082C      	MOVF       WordToStr_len_L0, 0
0x08FB	0x072A      	ADDWF      FARG_WordToStr_output, 0
0x08FC	0x0086      	MOVWF      FSR1
0x08FD	0x3000      	MOVLW      0
0x08FE	0x3D2B      	ADDWFC     FARG_WordToStr_output+1, 0
0x08FF	0x0087      	MOVWF      FSR1H
0x0900	0x0181      	CLRF       INDF1
0x0901	0x03AC      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,107 :: 		
L_WordToStr14:
;__Lib_Conversions.c,108 :: 		
0x0902	0x082C      	MOVF       WordToStr_len_L0, 0
0x0903	0x072A      	ADDWF      FARG_WordToStr_output, 0
0x0904	0x00AD      	MOVWF      FLOC__WordToStr
0x0905	0x3000      	MOVLW      0
0x0906	0x3D2B      	ADDWFC     FARG_WordToStr_output+1, 0
0x0907	0x00AE      	MOVWF      FLOC__WordToStr+1
0x0908	0x300A      	MOVLW      10
0x0909	0x00F4      	MOVWF      R4
0x090A	0x01F5      	CLRF       R5
0x090B	0x0828      	MOVF       FARG_WordToStr_input, 0
0x090C	0x00F0      	MOVWF      R0
0x090D	0x0829      	MOVF       FARG_WordToStr_input+1, 0
0x090E	0x00F1      	MOVWF      R1
0x090F	0x3180      	MOVLP      0
0x0910	0x24B2      	CALL       _Div_16X16_U
0x0911	0x3188      	MOVLP      8
0x0912	0x0878      	MOVF       R8, 0
0x0913	0x00F0      	MOVWF      R0
0x0914	0x0879      	MOVF       R9, 0
0x0915	0x00F1      	MOVWF      R1
0x0916	0x3030      	MOVLW      48
0x0917	0x07F0      	ADDWF      R0, 1
0x0918	0x0144      	MOVLB      4
0x0919	0x082D      	MOVF       FLOC__WordToStr, 0
0x091A	0x0086      	MOVWF      FSR1
0x091B	0x082E      	MOVF       FLOC__WordToStr+1, 0
0x091C	0x0087      	MOVWF      FSR1H
0x091D	0x0870      	MOVF       R0, 0
0x091E	0x0081      	MOVWF      INDF1
;__Lib_Conversions.c,109 :: 		
0x091F	0x300A      	MOVLW      10
0x0920	0x00F4      	MOVWF      R4
0x0921	0x01F5      	CLRF       R5
0x0922	0x0828      	MOVF       FARG_WordToStr_input, 0
0x0923	0x00F0      	MOVWF      R0
0x0924	0x0829      	MOVF       FARG_WordToStr_input+1, 0
0x0925	0x00F1      	MOVWF      R1
0x0926	0x3180      	MOVLP      0
0x0927	0x24B2      	CALL       _Div_16X16_U
0x0928	0x3188      	MOVLP      8
0x0929	0x0870      	MOVF       R0, 0
0x092A	0x0144      	MOVLB      4
0x092B	0x00A8      	MOVWF      FARG_WordToStr_input
0x092C	0x0871      	MOVF       R1, 0
0x092D	0x00A9      	MOVWF      FARG_WordToStr_input+1
;__Lib_Conversions.c,110 :: 		
0x092E	0x3000      	MOVLW      0
0x092F	0x0671      	XORWF      R1, 0
0x0930	0x1D03      	BTFSS      STATUS, 2
0x0931	0x2934      	GOTO       L__WordToStr379
0x0932	0x3000      	MOVLW      0
0x0933	0x0670      	XORWF      R0, 0
L__WordToStr379:
0x0934	0x1D03      	BTFSS      STATUS, 2
0x0935	0x2937      	GOTO       L_WordToStr16
;__Lib_Conversions.c,111 :: 		
0x0936	0x2939      	GOTO       L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c,112 :: 		
0x0937	0x03AC      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,113 :: 		
0x0938	0x2902      	GOTO       L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c,114 :: 		
L_end_WordToStr:
0x0939	0x0008      	RETURN
; end of _WordToStr
_COMFREM:
;__Lib_Math.c,1060 :: 		
;__Lib_Math.c,1064 :: 		
0x093A	0x09FB      	COMF       R11, 1
;__Lib_Math.c,1065 :: 		
0x093B	0x09FA      	COMF       R10, 1
;__Lib_Math.c,1066 :: 		
0x093C	0x09F9      	COMF       R9, 1
;__Lib_Math.c,1067 :: 		
0x093D	0x09F8      	COMF       R8, 1
;__Lib_Math.c,1068 :: 		
0x093E	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,1069 :: 		
0x093F	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1070 :: 		
0x0940	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,1071 :: 		
0x0941	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1072 :: 		
0x0942	0x0AFA      	INCF       R10, 1
;__Lib_Math.c,1073 :: 		
0x0943	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1074 :: 		
0x0944	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,1076 :: 		
L_end_COMFREM:
0x0945	0x0008      	RETURN
; end of _COMFREM
_SDIV3232L:
;__Lib_Math.c,691 :: 		
;__Lib_Math.c,700 :: 		
0x0946	0x0874      	MOVF       R4, 0
;__Lib_Math.c,701 :: 		
0x0947	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,702 :: 		
0x0948	0x0875      	MOVF       R5, 0
;__Lib_Math.c,703 :: 		
0x0949	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,704 :: 		
0x094A	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,705 :: 		
0x094B	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,706 :: 		
0x094C	0x0876      	MOVF       R6, 0
;__Lib_Math.c,707 :: 		
0x094D	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,708 :: 		
0x094E	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,709 :: 		
0x094F	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,710 :: 		
0x0950	0x0877      	MOVF       R7, 0
;__Lib_Math.c,711 :: 		
0x0951	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,712 :: 		
0x0952	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,713 :: 		
0x0953	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,714 :: 		
0x0954	0x0DF3      	RLF        R3, 1
;__Lib_Math.c,716 :: 		
0x0955	0x3007      	MOVLW      7
;__Lib_Math.c,717 :: 		
0x0956	0x00FC      	MOVWF      R12
;__Lib_Math.c,719 :: 		
LOOPS3232A:
;__Lib_Math.c,720 :: 		
0x0957	0x0D73      	RLF        R3, 0
;__Lib_Math.c,721 :: 		
0x0958	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,722 :: 		
0x0959	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,723 :: 		
0x095A	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,724 :: 		
0x095B	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,725 :: 		
0x095C	0x0874      	MOVF       R4, 0
;__Lib_Math.c,726 :: 		
0x095D	0x1C73      	BTFSS      R3, 0
;__Lib_Math.c,727 :: 		
0x095E	0x296D      	GOTO       SADD22LA
;__Lib_Math.c,729 :: 		
0x095F	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,730 :: 		
0x0960	0x0875      	MOVF       R5, 0
;__Lib_Math.c,731 :: 		
0x0961	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,732 :: 		
0x0962	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,733 :: 		
0x0963	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,734 :: 		
0x0964	0x0876      	MOVF       R6, 0
;__Lib_Math.c,735 :: 		
0x0965	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,736 :: 		
0x0966	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,737 :: 		
0x0967	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,738 :: 		
0x0968	0x0877      	MOVF       R7, 0
;__Lib_Math.c,739 :: 		
0x0969	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,740 :: 		
0x096A	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,741 :: 		
0x096B	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,742 :: 		
0x096C	0x297A      	GOTO       SOK22LA
;__Lib_Math.c,744 :: 		
SADD22LA:
;__Lib_Math.c,745 :: 		
0x096D	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,746 :: 		
0x096E	0x0875      	MOVF       R5, 0
;__Lib_Math.c,747 :: 		
0x096F	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,748 :: 		
0x0970	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,749 :: 		
0x0971	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,750 :: 		
0x0972	0x0876      	MOVF       R6, 0
;__Lib_Math.c,751 :: 		
0x0973	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,752 :: 		
0x0974	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,753 :: 		
0x0975	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,754 :: 		
0x0976	0x0877      	MOVF       R7, 0
;__Lib_Math.c,755 :: 		
0x0977	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,756 :: 		
0x0978	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,757 :: 		
0x0979	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,759 :: 		
SOK22LA:
;__Lib_Math.c,760 :: 		
0x097A	0x0DF3      	RLF        R3, 1
;__Lib_Math.c,762 :: 		
0x097B	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,763 :: 		
0x097C	0x2957      	GOTO       LOOPS3232A
;__Lib_Math.c,765 :: 		
0x097D	0x0D72      	RLF        R2, 0
;__Lib_Math.c,766 :: 		
0x097E	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,767 :: 		
0x097F	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,768 :: 		
0x0980	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,769 :: 		
0x0981	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,770 :: 		
0x0982	0x0874      	MOVF       R4, 0
;__Lib_Math.c,771 :: 		
0x0983	0x1C73      	BTFSS      R3, 0
;__Lib_Math.c,772 :: 		
0x0984	0x2993      	GOTO       SADD22L8
;__Lib_Math.c,774 :: 		
0x0985	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,775 :: 		
0x0986	0x0875      	MOVF       R5, 0
;__Lib_Math.c,776 :: 		
0x0987	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,777 :: 		
0x0988	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,778 :: 		
0x0989	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,779 :: 		
0x098A	0x0876      	MOVF       R6, 0
;__Lib_Math.c,780 :: 		
0x098B	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,781 :: 		
0x098C	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,782 :: 		
0x098D	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,783 :: 		
0x098E	0x0877      	MOVF       R7, 0
;__Lib_Math.c,784 :: 		
0x098F	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,785 :: 		
0x0990	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,786 :: 		
0x0991	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,787 :: 		
0x0992	0x29A0      	GOTO       SOK22L8
;__Lib_Math.c,789 :: 		
SADD22L8:
;__Lib_Math.c,790 :: 		
0x0993	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,791 :: 		
0x0994	0x0875      	MOVF       R5, 0
;__Lib_Math.c,792 :: 		
0x0995	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,793 :: 		
0x0996	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,794 :: 		
0x0997	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,795 :: 		
0x0998	0x0876      	MOVF       R6, 0
;__Lib_Math.c,796 :: 		
0x0999	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,797 :: 		
0x099A	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,798 :: 		
0x099B	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,799 :: 		
0x099C	0x0877      	MOVF       R7, 0
;__Lib_Math.c,800 :: 		
0x099D	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,801 :: 		
0x099E	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,802 :: 		
0x099F	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,804 :: 		
SOK22L8:
;__Lib_Math.c,805 :: 		
0x09A0	0x0DF2      	RLF        R2, 1
;__Lib_Math.c,807 :: 		
0x09A1	0x3007      	MOVLW      7
;__Lib_Math.c,808 :: 		
0x09A2	0x00FC      	MOVWF      R12
;__Lib_Math.c,810 :: 		
LOOPS3232B:
;__Lib_Math.c,811 :: 		
0x09A3	0x0D72      	RLF        R2, 0
;__Lib_Math.c,812 :: 		
0x09A4	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,813 :: 		
0x09A5	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,814 :: 		
0x09A6	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,815 :: 		
0x09A7	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,816 :: 		
0x09A8	0x0874      	MOVF       R4, 0
;__Lib_Math.c,817 :: 		
0x09A9	0x1C72      	BTFSS      R2, 0
;__Lib_Math.c,818 :: 		
0x09AA	0x29B9      	GOTO       SADD22LB
;__Lib_Math.c,820 :: 		
0x09AB	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,821 :: 		
0x09AC	0x0875      	MOVF       R5, 0
;__Lib_Math.c,822 :: 		
0x09AD	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,823 :: 		
0x09AE	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,824 :: 		
0x09AF	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,825 :: 		
0x09B0	0x0876      	MOVF       R6, 0
;__Lib_Math.c,826 :: 		
0x09B1	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,827 :: 		
0x09B2	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,828 :: 		
0x09B3	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,829 :: 		
0x09B4	0x0877      	MOVF       R7, 0
;__Lib_Math.c,830 :: 		
0x09B5	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,831 :: 		
0x09B6	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,832 :: 		
0x09B7	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,833 :: 		
0x09B8	0x29C6      	GOTO       SOK22LB
;__Lib_Math.c,835 :: 		
SADD22LB:
;__Lib_Math.c,836 :: 		
0x09B9	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,837 :: 		
0x09BA	0x0875      	MOVF       R5, 0
;__Lib_Math.c,838 :: 		
0x09BB	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,839 :: 		
0x09BC	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,840 :: 		
0x09BD	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,841 :: 		
0x09BE	0x0876      	MOVF       R6, 0
;__Lib_Math.c,842 :: 		
0x09BF	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,843 :: 		
0x09C0	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,844 :: 		
0x09C1	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,845 :: 		
0x09C2	0x0877      	MOVF       R7, 0
;__Lib_Math.c,846 :: 		
0x09C3	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,847 :: 		
0x09C4	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,848 :: 		
0x09C5	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,850 :: 		
SOK22LB:
;__Lib_Math.c,851 :: 		
0x09C6	0x0DF2      	RLF        R2, 1
;__Lib_Math.c,853 :: 		
0x09C7	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,854 :: 		
0x09C8	0x29A3      	GOTO       LOOPS3232B
;__Lib_Math.c,856 :: 		
0x09C9	0x0D71      	RLF        R1, 0
;__Lib_Math.c,857 :: 		
0x09CA	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,858 :: 		
0x09CB	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,859 :: 		
0x09CC	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,860 :: 		
0x09CD	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,861 :: 		
0x09CE	0x0874      	MOVF       R4, 0
;__Lib_Math.c,862 :: 		
0x09CF	0x1C72      	BTFSS      R2, 0
;__Lib_Math.c,863 :: 		
0x09D0	0x29DF      	GOTO       SADD22L16
;__Lib_Math.c,865 :: 		
0x09D1	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,866 :: 		
0x09D2	0x0875      	MOVF       R5, 0
;__Lib_Math.c,867 :: 		
0x09D3	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,868 :: 		
0x09D4	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,869 :: 		
0x09D5	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,870 :: 		
0x09D6	0x0876      	MOVF       R6, 0
;__Lib_Math.c,871 :: 		
0x09D7	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,872 :: 		
0x09D8	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,873 :: 		
0x09D9	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,874 :: 		
0x09DA	0x0877      	MOVF       R7, 0
;__Lib_Math.c,875 :: 		
0x09DB	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,876 :: 		
0x09DC	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,877 :: 		
0x09DD	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,878 :: 		
0x09DE	0x29EC      	GOTO       SOK22L16
;__Lib_Math.c,880 :: 		
SADD22L16:
;__Lib_Math.c,881 :: 		
0x09DF	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,882 :: 		
0x09E0	0x0875      	MOVF       R5, 0
;__Lib_Math.c,883 :: 		
0x09E1	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,884 :: 		
0x09E2	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,885 :: 		
0x09E3	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,886 :: 		
0x09E4	0x0876      	MOVF       R6, 0
;__Lib_Math.c,887 :: 		
0x09E5	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,888 :: 		
0x09E6	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,889 :: 		
0x09E7	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,890 :: 		
0x09E8	0x0877      	MOVF       R7, 0
;__Lib_Math.c,891 :: 		
0x09E9	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,892 :: 		
0x09EA	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,893 :: 		
0x09EB	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,895 :: 		
SOK22L16:
;__Lib_Math.c,896 :: 		
0x09EC	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,898 :: 		
0x09ED	0x3007      	MOVLW      7
;__Lib_Math.c,899 :: 		
0x09EE	0x00FC      	MOVWF      R12
;__Lib_Math.c,901 :: 		
LOOPS3232C:
;__Lib_Math.c,902 :: 		
0x09EF	0x0D71      	RLF        R1, 0
;__Lib_Math.c,903 :: 		
0x09F0	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,904 :: 		
0x09F1	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,905 :: 		
0x09F2	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,906 :: 		
0x09F3	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,907 :: 		
0x09F4	0x0874      	MOVF       R4, 0
;__Lib_Math.c,908 :: 		
0x09F5	0x1C71      	BTFSS      R1, 0
;__Lib_Math.c,909 :: 		
0x09F6	0x2A05      	GOTO       SADD22LC
;__Lib_Math.c,911 :: 		
0x09F7	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,912 :: 		
0x09F8	0x0875      	MOVF       R5, 0
;__Lib_Math.c,913 :: 		
0x09F9	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,914 :: 		
0x09FA	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,915 :: 		
0x09FB	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,916 :: 		
0x09FC	0x0876      	MOVF       R6, 0
;__Lib_Math.c,917 :: 		
0x09FD	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,918 :: 		
0x09FE	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,919 :: 		
0x09FF	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,920 :: 		
0x0A00	0x0877      	MOVF       R7, 0
;__Lib_Math.c,921 :: 		
0x0A01	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,922 :: 		
0x0A02	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,923 :: 		
0x0A03	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,924 :: 		
0x0A04	0x2A12      	GOTO       SOK22LC
;__Lib_Math.c,926 :: 		
SADD22LC:
;__Lib_Math.c,927 :: 		
0x0A05	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,928 :: 		
0x0A06	0x0875      	MOVF       R5, 0
;__Lib_Math.c,929 :: 		
0x0A07	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,930 :: 		
0x0A08	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,931 :: 		
0x0A09	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,932 :: 		
0x0A0A	0x0876      	MOVF       R6, 0
;__Lib_Math.c,933 :: 		
0x0A0B	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,934 :: 		
0x0A0C	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,935 :: 		
0x0A0D	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,936 :: 		
0x0A0E	0x0877      	MOVF       R7, 0
;__Lib_Math.c,937 :: 		
0x0A0F	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,938 :: 		
0x0A10	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,939 :: 		
0x0A11	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,941 :: 		
SOK22LC:
;__Lib_Math.c,942 :: 		
0x0A12	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,944 :: 		
0x0A13	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,945 :: 		
0x0A14	0x29EF      	GOTO       LOOPS3232C
;__Lib_Math.c,947 :: 		
0x0A15	0x0D70      	RLF        R0, 0
;__Lib_Math.c,948 :: 		
0x0A16	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,949 :: 		
0x0A17	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,950 :: 		
0x0A18	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,951 :: 		
0x0A19	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,952 :: 		
0x0A1A	0x0874      	MOVF       R4, 0
;__Lib_Math.c,953 :: 		
0x0A1B	0x1C71      	BTFSS      R1, 0
;__Lib_Math.c,954 :: 		
0x0A1C	0x2A2B      	GOTO       SADD22L24
;__Lib_Math.c,956 :: 		
0x0A1D	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,957 :: 		
0x0A1E	0x0875      	MOVF       R5, 0
;__Lib_Math.c,958 :: 		
0x0A1F	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,959 :: 		
0x0A20	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,960 :: 		
0x0A21	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,961 :: 		
0x0A22	0x0876      	MOVF       R6, 0
;__Lib_Math.c,962 :: 		
0x0A23	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,963 :: 		
0x0A24	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,964 :: 		
0x0A25	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,965 :: 		
0x0A26	0x0877      	MOVF       R7, 0
;__Lib_Math.c,966 :: 		
0x0A27	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,967 :: 		
0x0A28	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,968 :: 		
0x0A29	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,969 :: 		
0x0A2A	0x2A38      	GOTO       SOK22L24
;__Lib_Math.c,971 :: 		
SADD22L24:
;__Lib_Math.c,972 :: 		
0x0A2B	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,973 :: 		
0x0A2C	0x0875      	MOVF       R5, 0
;__Lib_Math.c,974 :: 		
0x0A2D	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,975 :: 		
0x0A2E	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,976 :: 		
0x0A2F	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,977 :: 		
0x0A30	0x0876      	MOVF       R6, 0
;__Lib_Math.c,978 :: 		
0x0A31	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,979 :: 		
0x0A32	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,980 :: 		
0x0A33	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,981 :: 		
0x0A34	0x0877      	MOVF       R7, 0
;__Lib_Math.c,982 :: 		
0x0A35	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,983 :: 		
0x0A36	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,984 :: 		
0x0A37	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,986 :: 		
SOK22L24:
;__Lib_Math.c,987 :: 		
0x0A38	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,989 :: 		
0x0A39	0x3007      	MOVLW      7
;__Lib_Math.c,990 :: 		
0x0A3A	0x00FC      	MOVWF      R12
;__Lib_Math.c,992 :: 		
LOOPS3232D:
;__Lib_Math.c,993 :: 		
0x0A3B	0x0D70      	RLF        R0, 0
;__Lib_Math.c,994 :: 		
0x0A3C	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,995 :: 		
0x0A3D	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,996 :: 		
0x0A3E	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,997 :: 		
0x0A3F	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,998 :: 		
0x0A40	0x0874      	MOVF       R4, 0
;__Lib_Math.c,999 :: 		
0x0A41	0x1C70      	BTFSS      R0, 0
;__Lib_Math.c,1000 :: 		
0x0A42	0x2A51      	GOTO       SADD22LD
;__Lib_Math.c,1002 :: 		
0x0A43	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1003 :: 		
0x0A44	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1004 :: 		
0x0A45	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1005 :: 		
0x0A46	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1006 :: 		
0x0A47	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1007 :: 		
0x0A48	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1008 :: 		
0x0A49	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1009 :: 		
0x0A4A	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1010 :: 		
0x0A4B	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1011 :: 		
0x0A4C	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1012 :: 		
0x0A4D	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1013 :: 		
0x0A4E	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1014 :: 		
0x0A4F	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1015 :: 		
0x0A50	0x2A5E      	GOTO       SOK22LD
;__Lib_Math.c,1017 :: 		
SADD22LD:
;__Lib_Math.c,1018 :: 		
0x0A51	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1019 :: 		
0x0A52	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1020 :: 		
0x0A53	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1021 :: 		
0x0A54	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1022 :: 		
0x0A55	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1023 :: 		
0x0A56	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1024 :: 		
0x0A57	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1025 :: 		
0x0A58	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1026 :: 		
0x0A59	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1027 :: 		
0x0A5A	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1028 :: 		
0x0A5B	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1030 :: 		
0x0A5C	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1031 :: 		
0x0A5D	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1033 :: 		
SOK22LD:
;__Lib_Math.c,1034 :: 		
0x0A5E	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,1036 :: 		
0x0A5F	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,1037 :: 		
0x0A60	0x2A3B      	GOTO       LOOPS3232D
;__Lib_Math.c,1039 :: 		
0x0A61	0x1870      	BTFSC      R0, 0
;__Lib_Math.c,1040 :: 		
0x0A62	0x2A71      	GOTO       SOK22L
;__Lib_Math.c,1041 :: 		
0x0A63	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1042 :: 		
0x0A64	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1043 :: 		
0x0A65	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1044 :: 		
0x0A66	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1045 :: 		
0x0A67	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1046 :: 		
0x0A68	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1047 :: 		
0x0A69	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1048 :: 		
0x0A6A	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1049 :: 		
0x0A6B	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1050 :: 		
0x0A6C	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1051 :: 		
0x0A6D	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1052 :: 		
0x0A6E	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1053 :: 		
0x0A6F	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1054 :: 		
0x0A70	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1055 :: 		
SOK22L:
;__Lib_Math.c,1058 :: 		
L_end_SDIV3232L:
0x0A71	0x0008      	RETURN
; end of _SDIV3232L
_Relay_set:
;main.c,393 :: 		void Relay_set(char L, char C, char I){
;main.c,394 :: 		L_010 = ~L.B0;
0x0A72	0x0144      	MOVLB      4
0x0A73	0x1828      	BTFSC      FARG_Relay_set_L, 0
0x0A74	0x2A78      	GOTO       L__Relay_set286
0x0A75	0x0140      	MOVLB      0
0x0A76	0x1799      	BSF        LATD7_bit, BitPos(LATD7_bit+0)
0x0A77	0x2A7A      	GOTO       L__Relay_set287
L__Relay_set286:
0x0A78	0x0140      	MOVLB      0
0x0A79	0x1399      	BCF        LATD7_bit, BitPos(LATD7_bit+0)
L__Relay_set287:
;main.c,395 :: 		L_022 = ~L.B1;
0x0A7A	0x0144      	MOVLB      4
0x0A7B	0x18A8      	BTFSC      FARG_Relay_set_L, 1
0x0A7C	0x2A80      	GOTO       L__Relay_set288
0x0A7D	0x0140      	MOVLB      0
0x0A7E	0x1719      	BSF        LATD6_bit, BitPos(LATD6_bit+0)
0x0A7F	0x2A82      	GOTO       L__Relay_set289
L__Relay_set288:
0x0A80	0x0140      	MOVLB      0
0x0A81	0x1319      	BCF        LATD6_bit, BitPos(LATD6_bit+0)
L__Relay_set289:
;main.c,396 :: 		L_045 = ~L.B2;
0x0A82	0x0144      	MOVLB      4
0x0A83	0x1928      	BTFSC      FARG_Relay_set_L, 2
0x0A84	0x2A88      	GOTO       L__Relay_set290
0x0A85	0x0140      	MOVLB      0
0x0A86	0x1699      	BSF        LATD5_bit, BitPos(LATD5_bit+0)
0x0A87	0x2A8A      	GOTO       L__Relay_set291
L__Relay_set290:
0x0A88	0x0140      	MOVLB      0
0x0A89	0x1299      	BCF        LATD5_bit, BitPos(LATD5_bit+0)
L__Relay_set291:
;main.c,397 :: 		L_100 = ~L.B3;
0x0A8A	0x0144      	MOVLB      4
0x0A8B	0x19A8      	BTFSC      FARG_Relay_set_L, 3
0x0A8C	0x2A90      	GOTO       L__Relay_set292
0x0A8D	0x0140      	MOVLB      0
0x0A8E	0x1619      	BSF        LATD4_bit, BitPos(LATD4_bit+0)
0x0A8F	0x2A92      	GOTO       L__Relay_set293
L__Relay_set292:
0x0A90	0x0140      	MOVLB      0
0x0A91	0x1219      	BCF        LATD4_bit, BitPos(LATD4_bit+0)
L__Relay_set293:
;main.c,398 :: 		L_220 = ~L.B4;
0x0A92	0x0144      	MOVLB      4
0x0A93	0x1A28      	BTFSC      FARG_Relay_set_L, 4
0x0A94	0x2A98      	GOTO       L__Relay_set294
0x0A95	0x0140      	MOVLB      0
0x0A96	0x1798      	BSF        LATC7_bit, BitPos(LATC7_bit+0)
0x0A97	0x2A9A      	GOTO       L__Relay_set295
L__Relay_set294:
0x0A98	0x0140      	MOVLB      0
0x0A99	0x1398      	BCF        LATC7_bit, BitPos(LATC7_bit+0)
L__Relay_set295:
;main.c,399 :: 		L_450 = ~L.B5;
0x0A9A	0x0144      	MOVLB      4
0x0A9B	0x1AA8      	BTFSC      FARG_Relay_set_L, 5
0x0A9C	0x2AA0      	GOTO       L__Relay_set296
0x0A9D	0x0140      	MOVLB      0
0x0A9E	0x1718      	BSF        LATC6_bit, BitPos(LATC6_bit+0)
0x0A9F	0x2AA2      	GOTO       L__Relay_set297
L__Relay_set296:
0x0AA0	0x0140      	MOVLB      0
0x0AA1	0x1318      	BCF        LATC6_bit, BitPos(LATC6_bit+0)
L__Relay_set297:
;main.c,400 :: 		L_1000 = ~L.B6;
0x0AA2	0x0144      	MOVLB      4
0x0AA3	0x1B28      	BTFSC      FARG_Relay_set_L, 6
0x0AA4	0x2AA8      	GOTO       L__Relay_set298
0x0AA5	0x0140      	MOVLB      0
0x0AA6	0x1698      	BSF        LATC5_bit, BitPos(LATC5_bit+0)
0x0AA7	0x2AAA      	GOTO       L__Relay_set299
L__Relay_set298:
0x0AA8	0x0140      	MOVLB      0
0x0AA9	0x1298      	BCF        LATC5_bit, BitPos(LATC5_bit+0)
L__Relay_set299:
;main.c,402 :: 		C_22 = ~C.B0;
0x0AAA	0x0144      	MOVLB      4
0x0AAB	0x1829      	BTFSC      FARG_Relay_set_C, 0
0x0AAC	0x2AB0      	GOTO       L__Relay_set300
0x0AAD	0x0140      	MOVLB      0
0x0AAE	0x1696      	BSF        LATA5_bit, BitPos(LATA5_bit+0)
0x0AAF	0x2AB2      	GOTO       L__Relay_set301
L__Relay_set300:
0x0AB0	0x0140      	MOVLB      0
0x0AB1	0x1296      	BCF        LATA5_bit, BitPos(LATA5_bit+0)
L__Relay_set301:
;main.c,403 :: 		C_47 = ~C.B1;
0x0AB2	0x0144      	MOVLB      4
0x0AB3	0x18A9      	BTFSC      FARG_Relay_set_C, 1
0x0AB4	0x2AB8      	GOTO       L__Relay_set302
0x0AB5	0x0140      	MOVLB      0
0x0AB6	0x149A      	BSF        LATE1_bit, BitPos(LATE1_bit+0)
0x0AB7	0x2ABA      	GOTO       L__Relay_set303
L__Relay_set302:
0x0AB8	0x0140      	MOVLB      0
0x0AB9	0x109A      	BCF        LATE1_bit, BitPos(LATE1_bit+0)
L__Relay_set303:
;main.c,404 :: 		C_100 = ~C.B2;
0x0ABA	0x0144      	MOVLB      4
0x0ABB	0x1929      	BTFSC      FARG_Relay_set_C, 2
0x0ABC	0x2AC0      	GOTO       L__Relay_set304
0x0ABD	0x0140      	MOVLB      0
0x0ABE	0x1796      	BSF        LATA7_bit, BitPos(LATA7_bit+0)
0x0ABF	0x2AC2      	GOTO       L__Relay_set305
L__Relay_set304:
0x0AC0	0x0140      	MOVLB      0
0x0AC1	0x1396      	BCF        LATA7_bit, BitPos(LATA7_bit+0)
L__Relay_set305:
;main.c,405 :: 		C_220 = ~C.B3;
0x0AC2	0x0144      	MOVLB      4
0x0AC3	0x19A9      	BTFSC      FARG_Relay_set_C, 3
0x0AC4	0x2AC8      	GOTO       L__Relay_set306
0x0AC5	0x0140      	MOVLB      0
0x0AC6	0x1716      	BSF        LATA6_bit, BitPos(LATA6_bit+0)
0x0AC7	0x2ACA      	GOTO       L__Relay_set307
L__Relay_set306:
0x0AC8	0x0140      	MOVLB      0
0x0AC9	0x1316      	BCF        LATA6_bit, BitPos(LATA6_bit+0)
L__Relay_set307:
;main.c,406 :: 		C_470 = ~C.B4;
0x0ACA	0x0144      	MOVLB      4
0x0ACB	0x1A29      	BTFSC      FARG_Relay_set_C, 4
0x0ACC	0x2AD0      	GOTO       L__Relay_set308
0x0ACD	0x0140      	MOVLB      0
0x0ACE	0x1418      	BSF        LATC0_bit, BitPos(LATC0_bit+0)
0x0ACF	0x2AD2      	GOTO       L__Relay_set309
L__Relay_set308:
0x0AD0	0x0140      	MOVLB      0
0x0AD1	0x1018      	BCF        LATC0_bit, BitPos(LATC0_bit+0)
L__Relay_set309:
;main.c,407 :: 		C_1000 = ~C.B5;
0x0AD2	0x0144      	MOVLB      4
0x0AD3	0x1AA9      	BTFSC      FARG_Relay_set_C, 5
0x0AD4	0x2AD8      	GOTO       L__Relay_set310
0x0AD5	0x0140      	MOVLB      0
0x0AD6	0x1498      	BSF        LATC1_bit, BitPos(LATC1_bit+0)
0x0AD7	0x2ADA      	GOTO       L__Relay_set311
L__Relay_set310:
0x0AD8	0x0140      	MOVLB      0
0x0AD9	0x1098      	BCF        LATC1_bit, BitPos(LATC1_bit+0)
L__Relay_set311:
;main.c,408 :: 		C_2200 = ~C.B6;
0x0ADA	0x0144      	MOVLB      4
0x0ADB	0x1B29      	BTFSC      FARG_Relay_set_C, 6
0x0ADC	0x2AE0      	GOTO       L__Relay_set312
0x0ADD	0x0140      	MOVLB      0
0x0ADE	0x1518      	BSF        LATC2_bit, BitPos(LATC2_bit+0)
0x0ADF	0x2AE2      	GOTO       L__Relay_set313
L__Relay_set312:
0x0AE0	0x0140      	MOVLB      0
0x0AE1	0x1118      	BCF        LATC2_bit, BitPos(LATC2_bit+0)
L__Relay_set313:
;main.c,410 :: 		C_sw = I;
0x0AE2	0x0144      	MOVLB      4
0x0AE3	0x182A      	BTFSC      FARG_Relay_set_I, 0
0x0AE4	0x2AE8      	GOTO       L__Relay_set314
0x0AE5	0x0140      	MOVLB      0
0x0AE6	0x101A      	BCF        LATE0_bit, BitPos(LATE0_bit+0)
0x0AE7	0x2AEA      	GOTO       L__Relay_set315
L__Relay_set314:
0x0AE8	0x0140      	MOVLB      0
0x0AE9	0x141A      	BSF        LATE0_bit, BitPos(LATE0_bit+0)
L__Relay_set315:
;main.c,412 :: 		Rel_to_gnd = 1;
0x0AEA	0x1599      	BSF        LATD3_bit, BitPos(LATD3_bit+0)
;main.c,413 :: 		Vdelay_ms(Rel_Del);
0x0AEB	0x0141      	MOVLB      1
0x0AEC	0x0832      	MOVF       _Rel_Del, 0
0x0AED	0x0144      	MOVLB      4
0x0AEE	0x00AF      	MOVWF      FARG_VDelay_ms_Time_ms
0x0AEF	0x0141      	MOVLB      1
0x0AF0	0x0833      	MOVF       _Rel_Del+1, 0
0x0AF1	0x0144      	MOVLB      4
0x0AF2	0x00B0      	MOVWF      FARG_VDelay_ms_Time_ms+1
0x0AF3	0x3180      	MOVLP      0
0x0AF4	0x25B8      	CALL       _VDelay_ms
0x0AF5	0x3188      	MOVLP      8
;main.c,414 :: 		Rel_to_gnd = 0;
0x0AF6	0x0140      	MOVLB      0
0x0AF7	0x1199      	BCF        LATD3_bit, BitPos(LATD3_bit+0)
;main.c,415 :: 		Delay_us(10);
0x0AF8	0x301A      	MOVLW      26
0x0AF9	0x00FD      	MOVWF      R13
L_Relay_set90:
0x0AFA	0x0BFD      	DECFSZ     R13, 1
0x0AFB	0x2AFA      	GOTO       L_Relay_set90
0x0AFC	0x0000      	NOP
;main.c,416 :: 		Rel_to_plus_N = 0;
0x0AFD	0x1218      	BCF        LATC4_bit, BitPos(LATC4_bit+0)
;main.c,417 :: 		Vdelay_ms(Rel_Del);
0x0AFE	0x0141      	MOVLB      1
0x0AFF	0x0832      	MOVF       _Rel_Del, 0
0x0B00	0x0144      	MOVLB      4
0x0B01	0x00AF      	MOVWF      FARG_VDelay_ms_Time_ms
0x0B02	0x0141      	MOVLB      1
0x0B03	0x0833      	MOVF       _Rel_Del+1, 0
0x0B04	0x0144      	MOVLB      4
0x0B05	0x00B0      	MOVWF      FARG_VDelay_ms_Time_ms+1
0x0B06	0x3180      	MOVLP      0
0x0B07	0x25B8      	CALL       _VDelay_ms
0x0B08	0x3188      	MOVLP      8
;main.c,418 :: 		Rel_to_plus_N = 1;
0x0B09	0x0140      	MOVLB      0
0x0B0A	0x1618      	BSF        LATC4_bit, BitPos(LATC4_bit+0)
;main.c,419 :: 		Vdelay_ms(Rel_Del);
0x0B0B	0x0141      	MOVLB      1
0x0B0C	0x0832      	MOVF       _Rel_Del, 0
0x0B0D	0x0144      	MOVLB      4
0x0B0E	0x00AF      	MOVWF      FARG_VDelay_ms_Time_ms
0x0B0F	0x0141      	MOVLB      1
0x0B10	0x0833      	MOVF       _Rel_Del+1, 0
0x0B11	0x0144      	MOVLB      4
0x0B12	0x00B0      	MOVWF      FARG_VDelay_ms_Time_ms+1
0x0B13	0x3180      	MOVLP      0
0x0B14	0x25B8      	CALL       _VDelay_ms
0x0B15	0x3188      	MOVLP      8
;main.c,421 :: 		L_010 = 0;
0x0B16	0x0140      	MOVLB      0
0x0B17	0x1399      	BCF        LATD7_bit, BitPos(LATD7_bit+0)
;main.c,422 :: 		L_022 = 0;
0x0B18	0x1319      	BCF        LATD6_bit, BitPos(LATD6_bit+0)
;main.c,423 :: 		L_045 = 0;
0x0B19	0x1299      	BCF        LATD5_bit, BitPos(LATD5_bit+0)
;main.c,424 :: 		L_100 = 0;
0x0B1A	0x1219      	BCF        LATD4_bit, BitPos(LATD4_bit+0)
;main.c,425 :: 		L_220 = 0;
0x0B1B	0x1398      	BCF        LATC7_bit, BitPos(LATC7_bit+0)
;main.c,426 :: 		L_450 = 0;
0x0B1C	0x1318      	BCF        LATC6_bit, BitPos(LATC6_bit+0)
;main.c,427 :: 		L_1000 = 0;
0x0B1D	0x1298      	BCF        LATC5_bit, BitPos(LATC5_bit+0)
;main.c,429 :: 		C_22 = 0;
0x0B1E	0x1296      	BCF        LATA5_bit, BitPos(LATA5_bit+0)
;main.c,430 :: 		C_47 = 0;
0x0B1F	0x109A      	BCF        LATE1_bit, BitPos(LATE1_bit+0)
;main.c,431 :: 		C_100 = 0;
0x0B20	0x1396      	BCF        LATA7_bit, BitPos(LATA7_bit+0)
;main.c,432 :: 		C_220 = 0;
0x0B21	0x1316      	BCF        LATA6_bit, BitPos(LATA6_bit+0)
;main.c,433 :: 		C_470 = 0;
0x0B22	0x1018      	BCF        LATC0_bit, BitPos(LATC0_bit+0)
;main.c,434 :: 		C_1000 = 0;
0x0B23	0x1098      	BCF        LATC1_bit, BitPos(LATC1_bit+0)
;main.c,435 :: 		C_2200 = 0;
0x0B24	0x1118      	BCF        LATC2_bit, BitPos(LATC2_bit+0)
;main.c,436 :: 		return;
;main.c,437 :: 		}
L_end_Relay_set:
0x0B25	0x0008      	RETURN
; end of _Relay_set
_Div_32x32_S:
;__Lib_Math.c,1085 :: 		
;__Lib_Math.c,1096 :: 		
;__Lib_Math.c,1099 :: 		
0x0B26	0x0874      	MOVF       R4, 0
0x0B27	0x3A00      	XORLW      0
0x0B28	0x1D03      	BTFSS      STATUS, 2
0x0B29	0x2B3F      	GOTO       L_Div_32x32_S6
;__Lib_Math.c,1100 :: 		
0x0B2A	0x0875      	MOVF       R5, 0
0x0B2B	0x3A00      	XORLW      0
0x0B2C	0x1D03      	BTFSS      STATUS, 2
0x0B2D	0x2B3F      	GOTO       L_Div_32x32_S7
;__Lib_Math.c,1101 :: 		
0x0B2E	0x0876      	MOVF       R6, 0
0x0B2F	0x3A00      	XORLW      0
0x0B30	0x1D03      	BTFSS      STATUS, 2
0x0B31	0x2B3F      	GOTO       L_Div_32x32_S8
;__Lib_Math.c,1102 :: 		
0x0B32	0x0877      	MOVF       R7, 0
0x0B33	0x3A00      	XORLW      0
0x0B34	0x1D03      	BTFSS      STATUS, 2
0x0B35	0x2B3F      	GOTO       L_Div_32x32_S9
;__Lib_Math.c,1103 :: 		
0x0B36	0x30FF      	MOVLW      255
0x0B37	0x00F0      	MOVWF      R0
;__Lib_Math.c,1104 :: 		
0x0B38	0x30FF      	MOVLW      255
0x0B39	0x00F1      	MOVWF      R1
;__Lib_Math.c,1105 :: 		
0x0B3A	0x30FF      	MOVLW      255
0x0B3B	0x00F2      	MOVWF      R2
;__Lib_Math.c,1106 :: 		
0x0B3C	0x307F      	MOVLW      127
0x0B3D	0x00F3      	MOVWF      R3
;__Lib_Math.c,1107 :: 		
0x0B3E	0x2BD7      	GOTO       L_end_Div_32x32_S
;__Lib_Math.c,1108 :: 		
L_Div_32x32_S9:
L_Div_32x32_S8:
L_Div_32x32_S7:
L_Div_32x32_S6:
;__Lib_Math.c,1111 :: 		
0x0B3F	0x0140      	MOVLB      0
;__Lib_Math.c,1113 :: 		
0x0B40	0x01FC      	CLRF       R12
;__Lib_Math.c,1114 :: 		
0x0B41	0x1BF7      	BTFSC      R7, 7
;__Lib_Math.c,1115 :: 		
0x0B42	0x0AFC      	INCF       R12, 1
;__Lib_Math.c,1117 :: 		
0x0B43	0x01FD      	CLRF       R13
;__Lib_Math.c,1118 :: 		
0x0B44	0x01FB      	CLRF       R11
;__Lib_Math.c,1119 :: 		
0x0B45	0x01FA      	CLRF       R10
;__Lib_Math.c,1120 :: 		
0x0B46	0x01F9      	CLRF       R9
;__Lib_Math.c,1121 :: 		
0x0B47	0x01F8      	CLRF       R8
;__Lib_Math.c,1122 :: 		
0x0B48	0x0873      	MOVF       R3, 0
;__Lib_Math.c,1123 :: 		
0x0B49	0x0472      	IORWF       R2, 0
;__Lib_Math.c,1124 :: 		
0x0B4A	0x0471      	IORWF       R1, 0
;__Lib_Math.c,1125 :: 		
0x0B4B	0x0470      	IORWF       R0, 0
;__Lib_Math.c,1126 :: 		
0x0B4C	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1127 :: 		
0x0B4D	0x2BD2      	GOTO       END_ALL
;__Lib_Math.c,1129 :: 		
0x0B4E	0x0873      	MOVF       R3, 0
;__Lib_Math.c,1130 :: 		
0x0B4F	0x0677      	XORWF      R7, 0
;__Lib_Math.c,1131 :: 		
0x0B50	0x00A0      	MOVWF      ___math_tempb
;__Lib_Math.c,1132 :: 		
0x0B51	0x1BA0      	BTFSC      ___math_tempb, 7
;__Lib_Math.c,1133 :: 		
0x0B52	0x09FD      	COMF       R13, 1
;__Lib_Math.c,1137 :: 		
0x0B53	0x1FF7      	BTFSS      R7, 7
;__Lib_Math.c,1138 :: 		
0x0B54	0x2B60      	GOTO       CA3232S
;__Lib_Math.c,1140 :: 		
0x0B55	0x09F4      	COMF       R4, 1
;__Lib_Math.c,1141 :: 		
0x0B56	0x09F5      	COMF       R5, 1
;__Lib_Math.c,1142 :: 		
0x0B57	0x09F6      	COMF       R6, 1
;__Lib_Math.c,1143 :: 		
0x0B58	0x09F7      	COMF       R7, 1
;__Lib_Math.c,1144 :: 		
0x0B59	0x0AF4      	INCF       R4, 1
;__Lib_Math.c,1145 :: 		
0x0B5A	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1146 :: 		
0x0B5B	0x0AF5      	INCF       R5, 1
;__Lib_Math.c,1147 :: 		
0x0B5C	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1148 :: 		
0x0B5D	0x0AF6      	INCF       R6, 1
;__Lib_Math.c,1149 :: 		
0x0B5E	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1150 :: 		
0x0B5F	0x0AF7      	INCF       R7, 1
;__Lib_Math.c,1152 :: 		
CA3232S:
;__Lib_Math.c,1153 :: 		
0x0B60	0x1FF3      	BTFSS      R3, 7
;__Lib_Math.c,1154 :: 		
0x0B61	0x2B6D      	GOTO       C3232SX
;__Lib_Math.c,1156 :: 		
0x0B62	0x09F0      	COMF       R0, 1
;__Lib_Math.c,1157 :: 		
0x0B63	0x09F1      	COMF       R1, 1
;__Lib_Math.c,1158 :: 		
0x0B64	0x09F2      	COMF       R2, 1
;__Lib_Math.c,1159 :: 		
0x0B65	0x09F3      	COMF       R3, 1
;__Lib_Math.c,1160 :: 		
0x0B66	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,1161 :: 		
0x0B67	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1162 :: 		
0x0B68	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,1163 :: 		
0x0B69	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1164 :: 		
0x0B6A	0x0AF2      	INCF       R2, 1
;__Lib_Math.c,1165 :: 		
0x0B6B	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1166 :: 		
0x0B6C	0x0AF3      	INCF       R3, 1
;__Lib_Math.c,1168 :: 		
C3232SX:
;__Lib_Math.c,1169 :: 		
0x0B6D	0x0873      	MOVF       R3, 0
;__Lib_Math.c,1170 :: 		
0x0B6E	0x0477      	IORWF       R7, 0
;__Lib_Math.c,1171 :: 		
0x0B6F	0x00A0      	MOVWF      ___math_tempb
;__Lib_Math.c,1172 :: 		
0x0B70	0x1BA0      	BTFSC      ___math_tempb, 7
;__Lib_Math.c,1173 :: 		
0x0B71	0x2B8E      	GOTO       C3232SX1
;__Lib_Math.c,1175 :: 		
C3232S:
;__Lib_Math.c,1178 :: 		
0x0B72	0x2146      	CALL       _SDIV3232L
;__Lib_Math.c,1182 :: 		
0x0B73	0x1BFC      	BTFSC      R12, 7
;__Lib_Math.c,1183 :: 		
0x0B74	0x2BAB      	GOTO       C3232SX4
;__Lib_Math.c,1185 :: 		
C3232SOK:
;__Lib_Math.c,1186 :: 		
0x0B75	0x1FFD      	BTFSS      R13, 7
;__Lib_Math.c,1187 :: 		
0x0B76	0x2BD2      	GOTO       END_ALL
;__Lib_Math.c,1189 :: 		
0x0B77	0x09F0      	COMF       R0, 1
;__Lib_Math.c,1190 :: 		
0x0B78	0x09F1      	COMF       R1, 1
;__Lib_Math.c,1191 :: 		
0x0B79	0x09F2      	COMF       R2, 1
;__Lib_Math.c,1192 :: 		
0x0B7A	0x09F3      	COMF       R3, 1
;__Lib_Math.c,1193 :: 		
0x0B7B	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,1194 :: 		
0x0B7C	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1195 :: 		
0x0B7D	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,1196 :: 		
0x0B7E	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1197 :: 		
0x0B7F	0x0AF2      	INCF       R2, 1
;__Lib_Math.c,1198 :: 		
0x0B80	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1199 :: 		
0x0B81	0x0AF3      	INCF       R3, 1
;__Lib_Math.c,1201 :: 		
0x0B82	0x09F8      	COMF       R8, 1
;__Lib_Math.c,1202 :: 		
0x0B83	0x09F9      	COMF       R9, 1
;__Lib_Math.c,1203 :: 		
0x0B84	0x09FA      	COMF       R10, 1
;__Lib_Math.c,1204 :: 		
0x0B85	0x09FB      	COMF       R11, 1
;__Lib_Math.c,1205 :: 		
0x0B86	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,1206 :: 		
0x0B87	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1207 :: 		
0x0B88	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,1208 :: 		
0x0B89	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1209 :: 		
0x0B8A	0x0AFA      	INCF       R10, 1
;__Lib_Math.c,1210 :: 		
0x0B8B	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1211 :: 		
0x0B8C	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,1213 :: 		
0x0B8D	0x2BD2      	GOTO       END_ALL
;__Lib_Math.c,1215 :: 		
C3232SX1:
;__Lib_Math.c,1216 :: 		
0x0B8E	0x1FF7      	BTFSS      R7, 7
;__Lib_Math.c,1217 :: 		
0x0B8F	0x2BA5      	GOTO       C3232SX3
;__Lib_Math.c,1218 :: 		
0x0B90	0x1BF3      	BTFSC      R3, 7
;__Lib_Math.c,1219 :: 		
0x0B91	0x2B9F      	GOTO       C3232SX2
;__Lib_Math.c,1220 :: 		
0x0B92	0x0873      	MOVF       R3, 0
;__Lib_Math.c,1221 :: 		
0x0B93	0x00FB      	MOVWF      R11
;__Lib_Math.c,1222 :: 		
0x0B94	0x0872      	MOVF       R2, 0
;__Lib_Math.c,1223 :: 		
0x0B95	0x00FA      	MOVWF      R10
;__Lib_Math.c,1224 :: 		
0x0B96	0x0871      	MOVF       R1, 0
;__Lib_Math.c,1225 :: 		
0x0B97	0x00F9      	MOVWF      R9
;__Lib_Math.c,1226 :: 		
0x0B98	0x0870      	MOVF       R0, 0
;__Lib_Math.c,1227 :: 		
0x0B99	0x00F8      	MOVWF      R8
;__Lib_Math.c,1228 :: 		
0x0B9A	0x01F3      	CLRF       R3
;__Lib_Math.c,1229 :: 		
0x0B9B	0x01F2      	CLRF       R2
;__Lib_Math.c,1230 :: 		
0x0B9C	0x01F1      	CLRF       R1
;__Lib_Math.c,1231 :: 		
0x0B9D	0x01F0      	CLRF       R0
;__Lib_Math.c,1232 :: 		
0x0B9E	0x2B75      	GOTO       C3232SOK
;__Lib_Math.c,1233 :: 		
C3232SX2:
;__Lib_Math.c,1234 :: 		
0x0B9F	0x01F3      	CLRF       R3
;__Lib_Math.c,1235 :: 		
0x0BA0	0x01F2      	CLRF       R2
;__Lib_Math.c,1236 :: 		
0x0BA1	0x01F1      	CLRF       R1
;__Lib_Math.c,1237 :: 		
0x0BA2	0x01F0      	CLRF       R0
;__Lib_Math.c,1238 :: 		
0x0BA3	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,1239 :: 		
0x0BA4	0x3400      	RETLW      0
;__Lib_Math.c,1241 :: 		
C3232SX3:
;__Lib_Math.c,1242 :: 		
0x0BA5	0x09F3      	COMF       R3, 1
;__Lib_Math.c,1243 :: 		
0x0BA6	0x09F2      	COMF       R2, 1
;__Lib_Math.c,1244 :: 		
0x0BA7	0x09F1      	COMF       R1, 1
;__Lib_Math.c,1245 :: 		
0x0BA8	0x09F0      	COMF       R0, 1
;__Lib_Math.c,1247 :: 		
0x0BA9	0x17FC      	BSF        R12, 7
;__Lib_Math.c,1249 :: 		
0x0BAA	0x2B72      	GOTO       C3232S
;__Lib_Math.c,1251 :: 		
C3232SX4:
;__Lib_Math.c,1252 :: 		
0x0BAB	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,1253 :: 		
0x0BAC	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1254 :: 		
0x0BAD	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,1255 :: 		
0x0BAE	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1256 :: 		
0x0BAF	0x0AFA      	INCF       R10, 1
;__Lib_Math.c,1257 :: 		
0x0BB0	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1258 :: 		
0x0BB1	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,1259 :: 		
0x0BB2	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1260 :: 		
0x0BB3	0x0278      	SUBWF      R8, 0
;__Lib_Math.c,1261 :: 		
0x0BB4	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,1262 :: 		
0x0BB5	0x2B75      	GOTO       C3232SOK
;__Lib_Math.c,1263 :: 		
0x0BB6	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1264 :: 		
0x0BB7	0x0279      	SUBWF      R9, 0
;__Lib_Math.c,1265 :: 		
0x0BB8	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,1266 :: 		
0x0BB9	0x2B75      	GOTO       C3232SOK
;__Lib_Math.c,1267 :: 		
0x0BBA	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1268 :: 		
0x0BBB	0x027A      	SUBWF      R10, 0
;__Lib_Math.c,1269 :: 		
0x0BBC	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,1270 :: 		
0x0BBD	0x2B75      	GOTO       C3232SOK
;__Lib_Math.c,1271 :: 		
0x0BBE	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1272 :: 		
0x0BBF	0x027B      	SUBWF      R11, 0
;__Lib_Math.c,1273 :: 		
0x0BC0	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,1274 :: 		
0x0BC1	0x2B75      	GOTO       C3232SOK
;__Lib_Math.c,1275 :: 		
0x0BC2	0x01FB      	CLRF       R11
;__Lib_Math.c,1276 :: 		
0x0BC3	0x01FA      	CLRF       R10
;__Lib_Math.c,1277 :: 		
0x0BC4	0x01F9      	CLRF       R9
;__Lib_Math.c,1278 :: 		
0x0BC5	0x01F8      	CLRF       R8
;__Lib_Math.c,1279 :: 		
0x0BC6	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,1280 :: 		
0x0BC7	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1281 :: 		
0x0BC8	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,1282 :: 		
0x0BC9	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1283 :: 		
0x0BCA	0x0AF2      	INCF       R2, 1
;__Lib_Math.c,1284 :: 		
0x0BCB	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1285 :: 		
0x0BCC	0x0AF3      	INCF       R3, 1
;__Lib_Math.c,1286 :: 		
0x0BCD	0x1FF3      	BTFSS      R3, 7
;__Lib_Math.c,1287 :: 		
0x0BCE	0x2B75      	GOTO       C3232SOK
;__Lib_Math.c,1288 :: 		
0x0BCF	0x01A0      	CLRF       ___math_tempb
;__Lib_Math.c,1289 :: 		
0x0BD0	0x1620      	BSF        ___math_tempb, 4
;__Lib_Math.c,1290 :: 		
0x0BD1	0x34FF      	RETLW      255
;__Lib_Math.c,1291 :: 		
END_ALL:
;__Lib_Math.c,1292 :: 		
0x0BD2	0x01A0      	CLRF       ___math_tempb
;__Lib_Math.c,1293 :: 		
0x0BD3	0x1C7C      	BTFSS      R12, 0
;__Lib_Math.c,1294 :: 		
0x0BD4	0x2BD6      	GOTO       avoid_comfrem
;__Lib_Math.c,1296 :: 		
0x0BD5	0x213A      	CALL       _COMFREM
;__Lib_Math.c,1298 :: 		
avoid_comfrem:
;__Lib_Math.c,1299 :: 		
0x0BD6	0x3E00      	ADDLW      0
;__Lib_Math.c,1301 :: 		
L_end_Div_32x32_S:
0x0BD7	0x0008      	RETURN
; end of _Div_32x32_S
_Div_32x32_FP:
;__Lib_MathDouble.c,758 :: 		
;__Lib_MathDouble.c,770 :: 		
;__Lib_MathDouble.c,773 :: 		
0x0BD8	0x0874      	MOVF       R4, 0
0x0BD9	0x3A00      	XORLW      0
0x0BDA	0x1D03      	BTFSS      STATUS, 2
0x0BDB	0x2BF1      	GOTO       L_Div_32x32_FP7
;__Lib_MathDouble.c,774 :: 		
0x0BDC	0x0875      	MOVF       R5, 0
0x0BDD	0x3A00      	XORLW      0
0x0BDE	0x1D03      	BTFSS      STATUS, 2
0x0BDF	0x2BF1      	GOTO       L_Div_32x32_FP8
;__Lib_MathDouble.c,775 :: 		
0x0BE0	0x0876      	MOVF       R6, 0
0x0BE1	0x3A00      	XORLW      0
0x0BE2	0x1D03      	BTFSS      STATUS, 2
0x0BE3	0x2BF1      	GOTO       L_Div_32x32_FP9
;__Lib_MathDouble.c,776 :: 		
0x0BE4	0x0877      	MOVF       R7, 0
0x0BE5	0x3A00      	XORLW      0
0x0BE6	0x1D03      	BTFSS      STATUS, 2
0x0BE7	0x2BF1      	GOTO       L_Div_32x32_FP10
;__Lib_MathDouble.c,777 :: 		
0x0BE8	0x30FF      	MOVLW      255
0x0BE9	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,778 :: 		
0x0BEA	0x30FF      	MOVLW      255
0x0BEB	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,779 :: 		
0x0BEC	0x307F      	MOVLW      127
0x0BED	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,780 :: 		
0x0BEE	0x30FF      	MOVLW      255
0x0BEF	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,781 :: 		
0x0BF0	0x2C91      	GOTO       L_end_Div_32x32_FP
;__Lib_MathDouble.c,782 :: 		
L_Div_32x32_FP10:
L_Div_32x32_FP9:
L_Div_32x32_FP8:
L_Div_32x32_FP7:
;__Lib_MathDouble.c,785 :: 		
0x0BF1	0x0140      	MOVLB      0
;__Lib_MathDouble.c,787 :: 		
0x0BF2	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,788 :: 		
0x0BF3	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,789 :: 		
0x0BF4	0x2C7F      	GOTO       JPDSETFDZ32
;__Lib_MathDouble.c,791 :: 		
0x0BF5	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,792 :: 		
0x0BF6	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,793 :: 		
0x0BF7	0x2C82      	GOTO       JPDRES032
;__Lib_MathDouble.c,795 :: 		
0x0BF8	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,796 :: 		
0x0BF9	0x0676      	XORWF      R6, 0
;__Lib_MathDouble.c,797 :: 		
0x0BFA	0x3980      	ANDLW      128
;__Lib_MathDouble.c,798 :: 		
0x0BFB	0x00FA      	MOVWF      R10
;__Lib_MathDouble.c,799 :: 		
0x0BFC	0x17F2      	BSF        R2, 7
;__Lib_MathDouble.c,800 :: 		
0x0BFD	0x17F6      	BSF        R6, 7
;__Lib_MathDouble.c,802 :: 		
0x0BFE	0x01A1      	CLRF       __math_tempbD
;__Lib_MathDouble.c,803 :: 		
0x0BFF	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,804 :: 		
0x0C00	0x00F8      	MOVWF      R8
;__Lib_MathDouble.c,805 :: 		
0x0C01	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,806 :: 		
0x0C02	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,807 :: 		
0x0C03	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,808 :: 		
0x0C04	0x00FD      	MOVWF      R13
;__Lib_MathDouble.c,810 :: 		
0x0C05	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,811 :: 		
0x0C06	0x02FD      	SUBWF      R13, 1
;__Lib_MathDouble.c,812 :: 		
0x0C07	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,813 :: 		
0x0C08	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,814 :: 		
0x0C09	0x0F75      	INCFSZ     R5, 0
;__Lib_MathDouble.c,816 :: 		
0x0C0A	0x02FC      	SUBWF      R12, 1
;__Lib_MathDouble.c,817 :: 		
0x0C0B	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,818 :: 		
0x0C0C	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,819 :: 		
0x0C0D	0x0F76      	INCFSZ     R6, 0
;__Lib_MathDouble.c,821 :: 		
0x0C0E	0x02F8      	SUBWF      R8, 1
;__Lib_MathDouble.c,822 :: 		
0x0C0F	0x01F8      	CLRF       R8
;__Lib_MathDouble.c,823 :: 		
0x0C10	0x01FC      	CLRF       R12
;__Lib_MathDouble.c,824 :: 		
0x0C11	0x01FD      	CLRF       R13
;__Lib_MathDouble.c,825 :: 		
0x0C12	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,826 :: 		
0x0C13	0x2C1B      	GOTO       DALIGN32OK
;__Lib_MathDouble.c,828 :: 		
0x0C14	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,829 :: 		
0x0C15	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,830 :: 		
0x0C16	0x0CF1      	RRF        R1, 1
;__Lib_MathDouble.c,831 :: 		
0x0C17	0x0CF0      	RRF        R0, 1
;__Lib_MathDouble.c,832 :: 		
0x0C18	0x0CF8      	RRF        R8, 1
;__Lib_MathDouble.c,833 :: 		
0x0C19	0x3001      	MOVLW      1
;__Lib_MathDouble.c,834 :: 		
0x0C1A	0x00A1      	MOVWF      __math_tempbD
;__Lib_MathDouble.c,835 :: 		
DALIGN32OK:
;__Lib_MathDouble.c,836 :: 		
0x0C1B	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,837 :: 		
0x0C1C	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,838 :: 		
0x0C1D	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,839 :: 		
0x0C1E	0x2C25      	GOTO       ALTB32
;__Lib_MathDouble.c,841 :: 		
0x0C1F	0x307E      	MOVLW      126
;__Lib_MathDouble.c,842 :: 		
0x0C20	0x0721      	ADDWF      __math_tempbD, 0
;__Lib_MathDouble.c,843 :: 		
0x0C21	0x07F3      	ADDWF      R3, 1
;__Lib_MathDouble.c,844 :: 		
0x0C22	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,845 :: 		
0x0C23	0x2C87      	GOTO       JPDSETFOV32
;__Lib_MathDouble.c,846 :: 		
0x0C24	0x2C2A      	GOTO       DARGOK32
;__Lib_MathDouble.c,847 :: 		
ALTB32:
;__Lib_MathDouble.c,848 :: 		
0x0C25	0x307E      	MOVLW      126
;__Lib_MathDouble.c,849 :: 		
0x0C26	0x0721      	ADDWF      __math_tempbD, 0
;__Lib_MathDouble.c,850 :: 		
0x0C27	0x07F3      	ADDWF      R3, 1
;__Lib_MathDouble.c,851 :: 		
0x0C28	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,852 :: 		
0x0C29	0x2C8C      	GOTO       JPDSETFUN32
;__Lib_MathDouble.c,853 :: 		
DARGOK32:
;__Lib_MathDouble.c,854 :: 		
0x0C2A	0x3018      	MOVLW      24
;__Lib_MathDouble.c,856 :: 		
0x0C2B	0x07FA      	ADDWF      R10, 1
;__Lib_MathDouble.c,857 :: 		
DLOOP32:
;__Lib_MathDouble.c,858 :: 		
0x0C2C	0x0DFD      	RLF        R13, 1
;__Lib_MathDouble.c,859 :: 		
0x0C2D	0x0DFC      	RLF        R12, 1
;__Lib_MathDouble.c,860 :: 		
0x0C2E	0x0DF8      	RLF        R8, 1
;__Lib_MathDouble.c,861 :: 		
0x0C2F	0x0DF0      	RLF        R0, 1
;__Lib_MathDouble.c,862 :: 		
0x0C30	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,863 :: 		
0x0C31	0x0DF2      	RLF        R2, 1
;__Lib_MathDouble.c,864 :: 		
0x0C32	0x0DA1      	RLF        __math_tempbD, 1
;__Lib_MathDouble.c,866 :: 		
0x0C33	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,867 :: 		
0x0C34	0x02F0      	SUBWF      R0, 1
;__Lib_MathDouble.c,868 :: 		
0x0C35	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,869 :: 		
0x0C36	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,870 :: 		
0x0C37	0x0F75      	INCFSZ     R5, 0
;__Lib_MathDouble.c,872 :: 		
0x0C38	0x02F1      	SUBWF      R1, 1
;__Lib_MathDouble.c,873 :: 		
0x0C39	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,874 :: 		
0x0C3A	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,875 :: 		
0x0C3B	0x0F76      	INCFSZ     R6, 0
;__Lib_MathDouble.c,877 :: 		
0x0C3C	0x02F2      	SUBWF      R2, 1
;__Lib_MathDouble.c,878 :: 		
0x0C3D	0x0D76      	RLF        R6, 0
;__Lib_MathDouble.c,879 :: 		
0x0C3E	0x04A1      	IORWF       __math_tempbD, 1
;__Lib_MathDouble.c,880 :: 		
0x0C3F	0x1C21      	BTFSS      __math_tempbD, 0
;__Lib_MathDouble.c,881 :: 		
0x0C40	0x2C43      	GOTO       DREST32
;__Lib_MathDouble.c,882 :: 		
0x0C41	0x147D      	BSF        R13, 0
;__Lib_MathDouble.c,883 :: 		
0x0C42	0x2C4E      	GOTO       DOK32
;__Lib_MathDouble.c,884 :: 		
DREST32:
;__Lib_MathDouble.c,885 :: 		
0x0C43	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,886 :: 		
0x0C44	0x07F0      	ADDWF      R0, 1
;__Lib_MathDouble.c,887 :: 		
0x0C45	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,888 :: 		
0x0C46	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,889 :: 		
0x0C47	0x0F75      	INCFSZ     R5, 0
;__Lib_MathDouble.c,891 :: 		
0x0C48	0x07F1      	ADDWF      R1, 1
;__Lib_MathDouble.c,892 :: 		
0x0C49	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,893 :: 		
0x0C4A	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,894 :: 		
0x0C4B	0x0A76      	INCF       R6, 0
;__Lib_MathDouble.c,895 :: 		
0x0C4C	0x07F2      	ADDWF      R2, 1
;__Lib_MathDouble.c,896 :: 		
0x0C4D	0x107D      	BCF        R13, 0
;__Lib_MathDouble.c,897 :: 		
DOK32:
;__Lib_MathDouble.c,899 :: 		
0x0C4E	0x03FA      	DECF       R10, 1
;__Lib_MathDouble.c,900 :: 		
0x0C4F	0x301F      	MOVLW      31
;__Lib_MathDouble.c,901 :: 		
0x0C50	0x057A      	ANDWF      R10, 0
;__Lib_MathDouble.c,902 :: 		
0x0C51	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,903 :: 		
0x0C52	0x2C2C      	GOTO       DLOOP32
;__Lib_MathDouble.c,905 :: 		
0x0C53	0x1B7B      	BTFSC      R11, 6
;__Lib_MathDouble.c,906 :: 		
0x0C54	0x1C7D      	BTFSS      R13, 0
;__Lib_MathDouble.c,907 :: 		
0x0C55	0x2C75      	GOTO       DIV32OK
;__Lib_MathDouble.c,908 :: 		
0x0C56	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,909 :: 		
0x0C57	0x0DF0      	RLF        R0, 1
;__Lib_MathDouble.c,910 :: 		
0x0C58	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,911 :: 		
0x0C59	0x0DF2      	RLF        R2, 1
;__Lib_MathDouble.c,912 :: 		
0x0C5A	0x0DA1      	RLF        __math_tempbD, 1
;__Lib_MathDouble.c,914 :: 		
0x0C5B	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,915 :: 		
0x0C5C	0x02F0      	SUBWF      R0, 1
;__Lib_MathDouble.c,916 :: 		
0x0C5D	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,917 :: 		
0x0C5E	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,918 :: 		
0x0C5F	0x0F75      	INCFSZ     R5, 0
;__Lib_MathDouble.c,919 :: 		
0x0C60	0x02F1      	SUBWF      R1, 1
;__Lib_MathDouble.c,920 :: 		
0x0C61	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,921 :: 		
0x0C62	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,922 :: 		
0x0C63	0x0F76      	INCFSZ     R6, 0
;__Lib_MathDouble.c,923 :: 		
0x0C64	0x02F2      	SUBWF      R2, 1
;__Lib_MathDouble.c,924 :: 		
0x0C65	0x0D76      	RLF        R6, 0
;__Lib_MathDouble.c,925 :: 		
0x0C66	0x0421      	IORWF       __math_tempbD, 0
;__Lib_MathDouble.c,926 :: 		
0x0C67	0x3901      	ANDLW      1
;__Lib_MathDouble.c,927 :: 		
0x0C68	0x07FD      	ADDWF      R13, 1
;__Lib_MathDouble.c,928 :: 		
0x0C69	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,929 :: 		
0x0C6A	0x0AFC      	INCF       R12, 1
;__Lib_MathDouble.c,930 :: 		
0x0C6B	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,931 :: 		
0x0C6C	0x0AF8      	INCF       R8, 1
;__Lib_MathDouble.c,932 :: 		
0x0C6D	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,933 :: 		
0x0C6E	0x2C75      	GOTO       DIV32OK
;__Lib_MathDouble.c,934 :: 		
0x0C6F	0x0CF8      	RRF        R8, 1
;__Lib_MathDouble.c,935 :: 		
0x0C70	0x0CFC      	RRF        R12, 1
;__Lib_MathDouble.c,936 :: 		
0x0C71	0x0CFD      	RRF        R13, 1
;__Lib_MathDouble.c,937 :: 		
0x0C72	0x0AF3      	INCF       R3, 1
;__Lib_MathDouble.c,938 :: 		
0x0C73	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,939 :: 		
0x0C74	0x2C87      	GOTO       JPDSETFOV32
;__Lib_MathDouble.c,940 :: 		
DIV32OK:
;__Lib_MathDouble.c,941 :: 		
0x0C75	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,942 :: 		
0x0C76	0x13F8      	BCF        R8, 7
;__Lib_MathDouble.c,943 :: 		
0x0C77	0x0878      	MOVF       R8, 0
;__Lib_MathDouble.c,944 :: 		
0x0C78	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,945 :: 		
0x0C79	0x087C      	MOVF       R12, 0
;__Lib_MathDouble.c,946 :: 		
0x0C7A	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,947 :: 		
0x0C7B	0x087D      	MOVF       R13, 0
;__Lib_MathDouble.c,948 :: 		
0x0C7C	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,950 :: 		
0x0C7D	0x3000      	MOVLW      0
;__Lib_MathDouble.c,952 :: 		
0x0C7E	0x2C90      	GOTO       DIV32EEE
;__Lib_MathDouble.c,953 :: 		
JPDSETFDZ32:
;__Lib_MathDouble.c,954 :: 		
0x0C7F	0x3001      	MOVLW      1
;__Lib_MathDouble.c,957 :: 		
0x0C80	0x2000      	CALL       _SETFDZ32
;__Lib_MathDouble.c,959 :: 		
0x0C81	0x2C90      	GOTO       DIV32EEE
;__Lib_MathDouble.c,960 :: 		
JPDRES032:
;__Lib_MathDouble.c,961 :: 		
0x0C82	0x3002      	MOVLW      2
;__Lib_MathDouble.c,964 :: 		
0x0C83	0x3180      	MOVLP      0
0x0C84	0x21F6      	CALL       _RES032
0x0C85	0x3188      	MOVLP      8
;__Lib_MathDouble.c,966 :: 		
0x0C86	0x2C90      	GOTO       DIV32EEE
;__Lib_MathDouble.c,967 :: 		
JPDSETFOV32:
;__Lib_MathDouble.c,968 :: 		
0x0C87	0x3004      	MOVLW      4
;__Lib_MathDouble.c,971 :: 		
0x0C88	0x3180      	MOVLP      0
0x0C89	0x2642      	CALL       _SETFOV32
0x0C8A	0x3188      	MOVLP      8
;__Lib_MathDouble.c,973 :: 		
0x0C8B	0x2C90      	GOTO       DIV32EEE
;__Lib_MathDouble.c,974 :: 		
JPDSETFUN32:
;__Lib_MathDouble.c,975 :: 		
0x0C8C	0x3008      	MOVLW      8
;__Lib_MathDouble.c,978 :: 		
0x0C8D	0x3180      	MOVLP      0
0x0C8E	0x21FD      	CALL       _SETFUN32
0x0C8F	0x3188      	MOVLP      8
;__Lib_MathDouble.c,980 :: 		
DIV32EEE:
;__Lib_MathDouble.c,981 :: 		
0x0C90	0x0000      	NOP
;__Lib_MathDouble.c,990 :: 		
L_end_Div_32x32_FP:
0x0C91	0x0008      	RETURN
; end of _Div_32x32_FP
_Add_32x32_FP:
;__Lib_MathDouble.c,379 :: 		
;__Lib_MathDouble.c,390 :: 		
;__Lib_MathDouble.c,392 :: 		
0x0C92	0x0140      	MOVLB      0
;__Lib_MathDouble.c,393 :: 		
0x0C93	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,394 :: 		
0x0C94	0x0676      	XORWF      R6, 0
;__Lib_MathDouble.c,395 :: 		
0x0C95	0x00A1      	MOVWF      __math_tempbD
;__Lib_MathDouble.c,397 :: 		
0x0C96	0x01F8      	CLRF       R8
;__Lib_MathDouble.c,398 :: 		
0x0C97	0x01F9      	CLRF       R9
;__Lib_MathDouble.c,400 :: 		
0x0C98	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,401 :: 		
0x0C99	0x0277      	SUBWF      R7, 0
;__Lib_MathDouble.c,402 :: 		
0x0C9A	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,403 :: 		
0x0C9B	0x2CB4      	GOTO       USEA32
;__Lib_MathDouble.c,405 :: 		
0x0C9C	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,406 :: 		
0x0C9D	0x00FD      	MOVWF      R13
;__Lib_MathDouble.c,407 :: 		
0x0C9E	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,408 :: 		
0x0C9F	0x00F7      	MOVWF      R7
;__Lib_MathDouble.c,409 :: 		
0x0CA0	0x087D      	MOVF       R13, 0
;__Lib_MathDouble.c,410 :: 		
0x0CA1	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,412 :: 		
0x0CA2	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,413 :: 		
0x0CA3	0x00FD      	MOVWF      R13
;__Lib_MathDouble.c,414 :: 		
0x0CA4	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,415 :: 		
0x0CA5	0x00F6      	MOVWF      R6
;__Lib_MathDouble.c,416 :: 		
0x0CA6	0x087D      	MOVF       R13, 0
;__Lib_MathDouble.c,417 :: 		
0x0CA7	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,419 :: 		
0x0CA8	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,420 :: 		
0x0CA9	0x00FD      	MOVWF      R13
;__Lib_MathDouble.c,421 :: 		
0x0CAA	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,422 :: 		
0x0CAB	0x00F5      	MOVWF      R5
;__Lib_MathDouble.c,423 :: 		
0x0CAC	0x087D      	MOVF       R13, 0
;__Lib_MathDouble.c,424 :: 		
0x0CAD	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,426 :: 		
0x0CAE	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,427 :: 		
0x0CAF	0x00FD      	MOVWF      R13
;__Lib_MathDouble.c,428 :: 		
0x0CB0	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,429 :: 		
0x0CB1	0x00F4      	MOVWF      R4
;__Lib_MathDouble.c,430 :: 		
0x0CB2	0x087D      	MOVF       R13, 0
;__Lib_MathDouble.c,431 :: 		
0x0CB3	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,432 :: 		
USEA32:
;__Lib_MathDouble.c,433 :: 		
0x0CB4	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,434 :: 		
0x0CB5	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,435 :: 		
0x0CB6	0x2D31      	GOTO       JMPEEE
;__Lib_MathDouble.c,436 :: 		
0x0CB7	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,437 :: 		
0x0CB8	0x00FA      	MOVWF      R10
;__Lib_MathDouble.c,438 :: 		
0x0CB9	0x17F2      	BSF        R2, 7
;__Lib_MathDouble.c,439 :: 		
0x0CBA	0x17F6      	BSF        R6, 7
;__Lib_MathDouble.c,440 :: 		
0x0CBB	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,441 :: 		
0x0CBC	0x0273      	SUBWF      R3, 0
;__Lib_MathDouble.c,442 :: 		
0x0CBD	0x00F7      	MOVWF      R7
;__Lib_MathDouble.c,443 :: 		
0x0CBE	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,444 :: 		
0x0CBF	0x2CE7      	GOTO       ALIGNED32
;__Lib_MathDouble.c,445 :: 		
0x0CC0	0x3008      	MOVLW      8
;__Lib_MathDouble.c,446 :: 		
0x0CC1	0x0277      	SUBWF      R7, 0
;__Lib_MathDouble.c,447 :: 		
0x0CC2	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,448 :: 		
0x0CC3	0x2CDD      	GOTO       ALIGNB32
;__Lib_MathDouble.c,449 :: 		
0x0CC4	0x00F7      	MOVWF      R7
;__Lib_MathDouble.c,450 :: 		
0x0CC5	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,451 :: 		
0x0CC6	0x00F9      	MOVWF      R9
;__Lib_MathDouble.c,452 :: 		
0x0CC7	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,453 :: 		
0x0CC8	0x00F4      	MOVWF      R4
;__Lib_MathDouble.c,454 :: 		
0x0CC9	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,455 :: 		
0x0CCA	0x00F5      	MOVWF      R5
;__Lib_MathDouble.c,456 :: 		
0x0CCB	0x01F6      	CLRF       R6
;__Lib_MathDouble.c,457 :: 		
0x0CCC	0x3008      	MOVLW      8
;__Lib_MathDouble.c,458 :: 		
0x0CCD	0x0277      	SUBWF      R7, 0
;__Lib_MathDouble.c,459 :: 		
0x0CCE	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,460 :: 		
0x0CCF	0x2CDD      	GOTO       ALIGNB32
;__Lib_MathDouble.c,461 :: 		
0x0CD0	0x00F7      	MOVWF      R7
;__Lib_MathDouble.c,462 :: 		
0x0CD1	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,463 :: 		
0x0CD2	0x00F9      	MOVWF      R9
;__Lib_MathDouble.c,464 :: 		
0x0CD3	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,465 :: 		
0x0CD4	0x00F4      	MOVWF      R4
;__Lib_MathDouble.c,466 :: 		
0x0CD5	0x01F5      	CLRF       R5
;__Lib_MathDouble.c,467 :: 		
0x0CD6	0x3008      	MOVLW      8
;__Lib_MathDouble.c,468 :: 		
0x0CD7	0x0277      	SUBWF      R7, 0
;__Lib_MathDouble.c,469 :: 		
0x0CD8	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,470 :: 		
0x0CD9	0x2CDD      	GOTO       ALIGNB32
;__Lib_MathDouble.c,471 :: 		
0x0CDA	0x087A      	MOVF       R10, 0
;__Lib_MathDouble.c,472 :: 		
0x0CDB	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,473 :: 		
0x0CDC	0x2D31      	GOTO       JMPEEE
;__Lib_MathDouble.c,474 :: 		
ALIGNB32:
;__Lib_MathDouble.c,475 :: 		
0x0CDD	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,476 :: 		
0x0CDE	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,477 :: 		
0x0CDF	0x2CE7      	GOTO       ALIGNED32
;__Lib_MathDouble.c,478 :: 		
ALOOPB32:
;__Lib_MathDouble.c,479 :: 		
0x0CE0	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,480 :: 		
0x0CE1	0x0CF6      	RRF        R6, 1
;__Lib_MathDouble.c,481 :: 		
0x0CE2	0x0CF5      	RRF        R5, 1
;__Lib_MathDouble.c,482 :: 		
0x0CE3	0x0CF4      	RRF        R4, 1
;__Lib_MathDouble.c,483 :: 		
0x0CE4	0x0CF9      	RRF        R9, 1
;__Lib_MathDouble.c,484 :: 		
0x0CE5	0x0BF7      	DECFSZ     R7, 1
;__Lib_MathDouble.c,485 :: 		
0x0CE6	0x2CE0      	GOTO       ALOOPB32
;__Lib_MathDouble.c,486 :: 		
ALIGNED32:
;__Lib_MathDouble.c,487 :: 		
0x0CE7	0x1FA1      	BTFSS      __math_tempbD, 7
;__Lib_MathDouble.c,488 :: 		
0x0CE8	0x2CF4      	GOTO       AOK32
;__Lib_MathDouble.c,489 :: 		
0x0CE9	0x09F9      	COMF       R9, 1
;__Lib_MathDouble.c,490 :: 		
0x0CEA	0x09F4      	COMF       R4, 1
;__Lib_MathDouble.c,491 :: 		
0x0CEB	0x09F5      	COMF       R5, 1
;__Lib_MathDouble.c,492 :: 		
0x0CEC	0x09F6      	COMF       R6, 1
;__Lib_MathDouble.c,493 :: 		
0x0CED	0x0AF9      	INCF       R9, 1
;__Lib_MathDouble.c,494 :: 		
0x0CEE	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,495 :: 		
0x0CEF	0x0AF4      	INCF       R4, 1
;__Lib_MathDouble.c,496 :: 		
0x0CF0	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,497 :: 		
0x0CF1	0x0AF5      	INCF       R5, 1
;__Lib_MathDouble.c,498 :: 		
0x0CF2	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,499 :: 		
0x0CF3	0x0AF6      	INCF       R6, 1
;__Lib_MathDouble.c,500 :: 		
AOK32:
;__Lib_MathDouble.c,501 :: 		
0x0CF4	0x0879      	MOVF       R9, 0
;__Lib_MathDouble.c,502 :: 		
0x0CF5	0x07F8      	ADDWF      R8, 1
;__Lib_MathDouble.c,503 :: 		
0x0CF6	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,504 :: 		
0x0CF7	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,505 :: 		
0x0CF8	0x0F74      	INCFSZ     R4, 0
;__Lib_MathDouble.c,506 :: 		
0x0CF9	0x07F0      	ADDWF      R0, 1
;__Lib_MathDouble.c,507 :: 		
0x0CFA	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,508 :: 		
0x0CFB	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,509 :: 		
0x0CFC	0x0F75      	INCFSZ     R5, 0
;__Lib_MathDouble.c,510 :: 		
0x0CFD	0x07F1      	ADDWF      R1, 1
;__Lib_MathDouble.c,511 :: 		
0x0CFE	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,512 :: 		
0x0CFF	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,513 :: 		
0x0D00	0x0F76      	INCFSZ     R6, 0
;__Lib_MathDouble.c,514 :: 		
0x0D01	0x07F2      	ADDWF      R2, 1
;__Lib_MathDouble.c,515 :: 		
0x0D02	0x1BA1      	BTFSC      __math_tempbD, 7
;__Lib_MathDouble.c,516 :: 		
0x0D03	0x2D0D      	GOTO       ACOMP32
;__Lib_MathDouble.c,517 :: 		
0x0D04	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,518 :: 		
0x0D05	0x2D1D      	GOTO       JMPNRMRND4032
;__Lib_MathDouble.c,519 :: 		
0x0D06	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,520 :: 		
0x0D07	0x0CF1      	RRF        R1, 1
;__Lib_MathDouble.c,521 :: 		
0x0D08	0x0CF0      	RRF        R0, 1
;__Lib_MathDouble.c,522 :: 		
0x0D09	0x0CF8      	RRF        R8, 1
;__Lib_MathDouble.c,523 :: 		
0x0D0A	0x0FF3      	INCFSZ     R3, 1
;__Lib_MathDouble.c,524 :: 		
0x0D0B	0x2D1D      	GOTO       JMPNRMRND4032
;__Lib_MathDouble.c,525 :: 		
0x0D0C	0x2D2B      	GOTO       ADD_JMPSETFOV32
;__Lib_MathDouble.c,526 :: 		
ACOMP32:
;__Lib_MathDouble.c,527 :: 		
0x0D0D	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,528 :: 		
0x0D0E	0x2D21      	GOTO       JMPNRM4032
;__Lib_MathDouble.c,529 :: 		
0x0D0F	0x09F8      	COMF       R8, 1
;__Lib_MathDouble.c,530 :: 		
0x0D10	0x09F0      	COMF       R0, 1
;__Lib_MathDouble.c,531 :: 		
0x0D11	0x09F1      	COMF       R1, 1
;__Lib_MathDouble.c,532 :: 		
0x0D12	0x09F2      	COMF       R2, 1
;__Lib_MathDouble.c,533 :: 		
0x0D13	0x0AF8      	INCF       R8, 1
;__Lib_MathDouble.c,534 :: 		
0x0D14	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,535 :: 		
0x0D15	0x0AF0      	INCF       R0, 1
;__Lib_MathDouble.c,536 :: 		
0x0D16	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,537 :: 		
0x0D17	0x0AF1      	INCF       R1, 1
;__Lib_MathDouble.c,538 :: 		
0x0D18	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,539 :: 		
0x0D19	0x0AF2      	INCF       R2, 1
;__Lib_MathDouble.c,540 :: 		
0x0D1A	0x3080      	MOVLW      128
;__Lib_MathDouble.c,541 :: 		
0x0D1B	0x06FA      	XORWF      R10, 1
;__Lib_MathDouble.c,542 :: 		
0x0D1C	0x2D25      	GOTO       JMPNRM32
;__Lib_MathDouble.c,543 :: 		
JMPNRMRND4032:
;__Lib_MathDouble.c,544 :: 		
0x0D1D	0x3001      	MOVLW      1
;__Lib_MathDouble.c,545 :: 		
0x0D1E	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,547 :: 		
0x0D1F	0x2088      	CALL       _NRM4032
;__Lib_MathDouble.c,549 :: 		
0x0D20	0x2D33      	GOTO       ADD32EEE
;__Lib_MathDouble.c,550 :: 		
JMPNRM4032:
;__Lib_MathDouble.c,551 :: 		
0x0D21	0x3002      	MOVLW      2
;__Lib_MathDouble.c,552 :: 		
0x0D22	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,554 :: 		
0x0D23	0x2088      	CALL       _NRM4032
;__Lib_MathDouble.c,556 :: 		
0x0D24	0x2D33      	GOTO       ADD32EEE
;__Lib_MathDouble.c,557 :: 		
JMPNRM32:
;__Lib_MathDouble.c,558 :: 		
0x0D25	0x3004      	MOVLW      4
;__Lib_MathDouble.c,559 :: 		
0x0D26	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,561 :: 		
0x0D27	0x3180      	MOVLP      0
0x0D28	0x255D      	CALL       _NRM3232
0x0D29	0x3188      	MOVLP      8
;__Lib_MathDouble.c,563 :: 		
0x0D2A	0x2D33      	GOTO       ADD32EEE
;__Lib_MathDouble.c,564 :: 		
ADD_JMPSETFOV32:
;__Lib_MathDouble.c,565 :: 		
0x0D2B	0x3008      	MOVLW      8
;__Lib_MathDouble.c,566 :: 		
0x0D2C	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,568 :: 		
0x0D2D	0x3180      	MOVLP      0
0x0D2E	0x2642      	CALL       _SETFOV32
0x0D2F	0x3188      	MOVLP      8
;__Lib_MathDouble.c,570 :: 		
0x0D30	0x2D33      	GOTO       ADD32EEE
;__Lib_MathDouble.c,571 :: 		
JMPEEE:
;__Lib_MathDouble.c,572 :: 		
0x0D31	0x3000      	MOVLW      0
;__Lib_MathDouble.c,573 :: 		
0x0D32	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,574 :: 		
ADD32EEE:
;__Lib_MathDouble.c,575 :: 		
0x0D33	0x0000      	NOP
;__Lib_MathDouble.c,583 :: 		
L_end_Add_32x32_FP:
0x0D34	0x0008      	RETURN
; end of _Add_32x32_FP
_get_reverse:
;main.c,519 :: 		int get_reverse(void){
;main.c,522 :: 		ADC_Init_Advanced(_ADC_INTERNAL_FVRH1);
0x0D35	0x3043      	MOVLW      67
0x0D36	0x0144      	MOVLB      4
0x0D37	0x00AF      	MOVWF      FARG_ADC_Init_Advanced_reference
0x0D38	0x3180      	MOVLP      0
0x0D39	0x22F1      	CALL       _ADC_Init_Advanced
0x0D3A	0x3188      	MOVLP      8
;main.c,523 :: 		Delay_us(100);
0x0D3B	0x3002      	MOVLW      2
0x0D3C	0x00FC      	MOVWF      R12
0x0D3D	0x3008      	MOVLW      8
0x0D3E	0x00FD      	MOVWF      R13
L_get_reverse134:
0x0D3F	0x0BFD      	DECFSZ     R13, 1
0x0D40	0x2D3F      	GOTO       L_get_reverse134
0x0D41	0x0BFC      	DECFSZ     R12, 1
0x0D42	0x2D3F      	GOTO       L_get_reverse134
0x0D43	0x0000      	NOP
;main.c,524 :: 		v = ADC_Get_Sample(REV_input);
0x0D44	0x300A      	MOVLW      10
0x0D45	0x0144      	MOVLB      4
0x0D46	0x00AF      	MOVWF      FARG_ADC_Get_Sample_channel
0x0D47	0x3180      	MOVLP      0
0x0D48	0x24A2      	CALL       _ADC_Get_Sample
0x0D49	0x3188      	MOVLP      8
0x0D4A	0x0870      	MOVF       R0, 0
0x0D4B	0x0143      	MOVLB      3
0x0D4C	0x00EE      	MOVWF      get_reverse_v_L0
0x0D4D	0x0871      	MOVF       R1, 0
0x0D4E	0x00EF      	MOVWF      get_reverse_v_L0+1
;main.c,525 :: 		if(v==1023){
0x0D4F	0x0871      	MOVF       R1, 0
0x0D50	0x3A03      	XORLW      3
0x0D51	0x1D03      	BTFSS      STATUS, 2
0x0D52	0x2D55      	GOTO       L__get_reverse337
0x0D53	0x30FF      	MOVLW      255
0x0D54	0x0670      	XORWF      R0, 0
L__get_reverse337:
0x0D55	0x1D03      	BTFSS      STATUS, 2
0x0D56	0x2D73      	GOTO       L_get_reverse135
;main.c,526 :: 		ADC_Init_Advanced(_ADC_INTERNAL_FVRH2);
0x0D57	0x3083      	MOVLW      131
0x0D58	0x0144      	MOVLB      4
0x0D59	0x00AF      	MOVWF      FARG_ADC_Init_Advanced_reference
0x0D5A	0x3180      	MOVLP      0
0x0D5B	0x22F1      	CALL       _ADC_Init_Advanced
0x0D5C	0x3188      	MOVLP      8
;main.c,527 :: 		Delay_us(100);
0x0D5D	0x3002      	MOVLW      2
0x0D5E	0x00FC      	MOVWF      R12
0x0D5F	0x3008      	MOVLW      8
0x0D60	0x00FD      	MOVWF      R13
L_get_reverse136:
0x0D61	0x0BFD      	DECFSZ     R13, 1
0x0D62	0x2D61      	GOTO       L_get_reverse136
0x0D63	0x0BFC      	DECFSZ     R12, 1
0x0D64	0x2D61      	GOTO       L_get_reverse136
0x0D65	0x0000      	NOP
;main.c,528 :: 		v = ADC_Get_Sample(REV_input) * 2;
0x0D66	0x300A      	MOVLW      10
0x0D67	0x0144      	MOVLB      4
0x0D68	0x00AF      	MOVWF      FARG_ADC_Get_Sample_channel
0x0D69	0x3180      	MOVLP      0
0x0D6A	0x24A2      	CALL       _ADC_Get_Sample
0x0D6B	0x3188      	MOVLP      8
0x0D6C	0x0870      	MOVF       R0, 0
0x0D6D	0x0143      	MOVLB      3
0x0D6E	0x00EE      	MOVWF      get_reverse_v_L0
0x0D6F	0x0871      	MOVF       R1, 0
0x0D70	0x00EF      	MOVWF      get_reverse_v_L0+1
0x0D71	0x35EE      	LSLF       get_reverse_v_L0, 1
0x0D72	0x0DEF      	RLF        get_reverse_v_L0+1, 1
;main.c,529 :: 		}
L_get_reverse135:
;main.c,530 :: 		if(v==1023*2){
0x0D73	0x086F      	MOVF       get_reverse_v_L0+1, 0
0x0D74	0x3A07      	XORLW      7
0x0D75	0x1D03      	BTFSS      STATUS, 2
0x0D76	0x2D79      	GOTO       L__get_reverse338
0x0D77	0x30FE      	MOVLW      254
0x0D78	0x066E      	XORWF      get_reverse_v_L0, 0
L__get_reverse338:
0x0D79	0x1D03      	BTFSS      STATUS, 2
0x0D7A	0x2DCA      	GOTO       L_get_reverse137
;main.c,531 :: 		get_batt();
0x0D7B	0x3180      	MOVLP      0
0x0D7C	0x26C1      	CALL       _get_batt
0x0D7D	0x3188      	MOVLP      8
;main.c,532 :: 		ADC_Init_Advanced(_ADC_INTERNAL_REF);
0x0D7E	0x0144      	MOVLB      4
0x0D7F	0x01AF      	CLRF       FARG_ADC_Init_Advanced_reference
0x0D80	0x3180      	MOVLP      0
0x0D81	0x22F1      	CALL       _ADC_Init_Advanced
0x0D82	0x3188      	MOVLP      8
;main.c,533 :: 		Delay_us(100);
0x0D83	0x3002      	MOVLW      2
0x0D84	0x00FC      	MOVWF      R12
0x0D85	0x3008      	MOVLW      8
0x0D86	0x00FD      	MOVWF      R13
L_get_reverse138:
0x0D87	0x0BFD      	DECFSZ     R13, 1
0x0D88	0x2D87      	GOTO       L_get_reverse138
0x0D89	0x0BFC      	DECFSZ     R12, 1
0x0D8A	0x2D87      	GOTO       L_get_reverse138
0x0D8B	0x0000      	NOP
;main.c,534 :: 		v = ADC_Get_Sample(FWD_input);
0x0D8C	0x3008      	MOVLW      8
0x0D8D	0x0144      	MOVLB      4
0x0D8E	0x00AF      	MOVWF      FARG_ADC_Get_Sample_channel
0x0D8F	0x3180      	MOVLP      0
0x0D90	0x24A2      	CALL       _ADC_Get_Sample
0x0D91	0x3188      	MOVLP      8
0x0D92	0x0870      	MOVF       R0, 0
0x0D93	0x0144      	MOVLB      4
0x0D94	0x00A4      	MOVWF      FLOC__get_reverse+4
0x0D95	0x0871      	MOVF       R1, 0
0x0D96	0x00A5      	MOVWF      FLOC__get_reverse+5
0x0D97	0x0824      	MOVF       FLOC__get_reverse+4, 0
0x0D98	0x0143      	MOVLB      3
0x0D99	0x00EE      	MOVWF      get_reverse_v_L0
0x0D9A	0x0144      	MOVLB      4
0x0D9B	0x0825      	MOVF       FLOC__get_reverse+5, 0
0x0D9C	0x0143      	MOVLB      3
0x0D9D	0x00EF      	MOVWF      get_reverse_v_L0+1
;main.c,535 :: 		f = Voltage / 1024;
0x0D9E	0x3000      	MOVLW      0
0x0D9F	0x00F4      	MOVWF      R4
0x0DA0	0x3004      	MOVLW      4
0x0DA1	0x00F5      	MOVWF      R5
0x0DA2	0x0820      	MOVF       _Voltage, 0
0x0DA3	0x00F0      	MOVWF      R0
0x0DA4	0x0821      	MOVF       _Voltage+1, 0
0x0DA5	0x00F1      	MOVWF      R1
0x0DA6	0x3180      	MOVLP      0
0x0DA7	0x265B      	CALL       _Div_16x16_S
0x0DA8	0x3188      	MOVLP      8
0x0DA9	0x2069      	CALL       _int2double
0x0DAA	0x0870      	MOVF       R0, 0
0x0DAB	0x0144      	MOVLB      4
0x0DAC	0x00A0      	MOVWF      FLOC__get_reverse
0x0DAD	0x0871      	MOVF       R1, 0
0x0DAE	0x00A1      	MOVWF      FLOC__get_reverse+1
0x0DAF	0x0872      	MOVF       R2, 0
0x0DB0	0x00A2      	MOVWF      FLOC__get_reverse+2
0x0DB1	0x0873      	MOVF       R3, 0
0x0DB2	0x00A3      	MOVWF      FLOC__get_reverse+3
0x0DB3	0x0824      	MOVF       FLOC__get_reverse+4, 0
0x0DB4	0x00F0      	MOVWF      R0
0x0DB5	0x0825      	MOVF       FLOC__get_reverse+5, 0
0x0DB6	0x00F1      	MOVWF      R1
0x0DB7	0x2069      	CALL       _int2double
;main.c,536 :: 		v = v * f;
0x0DB8	0x0144      	MOVLB      4
0x0DB9	0x0820      	MOVF       FLOC__get_reverse, 0
0x0DBA	0x00F4      	MOVWF      R4
0x0DBB	0x0821      	MOVF       FLOC__get_reverse+1, 0
0x0DBC	0x00F5      	MOVWF      R5
0x0DBD	0x0822      	MOVF       FLOC__get_reverse+2, 0
0x0DBE	0x00F6      	MOVWF      R6
0x0DBF	0x0823      	MOVF       FLOC__get_reverse+3, 0
0x0DC0	0x00F7      	MOVWF      R7
0x0DC1	0x2003      	CALL       _Mul_32x32_FP
0x0DC2	0x3180      	MOVLP      0
0x0DC3	0x279E      	CALL       _double2int
0x0DC4	0x3188      	MOVLP      8
0x0DC5	0x0870      	MOVF       R0, 0
0x0DC6	0x0143      	MOVLB      3
0x0DC7	0x00EE      	MOVWF      get_reverse_v_L0
0x0DC8	0x0871      	MOVF       R1, 0
0x0DC9	0x00EF      	MOVWF      get_reverse_v_L0+1
;main.c,537 :: 		}
L_get_reverse137:
;main.c,538 :: 		return v;
0x0DCA	0x086E      	MOVF       get_reverse_v_L0, 0
0x0DCB	0x00F0      	MOVWF      R0
0x0DCC	0x086F      	MOVF       get_reverse_v_L0+1, 0
0x0DCD	0x00F1      	MOVWF      R1
;main.c,539 :: 		}
L_end_get_reverse:
0x0DCE	0x0008      	RETURN
; end of _get_reverse
_power_off:
;main.c,439 :: 		void power_off(void){
;main.c,442 :: 		GIE_bit = 0;
0x0DCF	0x138B      	BCF        GIE_bit, BitPos(GIE_bit+0)
;main.c,443 :: 		T0EN_bit = 0;
0x0DD0	0x0140      	MOVLB      0
0x0DD1	0x139E      	BCF        T0EN_bit, BitPos(T0EN_bit+0)
;main.c,444 :: 		TMR0IF_bit = 0;
0x0DD2	0x014E      	MOVLB      14
0x0DD3	0x128C      	BCF        TMR0IF_bit, BitPos(TMR0IF_bit+0)
;main.c,445 :: 		IOCIE_bit = 1;
0x0DD4	0x1616      	BSF        IOCIE_bit, BitPos(IOCIE_bit+0)
;main.c,446 :: 		IOCBF5_bit = 0;
0x0DD5	0x017E      	MOVLB      62
0x0DD6	0x12CA      	BCF        IOCBF5_bit, BitPos(IOCBF5_bit+0)
;main.c,447 :: 		IOCBN5_bit = 1;
0x0DD7	0x16C9      	BSF        IOCBN5_bit, BitPos(IOCBN5_bit+0)
;main.c,449 :: 		OLED_PWD = 0;
0x0DD8	0x0140      	MOVLB      0
0x0DD9	0x1216      	BCF        LATA4_bit, BitPos(LATA4_bit+0)
;main.c,450 :: 		RED = 1;
0x0DDA	0x1617      	BSF        LATB4_bit, BitPos(LATB4_bit+0)
;main.c,451 :: 		Green = 1;
0x0DDB	0x1597      	BSF        LATB3_bit, BitPos(LATB3_bit+0)
;main.c,453 :: 		C_sw = 0;
0x0DDC	0x101A      	BCF        LATE0_bit, BitPos(LATE0_bit+0)
;main.c,454 :: 		SYSCMD_bit = 1;
0x0DDD	0x014F      	MOVLB      15
0x0DDE	0x1796      	BSF        SYSCMD_bit, BitPos(SYSCMD_bit+0)
;main.c,456 :: 		btn_cnt = 0;
0x0DDF	0x0143      	MOVLB      3
0x0DE0	0x01EE      	CLRF       power_off_btn_cnt_L0
;main.c,457 :: 		while(1){
L_power_off91:
;main.c,458 :: 		if(btn_cnt==0){ Delay_ms(100); IOCBF5_bit = 0; asm sleep; }
0x0DE1	0x086E      	MOVF       power_off_btn_cnt_L0, 0
0x0DE2	0x3A00      	XORLW      0
0x0DE3	0x1D03      	BTFSS      STATUS, 2
0x0DE4	0x2DF4      	GOTO       L_power_off93
0x0DE5	0x3005      	MOVLW      5
0x0DE6	0x00FB      	MOVWF      R11
0x0DE7	0x300F      	MOVLW      15
0x0DE8	0x00FC      	MOVWF      R12
0x0DE9	0x30F1      	MOVLW      241
0x0DEA	0x00FD      	MOVWF      R13
L_power_off94:
0x0DEB	0x0BFD      	DECFSZ     R13, 1
0x0DEC	0x2DEB      	GOTO       L_power_off94
0x0DED	0x0BFC      	DECFSZ     R12, 1
0x0DEE	0x2DEB      	GOTO       L_power_off94
0x0DEF	0x0BFB      	DECFSZ     R11, 1
0x0DF0	0x2DEB      	GOTO       L_power_off94
0x0DF1	0x017E      	MOVLB      62
0x0DF2	0x12CA      	BCF        IOCBF5_bit, BitPos(IOCBF5_bit+0)
0x0DF3	0x0063      	SLEEP
L_power_off93:
;main.c,459 :: 		asm NOP;
0x0DF4	0x0000      	NOP
;main.c,460 :: 		Delay_ms(100);
0x0DF5	0x3005      	MOVLW      5
0x0DF6	0x00FB      	MOVWF      R11
0x0DF7	0x300F      	MOVLW      15
0x0DF8	0x00FC      	MOVWF      R12
0x0DF9	0x30F1      	MOVLW      241
0x0DFA	0x00FD      	MOVWF      R13
L_power_off95:
0x0DFB	0x0BFD      	DECFSZ     R13, 1
0x0DFC	0x2DFB      	GOTO       L_power_off95
0x0DFD	0x0BFC      	DECFSZ     R12, 1
0x0DFE	0x2DFB      	GOTO       L_power_off95
0x0DFF	0x0BFB      	DECFSZ     R11, 1
0x0E00	0x2DFB      	GOTO       L_power_off95
;main.c,461 :: 		if(GetButton) btn_cnt++;
0x0E01	0x0140      	MOVLB      0
0x0E02	0x1A8D      	BTFSC      PORTB, 5
0x0E03	0x2E06      	GOTO       L__power_off317
0x0E04	0x1403      	BSF        STATUS, 0
0x0E05	0x2E07      	GOTO       L__power_off318
L__power_off317:
0x0E06	0x1003      	BCF        STATUS, 0
L__power_off318:
0x0E07	0x1C03      	BTFSS      STATUS, 0
0x0E08	0x2E0C      	GOTO       L_power_off96
0x0E09	0x0143      	MOVLB      3
0x0E0A	0x0AEE      	INCF       power_off_btn_cnt_L0, 1
0x0E0B	0x2E0E      	GOTO       L_power_off97
L_power_off96:
0x0E0C	0x0143      	MOVLB      3
;main.c,462 :: 		else btn_cnt = 0;
0x0E0D	0x01EE      	CLRF       power_off_btn_cnt_L0
L_power_off97:
;main.c,463 :: 		if(btn_cnt>25) break;
0x0E0E	0x086E      	MOVF       power_off_btn_cnt_L0, 0
0x0E0F	0x3C19      	SUBLW      25
0x0E10	0x1803      	BTFSC      STATUS, 0
0x0E11	0x2E13      	GOTO       L_power_off98
0x0E12	0x2E14      	GOTO       L_power_off92
L_power_off98:
;main.c,464 :: 		}
0x0E13	0x2DE1      	GOTO       L_power_off91
L_power_off92:
;main.c,466 :: 		SYSCMD_bit = 0;
0x0E14	0x014F      	MOVLB      15
0x0E15	0x1396      	BCF        SYSCMD_bit, BitPos(SYSCMD_bit+0)
;main.c,468 :: 		IOCIE_bit = 0;
0x0E16	0x014E      	MOVLB      14
0x0E17	0x1216      	BCF        IOCIE_bit, BitPos(IOCIE_bit+0)
;main.c,469 :: 		IOCBN5_bit = 0;
0x0E18	0x017E      	MOVLB      62
0x0E19	0x12C9      	BCF        IOCBN5_bit, BitPos(IOCBN5_bit+0)
;main.c,470 :: 		IOCBF5_bit = 0;
0x0E1A	0x12CA      	BCF        IOCBF5_bit, BitPos(IOCBF5_bit+0)
;main.c,471 :: 		T0EN_bit = 1;
0x0E1B	0x0140      	MOVLB      0
0x0E1C	0x179E      	BSF        T0EN_bit, BitPos(T0EN_bit+0)
;main.c,472 :: 		GIE_bit = 1;
0x0E1D	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;main.c,474 :: 		gre = 1;
0x0E1E	0x0143      	MOVLB      3
0x0E1F	0x1726      	BSF        _gre, BitPos(_gre+0)
;main.c,475 :: 		oled_start();
0x0E20	0x3180      	MOVLP      0
0x0E21	0x26DD      	CALL       _oled_start
0x0E22	0x3188      	MOVLP      8
;main.c,476 :: 		while(GetButton){asm NOP;}
L_power_off99:
0x0E23	0x0140      	MOVLB      0
0x0E24	0x1A8D      	BTFSC      PORTB, 5
0x0E25	0x2E28      	GOTO       L__power_off319
0x0E26	0x1403      	BSF        STATUS, 0
0x0E27	0x2E29      	GOTO       L__power_off320
L__power_off319:
0x0E28	0x1003      	BCF        STATUS, 0
L__power_off320:
0x0E29	0x1C03      	BTFSS      STATUS, 0
0x0E2A	0x2E2D      	GOTO       L_power_off100
0x0E2B	0x0000      	NOP
0x0E2C	0x2E23      	GOTO       L_power_off99
L_power_off100:
;main.c,477 :: 		B_short = 0;
0x0E2D	0x0143      	MOVLB      3
0x0E2E	0x12A6      	BCF        _B_short, BitPos(_B_short+0)
;main.c,478 :: 		B_long = 0;
0x0E2F	0x1226      	BCF        _B_long, BitPos(_B_long+0)
;main.c,479 :: 		B_xlong = 0;
0x0E30	0x11A6      	BCF        _B_xlong, BitPos(_B_xlong+0)
;main.c,480 :: 		return;
;main.c,481 :: 		}
L_end_power_off:
0x0E31	0x0008      	RETURN
; end of _power_off
_IntToStr:
;__Lib_Conversions.c,195 :: 		
;__Lib_Conversions.c,201 :: 		
0x0E32	0x0144      	MOVLB      4
0x0E33	0x01A4      	CLRF       IntToStr_negative_L0
0x0E34	0x01A5      	CLRF       IntToStr_negative_L0+1
;__Lib_Conversions.c,202 :: 		
0x0E35	0x0820      	MOVF       FARG_IntToStr_input, 0
0x0E36	0x00A6      	MOVWF      IntToStr_inword_L0
0x0E37	0x0821      	MOVF       FARG_IntToStr_input+1, 0
0x0E38	0x00A7      	MOVWF      IntToStr_inword_L0+1
;__Lib_Conversions.c,203 :: 		
0x0E39	0x3080      	MOVLW      128
0x0E3A	0x0621      	XORWF      FARG_IntToStr_input+1, 0
0x0E3B	0x00F0      	MOVWF      R0
0x0E3C	0x3080      	MOVLW      128
0x0E3D	0x0270      	SUBWF      R0, 0
0x0E3E	0x1D03      	BTFSS      STATUS, 2
0x0E3F	0x2E42      	GOTO       L__IntToStr387
0x0E40	0x3000      	MOVLW      0
0x0E41	0x0220      	SUBWF      FARG_IntToStr_input, 0
L__IntToStr387:
0x0E42	0x1803      	BTFSC      STATUS, 0
0x0E43	0x2E50      	GOTO       L_IntToStr37
;__Lib_Conversions.c,204 :: 		
0x0E44	0x3001      	MOVLW      1
0x0E45	0x00A4      	MOVWF      IntToStr_negative_L0
0x0E46	0x3000      	MOVLW      0
0x0E47	0x00A5      	MOVWF      IntToStr_negative_L0+1
;__Lib_Conversions.c,205 :: 		
0x0E48	0x0820      	MOVF       FARG_IntToStr_input, 0
0x0E49	0x3C00      	SUBLW      0
0x0E4A	0x00A6      	MOVWF      IntToStr_inword_L0
0x0E4B	0x0821      	MOVF       FARG_IntToStr_input+1, 0
0x0E4C	0x1C03      	BTFSS      STATUS, 0
0x0E4D	0x3E01      	ADDLW      1
0x0E4E	0x01A7      	CLRF       IntToStr_inword_L0+1
0x0E4F	0x02A7      	SUBWF      IntToStr_inword_L0+1, 1
;__Lib_Conversions.c,206 :: 		
L_IntToStr37:
;__Lib_Conversions.c,207 :: 		
0x0E50	0x0826      	MOVF       IntToStr_inword_L0, 0
0x0E51	0x00A8      	MOVWF      FARG_WordToStr_input
0x0E52	0x0827      	MOVF       IntToStr_inword_L0+1, 0
0x0E53	0x00A9      	MOVWF      FARG_WordToStr_input+1
0x0E54	0x0822      	MOVF       FARG_IntToStr_output, 0
0x0E55	0x00AA      	MOVWF      FARG_WordToStr_output
0x0E56	0x0823      	MOVF       FARG_IntToStr_output+1, 0
0x0E57	0x00AB      	MOVWF      FARG_WordToStr_output+1
0x0E58	0x20EA      	CALL       _WordToStr
;__Lib_Conversions.c,209 :: 		
0x0E59	0x3006      	MOVLW      6
0x0E5A	0x0143      	MOVLB      3
0x0E5B	0x00EE      	MOVWF      IntToStr_i_L0
0x0E5C	0x3000      	MOVLW      0
0x0E5D	0x00EF      	MOVWF      IntToStr_i_L0+1
;__Lib_Conversions.c,210 :: 		
L_IntToStr38:
0x0E5E	0x086F      	MOVF       IntToStr_i_L0+1, 0
0x0E5F	0x3C00      	SUBLW      0
0x0E60	0x1D03      	BTFSS      STATUS, 2
0x0E61	0x2E64      	GOTO       L__IntToStr388
0x0E62	0x086E      	MOVF       IntToStr_i_L0, 0
0x0E63	0x3C00      	SUBLW      0
L__IntToStr388:
0x0E64	0x1803      	BTFSC      STATUS, 0
0x0E65	0x2E85      	GOTO       L_IntToStr39
;__Lib_Conversions.c,211 :: 		
0x0E66	0x086E      	MOVF       IntToStr_i_L0, 0
0x0E67	0x0144      	MOVLB      4
0x0E68	0x0722      	ADDWF      FARG_IntToStr_output, 0
0x0E69	0x0086      	MOVWF      FSR1
0x0E6A	0x0143      	MOVLB      3
0x0E6B	0x086F      	MOVF       IntToStr_i_L0+1, 0
0x0E6C	0x0144      	MOVLB      4
0x0E6D	0x3D23      	ADDWFC     FARG_IntToStr_output+1, 0
0x0E6E	0x0087      	MOVWF      FSR1H
0x0E6F	0x3001      	MOVLW      1
0x0E70	0x0143      	MOVLB      3
0x0E71	0x026E      	SUBWF      IntToStr_i_L0, 0
0x0E72	0x00F0      	MOVWF      R0
0x0E73	0x3000      	MOVLW      0
0x0E74	0x3B6F      	SUBWFB     IntToStr_i_L0+1, 0
0x0E75	0x00F1      	MOVWF      R1
0x0E76	0x0870      	MOVF       R0, 0
0x0E77	0x0144      	MOVLB      4
0x0E78	0x0722      	ADDWF      FARG_IntToStr_output, 0
0x0E79	0x0084      	MOVWF      FSR0
0x0E7A	0x0871      	MOVF       R1, 0
0x0E7B	0x3D23      	ADDWFC     FARG_IntToStr_output+1, 0
0x0E7C	0x0085      	MOVWF      FSR0H
0x0E7D	0x0800      	MOVF       INDF0, 0
0x0E7E	0x0081      	MOVWF      INDF1
;__Lib_Conversions.c,212 :: 		
0x0E7F	0x3001      	MOVLW      1
0x0E80	0x0143      	MOVLB      3
0x0E81	0x02EE      	SUBWF      IntToStr_i_L0, 1
0x0E82	0x3000      	MOVLW      0
0x0E83	0x3BEF      	SUBWFB     IntToStr_i_L0+1, 1
;__Lib_Conversions.c,213 :: 		
0x0E84	0x2E5E      	GOTO       L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c,214 :: 		
0x0E85	0x0144      	MOVLB      4
0x0E86	0x0822      	MOVF       FARG_IntToStr_output, 0
0x0E87	0x0086      	MOVWF      FSR1
0x0E88	0x0823      	MOVF       FARG_IntToStr_output+1, 0
0x0E89	0x0087      	MOVWF      FSR1H
0x0E8A	0x3020      	MOVLW      32
0x0E8B	0x0081      	MOVWF      INDF1
;__Lib_Conversions.c,215 :: 		
0x0E8C	0x0824      	MOVF       IntToStr_negative_L0, 0
0x0E8D	0x0425      	IORWF       IntToStr_negative_L0+1, 0
0x0E8E	0x1903      	BTFSC      STATUS, 2
0x0E8F	0x2EB5      	GOTO       L_IntToStr40
;__Lib_Conversions.c,216 :: 		
0x0E90	0x0143      	MOVLB      3
0x0E91	0x01EE      	CLRF       IntToStr_i_L0
0x0E92	0x01EF      	CLRF       IntToStr_i_L0+1
;__Lib_Conversions.c,217 :: 		
L_IntToStr41:
0x0E93	0x086E      	MOVF       IntToStr_i_L0, 0
0x0E94	0x0144      	MOVLB      4
0x0E95	0x0722      	ADDWF      FARG_IntToStr_output, 0
0x0E96	0x0084      	MOVWF      FSR0
0x0E97	0x0143      	MOVLB      3
0x0E98	0x086F      	MOVF       IntToStr_i_L0+1, 0
0x0E99	0x0144      	MOVLB      4
0x0E9A	0x3D23      	ADDWFC     FARG_IntToStr_output+1, 0
0x0E9B	0x0085      	MOVWF      FSR0H
0x0E9C	0x0800      	MOVF       INDF0, 0
0x0E9D	0x3A20      	XORLW      32
0x0E9E	0x1D03      	BTFSS      STATUS, 2
0x0E9F	0x2EA5      	GOTO       L_IntToStr42
0x0EA0	0x0143      	MOVLB      3
0x0EA1	0x0AEE      	INCF       IntToStr_i_L0, 1
0x0EA2	0x1903      	BTFSC      STATUS, 2
0x0EA3	0x0AEF      	INCF       IntToStr_i_L0+1, 1
0x0EA4	0x2E93      	GOTO       L_IntToStr41
L_IntToStr42:
0x0EA5	0x0143      	MOVLB      3
;__Lib_Conversions.c,218 :: 		
0x0EA6	0x3001      	MOVLW      1
0x0EA7	0x02EE      	SUBWF      IntToStr_i_L0, 1
0x0EA8	0x3000      	MOVLW      0
0x0EA9	0x3BEF      	SUBWFB     IntToStr_i_L0+1, 1
;__Lib_Conversions.c,219 :: 		
0x0EAA	0x086E      	MOVF       IntToStr_i_L0, 0
0x0EAB	0x0144      	MOVLB      4
0x0EAC	0x0722      	ADDWF      FARG_IntToStr_output, 0
0x0EAD	0x0086      	MOVWF      FSR1
0x0EAE	0x0143      	MOVLB      3
0x0EAF	0x086F      	MOVF       IntToStr_i_L0+1, 0
0x0EB0	0x0144      	MOVLB      4
0x0EB1	0x3D23      	ADDWFC     FARG_IntToStr_output+1, 0
0x0EB2	0x0087      	MOVWF      FSR1H
0x0EB3	0x302D      	MOVLW      45
0x0EB4	0x0081      	MOVWF      INDF1
L_IntToStr40:
;__Lib_Conversions.c,220 :: 		
L_end_IntToStr:
0x0EB5	0x0008      	RETURN
; end of _IntToStr
_get_forward:
;main.c,541 :: 		int get_forward(void){
;main.c,544 :: 		ADC_Init_Advanced(_ADC_INTERNAL_FVRH1);
0x0EB6	0x3043      	MOVLW      67
0x0EB7	0x0144      	MOVLB      4
0x0EB8	0x00AF      	MOVWF      FARG_ADC_Init_Advanced_reference
0x0EB9	0x3180      	MOVLP      0
0x0EBA	0x22F1      	CALL       _ADC_Init_Advanced
0x0EBB	0x3188      	MOVLP      8
;main.c,545 :: 		Delay_us(100);
0x0EBC	0x3002      	MOVLW      2
0x0EBD	0x00FC      	MOVWF      R12
0x0EBE	0x3008      	MOVLW      8
0x0EBF	0x00FD      	MOVWF      R13
L_get_forward139:
0x0EC0	0x0BFD      	DECFSZ     R13, 1
0x0EC1	0x2EC0      	GOTO       L_get_forward139
0x0EC2	0x0BFC      	DECFSZ     R12, 1
0x0EC3	0x2EC0      	GOTO       L_get_forward139
0x0EC4	0x0000      	NOP
;main.c,546 :: 		v = ADC_Get_Sample(FWD_input);
0x0EC5	0x3008      	MOVLW      8
0x0EC6	0x0144      	MOVLB      4
0x0EC7	0x00AF      	MOVWF      FARG_ADC_Get_Sample_channel
0x0EC8	0x3180      	MOVLP      0
0x0EC9	0x24A2      	CALL       _ADC_Get_Sample
0x0ECA	0x3188      	MOVLP      8
0x0ECB	0x0870      	MOVF       R0, 0
0x0ECC	0x0143      	MOVLB      3
0x0ECD	0x00EE      	MOVWF      get_forward_v_L0
0x0ECE	0x0871      	MOVF       R1, 0
0x0ECF	0x00EF      	MOVWF      get_forward_v_L0+1
;main.c,547 :: 		if(v==1023){
0x0ED0	0x0871      	MOVF       R1, 0
0x0ED1	0x3A03      	XORLW      3
0x0ED2	0x1D03      	BTFSS      STATUS, 2
0x0ED3	0x2ED6      	GOTO       L__get_forward340
0x0ED4	0x30FF      	MOVLW      255
0x0ED5	0x0670      	XORWF      R0, 0
L__get_forward340:
0x0ED6	0x1D03      	BTFSS      STATUS, 2
0x0ED7	0x2EF4      	GOTO       L_get_forward140
;main.c,548 :: 		ADC_Init_Advanced(_ADC_INTERNAL_FVRH2);
0x0ED8	0x3083      	MOVLW      131
0x0ED9	0x0144      	MOVLB      4
0x0EDA	0x00AF      	MOVWF      FARG_ADC_Init_Advanced_reference
0x0EDB	0x3180      	MOVLP      0
0x0EDC	0x22F1      	CALL       _ADC_Init_Advanced
0x0EDD	0x3188      	MOVLP      8
;main.c,549 :: 		Delay_us(100);
0x0EDE	0x3002      	MOVLW      2
0x0EDF	0x00FC      	MOVWF      R12
0x0EE0	0x3008      	MOVLW      8
0x0EE1	0x00FD      	MOVWF      R13
L_get_forward141:
0x0EE2	0x0BFD      	DECFSZ     R13, 1
0x0EE3	0x2EE2      	GOTO       L_get_forward141
0x0EE4	0x0BFC      	DECFSZ     R12, 1
0x0EE5	0x2EE2      	GOTO       L_get_forward141
0x0EE6	0x0000      	NOP
;main.c,550 :: 		v = ADC_Get_Sample(FWD_input) * 2;
0x0EE7	0x3008      	MOVLW      8
0x0EE8	0x0144      	MOVLB      4
0x0EE9	0x00AF      	MOVWF      FARG_ADC_Get_Sample_channel
0x0EEA	0x3180      	MOVLP      0
0x0EEB	0x24A2      	CALL       _ADC_Get_Sample
0x0EEC	0x3188      	MOVLP      8
0x0EED	0x0870      	MOVF       R0, 0
0x0EEE	0x0143      	MOVLB      3
0x0EEF	0x00EE      	MOVWF      get_forward_v_L0
0x0EF0	0x0871      	MOVF       R1, 0
0x0EF1	0x00EF      	MOVWF      get_forward_v_L0+1
0x0EF2	0x35EE      	LSLF       get_forward_v_L0, 1
0x0EF3	0x0DEF      	RLF        get_forward_v_L0+1, 1
;main.c,551 :: 		}
L_get_forward140:
;main.c,552 :: 		if(v==1023*2){
0x0EF4	0x086F      	MOVF       get_forward_v_L0+1, 0
0x0EF5	0x3A07      	XORLW      7
0x0EF6	0x1D03      	BTFSS      STATUS, 2
0x0EF7	0x2EFA      	GOTO       L__get_forward341
0x0EF8	0x30FE      	MOVLW      254
0x0EF9	0x066E      	XORWF      get_forward_v_L0, 0
L__get_forward341:
0x0EFA	0x1D03      	BTFSS      STATUS, 2
0x0EFB	0x2F4E      	GOTO       L_get_forward142
;main.c,553 :: 		get_batt();
0x0EFC	0x3180      	MOVLP      0
0x0EFD	0x26C1      	CALL       _get_batt
0x0EFE	0x3188      	MOVLP      8
;main.c,554 :: 		ADC_Init_Advanced(_ADC_INTERNAL_REF);
0x0EFF	0x0144      	MOVLB      4
0x0F00	0x01AF      	CLRF       FARG_ADC_Init_Advanced_reference
0x0F01	0x3180      	MOVLP      0
0x0F02	0x22F1      	CALL       _ADC_Init_Advanced
0x0F03	0x3188      	MOVLP      8
;main.c,555 :: 		Delay_us(100);
0x0F04	0x3002      	MOVLW      2
0x0F05	0x00FC      	MOVWF      R12
0x0F06	0x3008      	MOVLW      8
0x0F07	0x00FD      	MOVWF      R13
L_get_forward143:
0x0F08	0x0BFD      	DECFSZ     R13, 1
0x0F09	0x2F08      	GOTO       L_get_forward143
0x0F0A	0x0BFC      	DECFSZ     R12, 1
0x0F0B	0x2F08      	GOTO       L_get_forward143
0x0F0C	0x0000      	NOP
;main.c,556 :: 		v = ADC_Get_Sample(FWD_input);
0x0F0D	0x3008      	MOVLW      8
0x0F0E	0x0144      	MOVLB      4
0x0F0F	0x00AF      	MOVWF      FARG_ADC_Get_Sample_channel
0x0F10	0x3180      	MOVLP      0
0x0F11	0x24A2      	CALL       _ADC_Get_Sample
0x0F12	0x3188      	MOVLP      8
0x0F13	0x0870      	MOVF       R0, 0
0x0F14	0x0143      	MOVLB      3
0x0F15	0x00EE      	MOVWF      get_forward_v_L0
0x0F16	0x0871      	MOVF       R1, 0
0x0F17	0x00EF      	MOVWF      get_forward_v_L0+1
;main.c,557 :: 		if(v==1023) Overflow = 1;
0x0F18	0x0871      	MOVF       R1, 0
0x0F19	0x3A03      	XORLW      3
0x0F1A	0x1D03      	BTFSS      STATUS, 2
0x0F1B	0x2F1E      	GOTO       L__get_forward342
0x0F1C	0x30FF      	MOVLW      255
0x0F1D	0x0670      	XORWF      R0, 0
L__get_forward342:
0x0F1E	0x1D03      	BTFSS      STATUS, 2
0x0F1F	0x2F21      	GOTO       L_get_forward144
0x0F20	0x1426      	BSF        _Overflow, BitPos(_Overflow+0)
L_get_forward144:
;main.c,558 :: 		f = Voltage / 1024;
0x0F21	0x3000      	MOVLW      0
0x0F22	0x00F4      	MOVWF      R4
0x0F23	0x3004      	MOVLW      4
0x0F24	0x00F5      	MOVWF      R5
0x0F25	0x0820      	MOVF       _Voltage, 0
0x0F26	0x00F0      	MOVWF      R0
0x0F27	0x0821      	MOVF       _Voltage+1, 0
0x0F28	0x00F1      	MOVWF      R1
0x0F29	0x3180      	MOVLP      0
0x0F2A	0x265B      	CALL       _Div_16x16_S
0x0F2B	0x3188      	MOVLP      8
0x0F2C	0x2069      	CALL       _int2double
0x0F2D	0x0870      	MOVF       R0, 0
0x0F2E	0x0144      	MOVLB      4
0x0F2F	0x00A0      	MOVWF      FLOC__get_forward
0x0F30	0x0871      	MOVF       R1, 0
0x0F31	0x00A1      	MOVWF      FLOC__get_forward+1
0x0F32	0x0872      	MOVF       R2, 0
0x0F33	0x00A2      	MOVWF      FLOC__get_forward+2
0x0F34	0x0873      	MOVF       R3, 0
0x0F35	0x00A3      	MOVWF      FLOC__get_forward+3
0x0F36	0x0143      	MOVLB      3
0x0F37	0x086E      	MOVF       get_forward_v_L0, 0
0x0F38	0x00F0      	MOVWF      R0
0x0F39	0x086F      	MOVF       get_forward_v_L0+1, 0
0x0F3A	0x00F1      	MOVWF      R1
0x0F3B	0x2069      	CALL       _int2double
;main.c,559 :: 		v = v * f;
0x0F3C	0x0144      	MOVLB      4
0x0F3D	0x0820      	MOVF       FLOC__get_forward, 0
0x0F3E	0x00F4      	MOVWF      R4
0x0F3F	0x0821      	MOVF       FLOC__get_forward+1, 0
0x0F40	0x00F5      	MOVWF      R5
0x0F41	0x0822      	MOVF       FLOC__get_forward+2, 0
0x0F42	0x00F6      	MOVWF      R6
0x0F43	0x0823      	MOVF       FLOC__get_forward+3, 0
0x0F44	0x00F7      	MOVWF      R7
0x0F45	0x2003      	CALL       _Mul_32x32_FP
0x0F46	0x3180      	MOVLP      0
0x0F47	0x279E      	CALL       _double2int
0x0F48	0x3188      	MOVLP      8
0x0F49	0x0870      	MOVF       R0, 0
0x0F4A	0x0143      	MOVLB      3
0x0F4B	0x00EE      	MOVWF      get_forward_v_L0
0x0F4C	0x0871      	MOVF       R1, 0
0x0F4D	0x00EF      	MOVWF      get_forward_v_L0+1
;main.c,560 :: 		}
L_get_forward142:
;main.c,561 :: 		return v;
0x0F4E	0x086E      	MOVF       get_forward_v_L0, 0
0x0F4F	0x00F0      	MOVWF      R0
0x0F50	0x086F      	MOVF       get_forward_v_L0+1, 0
0x0F51	0x00F1      	MOVWF      R1
;main.c,562 :: 		}
L_end_get_forward:
0x0F52	0x0008      	RETURN
; end of _get_forward
_atu_reset:
;main.c,385 :: 		void atu_reset(){
;main.c,386 :: 		ind = 0;
0x0F53	0x0140      	MOVLB      0
0x0F54	0x01D4      	CLRF       _ind
;main.c,387 :: 		cap = 0;
0x0F55	0x01D6      	CLRF       _cap
;main.c,388 :: 		SW = 0;
0x0F56	0x01D5      	CLRF       _SW
;main.c,389 :: 		Relay_set(ind, cap, SW);
0x0F57	0x0144      	MOVLB      4
0x0F58	0x01A8      	CLRF       FARG_Relay_set_L
0x0F59	0x01A9      	CLRF       FARG_Relay_set_C
0x0F5A	0x01AA      	CLRF       FARG_Relay_set_I
0x0F5B	0x2272      	CALL       _Relay_set
;main.c,390 :: 		return;
;main.c,391 :: 		}
L_end_atu_reset:
0x0F5C	0x0008      	RETURN
; end of _atu_reset
_draw_power:
;main.c,255 :: 		void draw_power(int p){
;main.c,257 :: 		if(p==0){
0x0F5D	0x3000      	MOVLW      0
0x0F5E	0x0143      	MOVLB      3
0x0F5F	0x0667      	XORWF      FARG_draw_power_p+1, 0
0x0F60	0x1D03      	BTFSS      STATUS, 2
0x0F61	0x2F64      	GOTO       L__draw_power269
0x0F62	0x3000      	MOVLW      0
0x0F63	0x0666      	XORWF      FARG_draw_power_p, 0
L__draw_power269:
0x0F64	0x1D03      	BTFSS      STATUS, 2
0x0F65	0x2F74      	GOTO       L_draw_power68
;main.c,258 :: 		oled_wr_str(0, 60, "0.0", 3);
0x0F66	0x0144      	MOVLB      4
0x0F67	0x01AF      	CLRF       FARG_oled_wr_str_page
0x0F68	0x303C      	MOVLW      60
0x0F69	0x00B0      	MOVWF      FARG_oled_wr_str_col
0x0F6A	0x304C      	MOVLW      ?lstr12_main
0x0F6B	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x0F6C	0x3000      	MOVLW      hi_addr(?lstr12_main)
0x0F6D	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x0F6E	0x3003      	MOVLW      3
0x0F6F	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x0F70	0x3180      	MOVLP      0
0x0F71	0x232C      	CALL       _oled_wr_str
0x0F72	0x3188      	MOVLP      8
;main.c,259 :: 		return;
0x0F73	0x2FDB      	GOTO       L_end_draw_power
;main.c,260 :: 		}
L_draw_power68:
;main.c,261 :: 		else if(p<10){  // <1 W
0x0F74	0x3080      	MOVLW      128
0x0F75	0x0143      	MOVLB      3
0x0F76	0x0667      	XORWF      FARG_draw_power_p+1, 0
0x0F77	0x00F0      	MOVWF      R0
0x0F78	0x3080      	MOVLW      128
0x0F79	0x0270      	SUBWF      R0, 0
0x0F7A	0x1D03      	BTFSS      STATUS, 2
0x0F7B	0x2F7E      	GOTO       L__draw_power270
0x0F7C	0x300A      	MOVLW      10
0x0F7D	0x0266      	SUBWF      FARG_draw_power_p, 0
L__draw_power270:
0x0F7E	0x1803      	BTFSC      STATUS, 0
0x0F7F	0x2F94      	GOTO       L_draw_power70
;main.c,262 :: 		IntToStr(p, txt_2);
0x0F80	0x0866      	MOVF       FARG_draw_power_p, 0
0x0F81	0x0144      	MOVLB      4
0x0F82	0x00A0      	MOVWF      FARG_IntToStr_input
0x0F83	0x0143      	MOVLB      3
0x0F84	0x0867      	MOVF       FARG_draw_power_p+1, 0
0x0F85	0x0144      	MOVLB      4
0x0F86	0x00A1      	MOVWF      FARG_IntToStr_input+1
0x0F87	0x30A7      	MOVLW      _txt_2
0x0F88	0x00A2      	MOVWF      FARG_IntToStr_output
0x0F89	0x3001      	MOVLW      hi_addr(_txt_2)
0x0F8A	0x00A3      	MOVWF      FARG_IntToStr_output+1
0x0F8B	0x2632      	CALL       _IntToStr
;main.c,263 :: 		txt[0] = '0';
0x0F8C	0x3030      	MOVLW      48
0x0F8D	0x0143      	MOVLB      3
0x0F8E	0x00B1      	MOVWF      _txt
;main.c,264 :: 		txt[1] = '.';
0x0F8F	0x302E      	MOVLW      46
0x0F90	0x00B2      	MOVWF      _txt+1
;main.c,265 :: 		txt[2] = txt_2[5];
0x0F91	0x082C      	MOVF       _txt_2+5, 0
0x0F92	0x00B3      	MOVWF      _txt+2
;main.c,266 :: 		}
0x0F93	0x2FCE      	GOTO       L_draw_power71
L_draw_power70:
;main.c,267 :: 		else if(p<100){ // <10W
0x0F94	0x3080      	MOVLW      128
0x0F95	0x0667      	XORWF      FARG_draw_power_p+1, 0
0x0F96	0x00F0      	MOVWF      R0
0x0F97	0x3080      	MOVLW      128
0x0F98	0x0270      	SUBWF      R0, 0
0x0F99	0x1D03      	BTFSS      STATUS, 2
0x0F9A	0x2F9D      	GOTO       L__draw_power271
0x0F9B	0x3064      	MOVLW      100
0x0F9C	0x0266      	SUBWF      FARG_draw_power_p, 0
L__draw_power271:
0x0F9D	0x1803      	BTFSC      STATUS, 0
0x0F9E	0x2FB3      	GOTO       L_draw_power72
;main.c,268 :: 		IntToStr(p, txt_2);
0x0F9F	0x0866      	MOVF       FARG_draw_power_p, 0
0x0FA0	0x0144      	MOVLB      4
0x0FA1	0x00A0      	MOVWF      FARG_IntToStr_input
0x0FA2	0x0143      	MOVLB      3
0x0FA3	0x0867      	MOVF       FARG_draw_power_p+1, 0
0x0FA4	0x0144      	MOVLB      4
0x0FA5	0x00A1      	MOVWF      FARG_IntToStr_input+1
0x0FA6	0x30A7      	MOVLW      _txt_2
0x0FA7	0x00A2      	MOVWF      FARG_IntToStr_output
0x0FA8	0x3001      	MOVLW      hi_addr(_txt_2)
0x0FA9	0x00A3      	MOVWF      FARG_IntToStr_output+1
0x0FAA	0x2632      	CALL       _IntToStr
;main.c,269 :: 		txt[0] = txt_2[4];
0x0FAB	0x0143      	MOVLB      3
0x0FAC	0x082B      	MOVF       _txt_2+4, 0
0x0FAD	0x00B1      	MOVWF      _txt
;main.c,270 :: 		txt[1] = '.';
0x0FAE	0x302E      	MOVLW      46
0x0FAF	0x00B2      	MOVWF      _txt+1
;main.c,271 :: 		txt[2] = txt_2[5];
0x0FB0	0x082C      	MOVF       _txt_2+5, 0
0x0FB1	0x00B3      	MOVWF      _txt+2
;main.c,272 :: 		}
0x0FB2	0x2FCE      	GOTO       L_draw_power73
L_draw_power72:
;main.c,274 :: 		p += 5;
0x0FB3	0x3005      	MOVLW      5
0x0FB4	0x0766      	ADDWF      FARG_draw_power_p, 0
0x0FB5	0x00F0      	MOVWF      R0
0x0FB6	0x3000      	MOVLW      0
0x0FB7	0x3D67      	ADDWFC     FARG_draw_power_p+1, 0
0x0FB8	0x00F1      	MOVWF      R1
0x0FB9	0x0870      	MOVF       R0, 0
0x0FBA	0x00E6      	MOVWF      FARG_draw_power_p
0x0FBB	0x0871      	MOVF       R1, 0
0x0FBC	0x00E7      	MOVWF      FARG_draw_power_p+1
;main.c,275 :: 		IntToStr(p, txt_2);
0x0FBD	0x0870      	MOVF       R0, 0
0x0FBE	0x0144      	MOVLB      4
0x0FBF	0x00A0      	MOVWF      FARG_IntToStr_input
0x0FC0	0x0871      	MOVF       R1, 0
0x0FC1	0x00A1      	MOVWF      FARG_IntToStr_input+1
0x0FC2	0x30A7      	MOVLW      _txt_2
0x0FC3	0x00A2      	MOVWF      FARG_IntToStr_output
0x0FC4	0x3001      	MOVLW      hi_addr(_txt_2)
0x0FC5	0x00A3      	MOVWF      FARG_IntToStr_output+1
0x0FC6	0x2632      	CALL       _IntToStr
;main.c,276 :: 		txt[0] = ' ';
0x0FC7	0x3020      	MOVLW      32
0x0FC8	0x0143      	MOVLB      3
0x0FC9	0x00B1      	MOVWF      _txt
;main.c,277 :: 		txt[1] = txt_2[3];
0x0FCA	0x082A      	MOVF       _txt_2+3, 0
0x0FCB	0x00B2      	MOVWF      _txt+1
;main.c,278 :: 		txt[2] = txt_2[4];
0x0FCC	0x082B      	MOVF       _txt_2+4, 0
0x0FCD	0x00B3      	MOVWF      _txt+2
;main.c,279 :: 		}
L_draw_power73:
L_draw_power71:
;main.c,280 :: 		oled_wr_str(0, 60, txt, 3);
0x0FCE	0x0144      	MOVLB      4
0x0FCF	0x01AF      	CLRF       FARG_oled_wr_str_page
0x0FD0	0x303C      	MOVLW      60
0x0FD1	0x00B0      	MOVWF      FARG_oled_wr_str_col
0x0FD2	0x30B1      	MOVLW      _txt
0x0FD3	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x0FD4	0x3001      	MOVLW      hi_addr(_txt)
0x0FD5	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x0FD6	0x3003      	MOVLW      3
0x0FD7	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x0FD8	0x3180      	MOVLP      0
0x0FD9	0x232C      	CALL       _oled_wr_str
0x0FDA	0x3188      	MOVLP      8
;main.c,281 :: 		return;
;main.c,282 :: 		}
L_end_draw_power:
0x0FDB	0x0008      	RETURN
; end of _draw_power
_Ext_long:
;main.c,346 :: 		void Ext_long(){
;main.c,347 :: 		Green = 0;
0x0FDC	0x0140      	MOVLB      0
0x0FDD	0x1197      	BCF        LATB3_bit, BitPos(LATB3_bit+0)
;main.c,348 :: 		OLED_PWD = 1;
0x0FDE	0x1616      	BSF        LATA4_bit, BitPos(LATA4_bit+0)
;main.c,349 :: 		tune();
0x0FDF	0x3190      	MOVLP      16
0x0FE0	0x260F      	CALL       _tune
0x0FE1	0x3188      	MOVLP      8
;main.c,350 :: 		SWR_ind = SWR;
0x0FE2	0x0143      	MOVLB      3
0x0FE3	0x082F      	MOVF       _SWR, 0
0x0FE4	0x0141      	MOVLB      1
0x0FE5	0x00EC      	MOVWF      _SWR_ind
0x0FE6	0x0143      	MOVLB      3
0x0FE7	0x0830      	MOVF       _SWR+1, 0
0x0FE8	0x0141      	MOVLB      1
0x0FE9	0x00ED      	MOVWF      _SWR_ind+1
;main.c,351 :: 		Green = 1;
0x0FEA	0x0140      	MOVLB      0
0x0FEB	0x1597      	BSF        LATB3_bit, BitPos(LATB3_bit+0)
;main.c,352 :: 		E_long = 0;
0x0FEC	0x0143      	MOVLB      3
0x0FED	0x10A6      	BCF        _E_long, BitPos(_E_long+0)
;main.c,353 :: 		return;
;main.c,354 :: 		}
L_end_Ext_long:
0x0FEE	0x0008      	RETURN
; end of _Ext_long
___CC2DW:
;__Lib_System.c,71 :: 		
;__Lib_System.c,73 :: 		
_CC2DL_Loop1:
;__Lib_System.c,74 :: 		
0x0FEF	0x0012      	MOVIW      FSR0++ 
;__Lib_System.c,75 :: 		
0x0FF0	0x001E      	MOVWI      FSR1++ 
;__Lib_System.c,76 :: 		
0x0FF1	0x03F0      	DECF       R0, 1
;__Lib_System.c,77 :: 		
0x0FF2	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,78 :: 		
0x0FF3	0x2FEF      	GOTO       _CC2DL_Loop1
;__Lib_System.c,79 :: 		
0x0FF4	0x03F1      	DECF       R1, 1
;__Lib_System.c,80 :: 		
0x0FF5	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,81 :: 		
0x0FF6	0x2FEF      	GOTO       _CC2DL_Loop1
;__Lib_System.c,83 :: 		
L_end___CC2DW:
0x0FF7	0x0008      	RETURN
; end of ___CC2DW
_correction:
;main.c,498 :: 		int correction(int input) {
;main.c,499 :: 		input *= 2;
0x1000	0x0143      	MOVLB      3
0x1001	0x086E      	MOVF       FARG_correction_input, 0
0x1002	0x00F1      	MOVWF      R1
0x1003	0x086F      	MOVF       FARG_correction_input+1, 0
0x1004	0x00F2      	MOVWF      R2
0x1005	0x35F1      	LSLF       R1, 1
0x1006	0x0DF2      	RLF        R2, 1
0x1007	0x0871      	MOVF       R1, 0
0x1008	0x00EE      	MOVWF      FARG_correction_input
0x1009	0x0872      	MOVF       R2, 0
0x100A	0x00EF      	MOVWF      FARG_correction_input+1
;main.c,501 :: 		if(input <= 588) input += 376;
0x100B	0x3080      	MOVLW      128
0x100C	0x3A02      	XORLW      2
0x100D	0x00F0      	MOVWF      R0
0x100E	0x3080      	MOVLW      128
0x100F	0x0672      	XORWF      R2, 0
0x1010	0x0270      	SUBWF      R0, 0
0x1011	0x1D03      	BTFSS      STATUS, 2
0x1012	0x2815      	GOTO       L__correction323
0x1013	0x0871      	MOVF       R1, 0
0x1014	0x3C4C      	SUBLW      76
L__correction323:
0x1015	0x1C03      	BTFSS      STATUS, 0
0x1016	0x281C      	GOTO       L_correction108
0x1017	0x3078      	MOVLW      120
0x1018	0x07EE      	ADDWF      FARG_correction_input, 1
0x1019	0x3001      	MOVLW      1
0x101A	0x3DEF      	ADDWFC     FARG_correction_input+1, 1
0x101B	0x28EC      	GOTO       L_correction109
L_correction108:
;main.c,502 :: 		else if(input <= 882) input += 400;
0x101C	0x3080      	MOVLW      128
0x101D	0x3A03      	XORLW      3
0x101E	0x00F0      	MOVWF      R0
0x101F	0x3080      	MOVLW      128
0x1020	0x066F      	XORWF      FARG_correction_input+1, 0
0x1021	0x0270      	SUBWF      R0, 0
0x1022	0x1D03      	BTFSS      STATUS, 2
0x1023	0x2826      	GOTO       L__correction324
0x1024	0x086E      	MOVF       FARG_correction_input, 0
0x1025	0x3C72      	SUBLW      114
L__correction324:
0x1026	0x1C03      	BTFSS      STATUS, 0
0x1027	0x282D      	GOTO       L_correction110
0x1028	0x3090      	MOVLW      144
0x1029	0x07EE      	ADDWF      FARG_correction_input, 1
0x102A	0x3001      	MOVLW      1
0x102B	0x3DEF      	ADDWFC     FARG_correction_input+1, 1
0x102C	0x28EC      	GOTO       L_correction111
L_correction110:
;main.c,503 :: 		else if(input <= 1313) input += 476;
0x102D	0x3080      	MOVLW      128
0x102E	0x3A05      	XORLW      5
0x102F	0x00F0      	MOVWF      R0
0x1030	0x3080      	MOVLW      128
0x1031	0x066F      	XORWF      FARG_correction_input+1, 0
0x1032	0x0270      	SUBWF      R0, 0
0x1033	0x1D03      	BTFSS      STATUS, 2
0x1034	0x2837      	GOTO       L__correction325
0x1035	0x086E      	MOVF       FARG_correction_input, 0
0x1036	0x3C21      	SUBLW      33
L__correction325:
0x1037	0x1C03      	BTFSS      STATUS, 0
0x1038	0x283E      	GOTO       L_correction112
0x1039	0x30DC      	MOVLW      220
0x103A	0x07EE      	ADDWF      FARG_correction_input, 1
0x103B	0x3001      	MOVLW      1
0x103C	0x3DEF      	ADDWFC     FARG_correction_input+1, 1
0x103D	0x28EC      	GOTO       L_correction113
L_correction112:
;main.c,504 :: 		else if(input <= 1900) input += 514;
0x103E	0x3080      	MOVLW      128
0x103F	0x3A07      	XORLW      7
0x1040	0x00F0      	MOVWF      R0
0x1041	0x3080      	MOVLW      128
0x1042	0x066F      	XORWF      FARG_correction_input+1, 0
0x1043	0x0270      	SUBWF      R0, 0
0x1044	0x1D03      	BTFSS      STATUS, 2
0x1045	0x2848      	GOTO       L__correction326
0x1046	0x086E      	MOVF       FARG_correction_input, 0
0x1047	0x3C6C      	SUBLW      108
L__correction326:
0x1048	0x1C03      	BTFSS      STATUS, 0
0x1049	0x284F      	GOTO       L_correction114
0x104A	0x3002      	MOVLW      2
0x104B	0x07EE      	ADDWF      FARG_correction_input, 1
0x104C	0x3002      	MOVLW      2
0x104D	0x3DEF      	ADDWFC     FARG_correction_input+1, 1
0x104E	0x28EC      	GOTO       L_correction115
L_correction114:
;main.c,505 :: 		else if(input <= 2414) input += 568;
0x104F	0x3080      	MOVLW      128
0x1050	0x3A09      	XORLW      9
0x1051	0x00F0      	MOVWF      R0
0x1052	0x3080      	MOVLW      128
0x1053	0x066F      	XORWF      FARG_correction_input+1, 0
0x1054	0x0270      	SUBWF      R0, 0
0x1055	0x1D03      	BTFSS      STATUS, 2
0x1056	0x2859      	GOTO       L__correction327
0x1057	0x086E      	MOVF       FARG_correction_input, 0
0x1058	0x3C6E      	SUBLW      110
L__correction327:
0x1059	0x1C03      	BTFSS      STATUS, 0
0x105A	0x2860      	GOTO       L_correction116
0x105B	0x3038      	MOVLW      56
0x105C	0x07EE      	ADDWF      FARG_correction_input, 1
0x105D	0x3002      	MOVLW      2
0x105E	0x3DEF      	ADDWFC     FARG_correction_input+1, 1
0x105F	0x28EC      	GOTO       L_correction117
L_correction116:
;main.c,506 :: 		else if(input <= 2632) input += 644;
0x1060	0x3080      	MOVLW      128
0x1061	0x3A0A      	XORLW      10
0x1062	0x00F0      	MOVWF      R0
0x1063	0x3080      	MOVLW      128
0x1064	0x066F      	XORWF      FARG_correction_input+1, 0
0x1065	0x0270      	SUBWF      R0, 0
0x1066	0x1D03      	BTFSS      STATUS, 2
0x1067	0x286A      	GOTO       L__correction328
0x1068	0x086E      	MOVF       FARG_correction_input, 0
0x1069	0x3C48      	SUBLW      72
L__correction328:
0x106A	0x1C03      	BTFSS      STATUS, 0
0x106B	0x2871      	GOTO       L_correction118
0x106C	0x3084      	MOVLW      132
0x106D	0x07EE      	ADDWF      FARG_correction_input, 1
0x106E	0x3002      	MOVLW      2
0x106F	0x3DEF      	ADDWFC     FARG_correction_input+1, 1
0x1070	0x28EC      	GOTO       L_correction119
L_correction118:
;main.c,507 :: 		else if(input <= 2942) input += 732;
0x1071	0x3080      	MOVLW      128
0x1072	0x3A0B      	XORLW      11
0x1073	0x00F0      	MOVWF      R0
0x1074	0x3080      	MOVLW      128
0x1075	0x066F      	XORWF      FARG_correction_input+1, 0
0x1076	0x0270      	SUBWF      R0, 0
0x1077	0x1D03      	BTFSS      STATUS, 2
0x1078	0x287B      	GOTO       L__correction329
0x1079	0x086E      	MOVF       FARG_correction_input, 0
0x107A	0x3C7E      	SUBLW      126
L__correction329:
0x107B	0x1C03      	BTFSS      STATUS, 0
0x107C	0x2882      	GOTO       L_correction120
0x107D	0x30DC      	MOVLW      220
0x107E	0x07EE      	ADDWF      FARG_correction_input, 1
0x107F	0x3002      	MOVLW      2
0x1080	0x3DEF      	ADDWFC     FARG_correction_input+1, 1
0x1081	0x28EC      	GOTO       L_correction121
L_correction120:
;main.c,508 :: 		else if(input <= 3232) input += 784;
0x1082	0x3080      	MOVLW      128
0x1083	0x3A0C      	XORLW      12
0x1084	0x00F0      	MOVWF      R0
0x1085	0x3080      	MOVLW      128
0x1086	0x066F      	XORWF      FARG_correction_input+1, 0
0x1087	0x0270      	SUBWF      R0, 0
0x1088	0x1D03      	BTFSS      STATUS, 2
0x1089	0x288C      	GOTO       L__correction330
0x108A	0x086E      	MOVF       FARG_correction_input, 0
0x108B	0x3CA0      	SUBLW      160
L__correction330:
0x108C	0x1C03      	BTFSS      STATUS, 0
0x108D	0x2893      	GOTO       L_correction122
0x108E	0x3010      	MOVLW      16
0x108F	0x07EE      	ADDWF      FARG_correction_input, 1
0x1090	0x3003      	MOVLW      3
0x1091	0x3DEF      	ADDWFC     FARG_correction_input+1, 1
0x1092	0x28EC      	GOTO       L_correction123
L_correction122:
;main.c,509 :: 		else if(input <= 3324) input += 992;
0x1093	0x3080      	MOVLW      128
0x1094	0x3A0C      	XORLW      12
0x1095	0x00F0      	MOVWF      R0
0x1096	0x3080      	MOVLW      128
0x1097	0x066F      	XORWF      FARG_correction_input+1, 0
0x1098	0x0270      	SUBWF      R0, 0
0x1099	0x1D03      	BTFSS      STATUS, 2
0x109A	0x289D      	GOTO       L__correction331
0x109B	0x086E      	MOVF       FARG_correction_input, 0
0x109C	0x3CFC      	SUBLW      252
L__correction331:
0x109D	0x1C03      	BTFSS      STATUS, 0
0x109E	0x28A4      	GOTO       L_correction124
0x109F	0x30E0      	MOVLW      224
0x10A0	0x07EE      	ADDWF      FARG_correction_input, 1
0x10A1	0x3003      	MOVLW      3
0x10A2	0x3DEF      	ADDWFC     FARG_correction_input+1, 1
0x10A3	0x28EC      	GOTO       L_correction125
L_correction124:
;main.c,510 :: 		else if(input <= 3720) input += 1000;
0x10A4	0x3080      	MOVLW      128
0x10A5	0x3A0E      	XORLW      14
0x10A6	0x00F0      	MOVWF      R0
0x10A7	0x3080      	MOVLW      128
0x10A8	0x066F      	XORWF      FARG_correction_input+1, 0
0x10A9	0x0270      	SUBWF      R0, 0
0x10AA	0x1D03      	BTFSS      STATUS, 2
0x10AB	0x28AE      	GOTO       L__correction332
0x10AC	0x086E      	MOVF       FARG_correction_input, 0
0x10AD	0x3C88      	SUBLW      136
L__correction332:
0x10AE	0x1C03      	BTFSS      STATUS, 0
0x10AF	0x28B5      	GOTO       L_correction126
0x10B0	0x30E8      	MOVLW      232
0x10B1	0x07EE      	ADDWF      FARG_correction_input, 1
0x10B2	0x3003      	MOVLW      3
0x10B3	0x3DEF      	ADDWFC     FARG_correction_input+1, 1
0x10B4	0x28EC      	GOTO       L_correction127
L_correction126:
;main.c,511 :: 		else if(input <= 4340) input += 1160;
0x10B5	0x3080      	MOVLW      128
0x10B6	0x3A10      	XORLW      16
0x10B7	0x00F0      	MOVWF      R0
0x10B8	0x3080      	MOVLW      128
0x10B9	0x066F      	XORWF      FARG_correction_input+1, 0
0x10BA	0x0270      	SUBWF      R0, 0
0x10BB	0x1D03      	BTFSS      STATUS, 2
0x10BC	0x28BF      	GOTO       L__correction333
0x10BD	0x086E      	MOVF       FARG_correction_input, 0
0x10BE	0x3CF4      	SUBLW      244
L__correction333:
0x10BF	0x1C03      	BTFSS      STATUS, 0
0x10C0	0x28C6      	GOTO       L_correction128
0x10C1	0x3088      	MOVLW      136
0x10C2	0x07EE      	ADDWF      FARG_correction_input, 1
0x10C3	0x3004      	MOVLW      4
0x10C4	0x3DEF      	ADDWFC     FARG_correction_input+1, 1
0x10C5	0x28EC      	GOTO       L_correction129
L_correction128:
;main.c,512 :: 		else if(input <= 4808) input += 1360;
0x10C6	0x3080      	MOVLW      128
0x10C7	0x3A12      	XORLW      18
0x10C8	0x00F0      	MOVWF      R0
0x10C9	0x3080      	MOVLW      128
0x10CA	0x066F      	XORWF      FARG_correction_input+1, 0
0x10CB	0x0270      	SUBWF      R0, 0
0x10CC	0x1D03      	BTFSS      STATUS, 2
0x10CD	0x28D0      	GOTO       L__correction334
0x10CE	0x086E      	MOVF       FARG_correction_input, 0
0x10CF	0x3CC8      	SUBLW      200
L__correction334:
0x10D0	0x1C03      	BTFSS      STATUS, 0
0x10D1	0x28D7      	GOTO       L_correction130
0x10D2	0x3050      	MOVLW      80
0x10D3	0x07EE      	ADDWF      FARG_correction_input, 1
0x10D4	0x3005      	MOVLW      5
0x10D5	0x3DEF      	ADDWFC     FARG_correction_input+1, 1
0x10D6	0x28EC      	GOTO       L_correction131
L_correction130:
;main.c,513 :: 		else if(input <= 5272) input += 1424;
0x10D7	0x3080      	MOVLW      128
0x10D8	0x3A14      	XORLW      20
0x10D9	0x00F0      	MOVWF      R0
0x10DA	0x3080      	MOVLW      128
0x10DB	0x066F      	XORWF      FARG_correction_input+1, 0
0x10DC	0x0270      	SUBWF      R0, 0
0x10DD	0x1D03      	BTFSS      STATUS, 2
0x10DE	0x28E1      	GOTO       L__correction335
0x10DF	0x086E      	MOVF       FARG_correction_input, 0
0x10E0	0x3C98      	SUBLW      152
L__correction335:
0x10E1	0x1C03      	BTFSS      STATUS, 0
0x10E2	0x28E8      	GOTO       L_correction132
0x10E3	0x3090      	MOVLW      144
0x10E4	0x07EE      	ADDWF      FARG_correction_input, 1
0x10E5	0x3005      	MOVLW      5
0x10E6	0x3DEF      	ADDWFC     FARG_correction_input+1, 1
0x10E7	0x28EC      	GOTO       L_correction133
L_correction132:
;main.c,514 :: 		else  input += 1432;
0x10E8	0x3098      	MOVLW      152
0x10E9	0x07EE      	ADDWF      FARG_correction_input, 1
0x10EA	0x3005      	MOVLW      5
0x10EB	0x3DEF      	ADDWFC     FARG_correction_input+1, 1
L_correction133:
L_correction131:
L_correction129:
L_correction127:
L_correction125:
L_correction123:
L_correction121:
L_correction119:
L_correction117:
L_correction115:
L_correction113:
L_correction111:
L_correction109:
;main.c,516 :: 		return input;
0x10EC	0x086E      	MOVF       FARG_correction_input, 0
0x10ED	0x00F0      	MOVWF      R0
0x10EE	0x086F      	MOVF       FARG_correction_input+1, 0
0x10EF	0x00F1      	MOVWF      R1
;main.c,517 :: 		}
L_end_correction:
0x10F0	0x0008      	RETURN
; end of _correction
_Btn_xlong:
;main.c,320 :: 		void Btn_xlong(){
;main.c,321 :: 		B_xlong = 0;
0x10F1	0x0143      	MOVLB      3
0x10F2	0x11A6      	BCF        _B_xlong, BitPos(_B_xlong+0)
;main.c,322 :: 		btn_cnt = 0;
0x10F3	0x0140      	MOVLB      0
0x10F4	0x01BC      	CLRF       _btn_cnt
0x10F5	0x01BD      	CLRF       _btn_cnt+1
0x10F6	0x01BE      	CLRF       _btn_cnt+2
0x10F7	0x01BF      	CLRF       _btn_cnt+3
;main.c,323 :: 		oled_clear();
0x10F8	0x3180      	MOVLP      0
0x10F9	0x227C      	CALL       _oled_clear
0x10FA	0x3190      	MOVLP      16
;main.c,324 :: 		oled_wr_str(1, 0, " POWER OFF ", 11);
0x10FB	0x3001      	MOVLW      1
0x10FC	0x0144      	MOVLB      4
0x10FD	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x10FE	0x01B0      	CLRF       FARG_oled_wr_str_col
0x10FF	0x3040      	MOVLW      ?lstr14_main
0x1100	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x1101	0x3000      	MOVLW      hi_addr(?lstr14_main)
0x1102	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x1103	0x300B      	MOVLW      11
0x1104	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x1105	0x3180      	MOVLP      0
0x1106	0x232C      	CALL       _oled_wr_str
0x1107	0x3190      	MOVLP      16
;main.c,325 :: 		Delay_ms(2000);
0x1108	0x3052      	MOVLW      82
0x1109	0x00FB      	MOVWF      R11
0x110A	0x302B      	MOVLW      43
0x110B	0x00FC      	MOVWF      R12
0x110C	0x3000      	MOVLW      0
0x110D	0x00FD      	MOVWF      R13
L_Btn_xlong84:
0x110E	0x0BFD      	DECFSZ     R13, 1
0x110F	0x290E      	GOTO       L_Btn_xlong84
0x1110	0x0BFC      	DECFSZ     R12, 1
0x1111	0x290E      	GOTO       L_Btn_xlong84
0x1112	0x0BFB      	DECFSZ     R11, 1
0x1113	0x290E      	GOTO       L_Btn_xlong84
0x1114	0x0000      	NOP
;main.c,326 :: 		power_off();
0x1115	0x3188      	MOVLP      8
0x1116	0x25CF      	CALL       _power_off
0x1117	0x3190      	MOVLP      16
;main.c,327 :: 		return;
;main.c,328 :: 		}
L_end_Btn_xlong:
0x1118	0x0008      	RETURN
; end of _Btn_xlong
_get_pwr:
;main.c,565 :: 		void get_pwr(){
;main.c,569 :: 		Forward = get_forward();
0x1119	0x3188      	MOVLP      8
0x111A	0x26B6      	CALL       _get_forward
0x111B	0x3190      	MOVLP      16
0x111C	0x0870      	MOVF       R0, 0
0x111D	0x00E6      	MOVWF      get_pwr_Forward_L0
0x111E	0x0871      	MOVF       R1, 0
0x111F	0x00E7      	MOVWF      get_pwr_Forward_L0+1
0x1120	0x3000      	MOVLW      0
0x1121	0x1BE7      	BTFSC      get_pwr_Forward_L0+1, 7
0x1122	0x30FF      	MOVLW      255
0x1123	0x00E8      	MOVWF      get_pwr_Forward_L0+2
0x1124	0x00E9      	MOVWF      get_pwr_Forward_L0+3
;main.c,570 :: 		Reverse = get_reverse();
0x1125	0x3188      	MOVLP      8
0x1126	0x2535      	CALL       _get_reverse
0x1127	0x3190      	MOVLP      16
0x1128	0x0870      	MOVF       R0, 0
0x1129	0x00EA      	MOVWF      get_pwr_Reverse_L0
0x112A	0x0871      	MOVF       R1, 0
0x112B	0x00EB      	MOVWF      get_pwr_Reverse_L0+1
0x112C	0x3000      	MOVLW      0
0x112D	0x1BEB      	BTFSC      get_pwr_Reverse_L0+1, 7
0x112E	0x30FF      	MOVLW      255
0x112F	0x00EC      	MOVWF      get_pwr_Reverse_L0+2
0x1130	0x00ED      	MOVWF      get_pwr_Reverse_L0+3
;main.c,575 :: 		p = correction(Forward);
0x1131	0x0866      	MOVF       get_pwr_Forward_L0, 0
0x1132	0x00EE      	MOVWF      FARG_correction_input
0x1133	0x0867      	MOVF       get_pwr_Forward_L0+1, 0
0x1134	0x00EF      	MOVWF      FARG_correction_input+1
0x1135	0x2000      	CALL       _correction
0x1136	0x3188      	MOVLP      8
0x1137	0x2069      	CALL       _int2double
0x1138	0x3190      	MOVLP      16
;main.c,576 :: 		P = p * 5 / 1000;
0x1139	0x3000      	MOVLW      0
0x113A	0x00F4      	MOVWF      R4
0x113B	0x3000      	MOVLW      0
0x113C	0x00F5      	MOVWF      R5
0x113D	0x3020      	MOVLW      32
0x113E	0x00F6      	MOVWF      R6
0x113F	0x3081      	MOVLW      129
0x1140	0x00F7      	MOVWF      R7
0x1141	0x3188      	MOVLP      8
0x1142	0x2003      	CALL       _Mul_32x32_FP
0x1143	0x3190      	MOVLP      16
0x1144	0x3000      	MOVLW      0
0x1145	0x00F4      	MOVWF      R4
0x1146	0x3000      	MOVLW      0
0x1147	0x00F5      	MOVWF      R5
0x1148	0x307A      	MOVLW      122
0x1149	0x00F6      	MOVWF      R6
0x114A	0x3088      	MOVLW      136
0x114B	0x00F7      	MOVWF      R7
0x114C	0x3188      	MOVLP      8
0x114D	0x23D8      	CALL       _Div_32x32_FP
0x114E	0x3190      	MOVLP      16
;main.c,577 :: 		p = p / 1.414;
0x114F	0x30F4      	MOVLW      244
0x1150	0x00F4      	MOVWF      R4
0x1151	0x30FD      	MOVLW      253
0x1152	0x00F5      	MOVWF      R5
0x1153	0x3034      	MOVLW      52
0x1154	0x00F6      	MOVWF      R6
0x1155	0x307F      	MOVLW      127
0x1156	0x00F7      	MOVWF      R7
0x1157	0x3188      	MOVLP      8
0x1158	0x23D8      	CALL       _Div_32x32_FP
0x1159	0x3190      	MOVLP      16
;main.c,578 :: 		p = p * p;
0x115A	0x0870      	MOVF       R0, 0
0x115B	0x00F4      	MOVWF      R4
0x115C	0x0871      	MOVF       R1, 0
0x115D	0x00F5      	MOVWF      R5
0x115E	0x0872      	MOVF       R2, 0
0x115F	0x00F6      	MOVWF      R6
0x1160	0x0873      	MOVF       R3, 0
0x1161	0x00F7      	MOVWF      R7
0x1162	0x3188      	MOVLP      8
0x1163	0x2003      	CALL       _Mul_32x32_FP
0x1164	0x3190      	MOVLP      16
;main.c,579 :: 		p = p / 5;
0x1165	0x3000      	MOVLW      0
0x1166	0x00F4      	MOVWF      R4
0x1167	0x3000      	MOVLW      0
0x1168	0x00F5      	MOVWF      R5
0x1169	0x3020      	MOVLW      32
0x116A	0x00F6      	MOVWF      R6
0x116B	0x3081      	MOVLW      129
0x116C	0x00F7      	MOVWF      R7
0x116D	0x3188      	MOVLP      8
0x116E	0x23D8      	CALL       _Div_32x32_FP
0x116F	0x3190      	MOVLP      16
;main.c,580 :: 		p += 0.5;
0x1170	0x3000      	MOVLW      0
0x1171	0x00F4      	MOVWF      R4
0x1172	0x3000      	MOVLW      0
0x1173	0x00F5      	MOVWF      R5
0x1174	0x3000      	MOVLW      0
0x1175	0x00F6      	MOVWF      R6
0x1176	0x307E      	MOVLW      126
0x1177	0x00F7      	MOVWF      R7
0x1178	0x3188      	MOVLP      8
0x1179	0x2492      	CALL       _Add_32x32_FP
0x117A	0x3190      	MOVLP      16
;main.c,581 :: 		PWR = p;
0x117B	0x3180      	MOVLP      0
0x117C	0x279E      	CALL       _double2int
0x117D	0x3190      	MOVLP      16
0x117E	0x0870      	MOVF       R0, 0
0x117F	0x0142      	MOVLB      2
0x1180	0x00EE      	MOVWF      _PWR
0x1181	0x0871      	MOVF       R1, 0
0x1182	0x00EF      	MOVWF      _PWR+1
;main.c,583 :: 		if(PWR>0){
0x1183	0x3080      	MOVLW      128
0x1184	0x00F2      	MOVWF      R2
0x1185	0x3080      	MOVLW      128
0x1186	0x0671      	XORWF      R1, 0
0x1187	0x0272      	SUBWF      R2, 0
0x1188	0x1D03      	BTFSS      STATUS, 2
0x1189	0x298C      	GOTO       L__get_pwr344
0x118A	0x0870      	MOVF       R0, 0
0x118B	0x3C00      	SUBLW      0
L__get_pwr344:
0x118C	0x1803      	BTFSC      STATUS, 0
0x118D	0x29E1      	GOTO       L_get_pwr145
;main.c,584 :: 		if(OLED_PWD){
0x118E	0x0140      	MOVLB      0
0x118F	0x1E16      	BTFSS      LATA4_bit, BitPos(LATA4_bit+0)
0x1190	0x29DE      	GOTO       L_get_pwr146
;main.c,585 :: 		disp_cnt = Tick + Disp_time*1000;
0x1191	0x0142      	MOVLB      2
0x1192	0x0854      	MOVF       _Disp_time, 0
0x1193	0x00F0      	MOVWF      R0
0x1194	0x0855      	MOVF       _Disp_time+1, 0
0x1195	0x00F1      	MOVWF      R1
0x1196	0x0856      	MOVF       _Disp_time+2, 0
0x1197	0x00F2      	MOVWF      R2
0x1198	0x0857      	MOVF       _Disp_time+3, 0
0x1199	0x00F3      	MOVWF      R3
0x119A	0x30E8      	MOVLW      232
0x119B	0x00F4      	MOVWF      R4
0x119C	0x3003      	MOVLW      3
0x119D	0x00F5      	MOVWF      R5
0x119E	0x01F6      	CLRF       R6
0x119F	0x01F7      	CLRF       R7
0x11A0	0x3180      	MOVLP      0
0x11A1	0x2209      	CALL       _Mul_32x32_U
0x11A2	0x3190      	MOVLP      16
0x11A3	0x0870      	MOVF       R0, 0
0x11A4	0x0142      	MOVLB      2
0x11A5	0x0758      	ADDWF      _Tick, 0
0x11A6	0x0143      	MOVLB      3
0x11A7	0x00C1      	MOVWF      _disp_cnt
0x11A8	0x0871      	MOVF       R1, 0
0x11A9	0x0142      	MOVLB      2
0x11AA	0x3D59      	ADDWFC     _Tick+1, 0
0x11AB	0x0143      	MOVLB      3
0x11AC	0x00C2      	MOVWF      _disp_cnt+1
0x11AD	0x0872      	MOVF       R2, 0
0x11AE	0x0142      	MOVLB      2
0x11AF	0x3D5A      	ADDWFC     _Tick+2, 0
0x11B0	0x0143      	MOVLB      3
0x11B1	0x00C3      	MOVWF      _disp_cnt+2
0x11B2	0x0873      	MOVF       R3, 0
0x11B3	0x0142      	MOVLB      2
0x11B4	0x3D5B      	ADDWFC     _Tick+3, 0
0x11B5	0x0143      	MOVLB      3
0x11B6	0x00C4      	MOVWF      _disp_cnt+3
;main.c,586 :: 		off_cnt = Tick + Off_time*1000;
0x11B7	0x0140      	MOVLB      0
0x11B8	0x0850      	MOVF       _Off_time, 0
0x11B9	0x00F0      	MOVWF      R0
0x11BA	0x0851      	MOVF       _Off_time+1, 0
0x11BB	0x00F1      	MOVWF      R1
0x11BC	0x0852      	MOVF       _Off_time+2, 0
0x11BD	0x00F2      	MOVWF      R2
0x11BE	0x0853      	MOVF       _Off_time+3, 0
0x11BF	0x00F3      	MOVWF      R3
0x11C0	0x30E8      	MOVLW      232
0x11C1	0x00F4      	MOVWF      R4
0x11C2	0x3003      	MOVLW      3
0x11C3	0x00F5      	MOVWF      R5
0x11C4	0x01F6      	CLRF       R6
0x11C5	0x01F7      	CLRF       R7
0x11C6	0x3180      	MOVLP      0
0x11C7	0x2209      	CALL       _Mul_32x32_U
0x11C8	0x3190      	MOVLP      16
0x11C9	0x0870      	MOVF       R0, 0
0x11CA	0x0142      	MOVLB      2
0x11CB	0x0758      	ADDWF      _Tick, 0
0x11CC	0x0143      	MOVLB      3
0x11CD	0x00A2      	MOVWF      _off_cnt
0x11CE	0x0871      	MOVF       R1, 0
0x11CF	0x0142      	MOVLB      2
0x11D0	0x3D59      	ADDWFC     _Tick+1, 0
0x11D1	0x0143      	MOVLB      3
0x11D2	0x00A3      	MOVWF      _off_cnt+1
0x11D3	0x0872      	MOVF       R2, 0
0x11D4	0x0142      	MOVLB      2
0x11D5	0x3D5A      	ADDWFC     _Tick+2, 0
0x11D6	0x0143      	MOVLB      3
0x11D7	0x00A4      	MOVWF      _off_cnt+2
0x11D8	0x0873      	MOVF       R3, 0
0x11D9	0x0142      	MOVLB      2
0x11DA	0x3D5B      	ADDWFC     _Tick+3, 0
0x11DB	0x0143      	MOVLB      3
0x11DC	0x00A5      	MOVWF      _off_cnt+3
;main.c,587 :: 		}
0x11DD	0x29E1      	GOTO       L_get_pwr147
L_get_pwr146:
;main.c,588 :: 		else oled_start();
0x11DE	0x3180      	MOVLP      0
0x11DF	0x26DD      	CALL       _oled_start
0x11E0	0x3190      	MOVLP      16
L_get_pwr147:
;main.c,589 :: 		}
L_get_pwr145:
0x11E1	0x0143      	MOVLB      3
;main.c,591 :: 		if(Reverse >= Forward)
0x11E2	0x3080      	MOVLW      128
0x11E3	0x066D      	XORWF      get_pwr_Reverse_L0+3, 0
0x11E4	0x00F0      	MOVWF      R0
0x11E5	0x3080      	MOVLW      128
0x11E6	0x0669      	XORWF      get_pwr_Forward_L0+3, 0
0x11E7	0x0270      	SUBWF      R0, 0
0x11E8	0x1D03      	BTFSS      STATUS, 2
0x11E9	0x29F4      	GOTO       L__get_pwr345
0x11EA	0x0868      	MOVF       get_pwr_Forward_L0+2, 0
0x11EB	0x026C      	SUBWF      get_pwr_Reverse_L0+2, 0
0x11EC	0x1D03      	BTFSS      STATUS, 2
0x11ED	0x29F4      	GOTO       L__get_pwr345
0x11EE	0x0867      	MOVF       get_pwr_Forward_L0+1, 0
0x11EF	0x026B      	SUBWF      get_pwr_Reverse_L0+1, 0
0x11F0	0x1D03      	BTFSS      STATUS, 2
0x11F1	0x29F4      	GOTO       L__get_pwr345
0x11F2	0x0866      	MOVF       get_pwr_Forward_L0, 0
0x11F3	0x026A      	SUBWF      get_pwr_Reverse_L0, 0
L__get_pwr345:
0x11F4	0x1C03      	BTFSS      STATUS, 0
0x11F5	0x29FD      	GOTO       L_get_pwr148
;main.c,592 :: 		Forward = 999;
0x11F6	0x30E7      	MOVLW      231
0x11F7	0x00E6      	MOVWF      get_pwr_Forward_L0
0x11F8	0x3003      	MOVLW      3
0x11F9	0x00E7      	MOVWF      get_pwr_Forward_L0+1
0x11FA	0x01E8      	CLRF       get_pwr_Forward_L0+2
0x11FB	0x01E9      	CLRF       get_pwr_Forward_L0+3
0x11FC	0x2A47      	GOTO       L_get_pwr149
L_get_pwr148:
;main.c,594 :: 		Forward = ((Forward + Reverse) * 100) / (Forward - Reverse);
0x11FD	0x086A      	MOVF       get_pwr_Reverse_L0, 0
0x11FE	0x0766      	ADDWF      get_pwr_Forward_L0, 0
0x11FF	0x00F0      	MOVWF      R0
0x1200	0x086B      	MOVF       get_pwr_Reverse_L0+1, 0
0x1201	0x3D67      	ADDWFC     get_pwr_Forward_L0+1, 0
0x1202	0x00F1      	MOVWF      R1
0x1203	0x086C      	MOVF       get_pwr_Reverse_L0+2, 0
0x1204	0x3D68      	ADDWFC     get_pwr_Forward_L0+2, 0
0x1205	0x00F2      	MOVWF      R2
0x1206	0x086D      	MOVF       get_pwr_Reverse_L0+3, 0
0x1207	0x3D69      	ADDWFC     get_pwr_Forward_L0+3, 0
0x1208	0x00F3      	MOVWF      R3
0x1209	0x3064      	MOVLW      100
0x120A	0x00F4      	MOVWF      R4
0x120B	0x01F5      	CLRF       R5
0x120C	0x01F6      	CLRF       R6
0x120D	0x01F7      	CLRF       R7
0x120E	0x3180      	MOVLP      0
0x120F	0x2209      	CALL       _Mul_32x32_U
0x1210	0x3190      	MOVLP      16
0x1211	0x0143      	MOVLB      3
0x1212	0x0866      	MOVF       get_pwr_Forward_L0, 0
0x1213	0x00F4      	MOVWF      R4
0x1214	0x0867      	MOVF       get_pwr_Forward_L0+1, 0
0x1215	0x00F5      	MOVWF      R5
0x1216	0x0868      	MOVF       get_pwr_Forward_L0+2, 0
0x1217	0x00F6      	MOVWF      R6
0x1218	0x0869      	MOVF       get_pwr_Forward_L0+3, 0
0x1219	0x00F7      	MOVWF      R7
0x121A	0x086A      	MOVF       get_pwr_Reverse_L0, 0
0x121B	0x02F4      	SUBWF      R4, 1
0x121C	0x086B      	MOVF       get_pwr_Reverse_L0+1, 0
0x121D	0x3BF5      	SUBWFB     R5, 1
0x121E	0x086C      	MOVF       get_pwr_Reverse_L0+2, 0
0x121F	0x3BF6      	SUBWFB     R6, 1
0x1220	0x086D      	MOVF       get_pwr_Reverse_L0+3, 0
0x1221	0x3BF7      	SUBWFB     R7, 1
0x1222	0x3188      	MOVLP      8
0x1223	0x2326      	CALL       _Div_32x32_S
0x1224	0x3190      	MOVLP      16
0x1225	0x0870      	MOVF       R0, 0
0x1226	0x0143      	MOVLB      3
0x1227	0x00E6      	MOVWF      get_pwr_Forward_L0
0x1228	0x0871      	MOVF       R1, 0
0x1229	0x00E7      	MOVWF      get_pwr_Forward_L0+1
0x122A	0x0872      	MOVF       R2, 0
0x122B	0x00E8      	MOVWF      get_pwr_Forward_L0+2
0x122C	0x0873      	MOVF       R3, 0
0x122D	0x00E9      	MOVWF      get_pwr_Forward_L0+3
;main.c,595 :: 		if(Forward>999) Forward = 999;
0x122E	0x3080      	MOVLW      128
0x122F	0x00F4      	MOVWF      R4
0x1230	0x3080      	MOVLW      128
0x1231	0x0673      	XORWF      R3, 0
0x1232	0x0274      	SUBWF      R4, 0
0x1233	0x1D03      	BTFSS      STATUS, 2
0x1234	0x2A3F      	GOTO       L__get_pwr346
0x1235	0x0872      	MOVF       R2, 0
0x1236	0x3C00      	SUBLW      0
0x1237	0x1D03      	BTFSS      STATUS, 2
0x1238	0x2A3F      	GOTO       L__get_pwr346
0x1239	0x0871      	MOVF       R1, 0
0x123A	0x3C03      	SUBLW      3
0x123B	0x1D03      	BTFSS      STATUS, 2
0x123C	0x2A3F      	GOTO       L__get_pwr346
0x123D	0x0870      	MOVF       R0, 0
0x123E	0x3CE7      	SUBLW      231
L__get_pwr346:
0x123F	0x1803      	BTFSC      STATUS, 0
0x1240	0x2A47      	GOTO       L_get_pwr150
0x1241	0x30E7      	MOVLW      231
0x1242	0x00E6      	MOVWF      get_pwr_Forward_L0
0x1243	0x3003      	MOVLW      3
0x1244	0x00E7      	MOVWF      get_pwr_Forward_L0+1
0x1245	0x01E8      	CLRF       get_pwr_Forward_L0+2
0x1246	0x01E9      	CLRF       get_pwr_Forward_L0+3
L_get_pwr150:
;main.c,596 :: 		}
L_get_pwr149:
;main.c,598 :: 		SWR = Forward;
0x1247	0x0866      	MOVF       get_pwr_Forward_L0, 0
0x1248	0x00AF      	MOVWF      _SWR
0x1249	0x0867      	MOVF       get_pwr_Forward_L0+1, 0
0x124A	0x00B0      	MOVWF      _SWR+1
;main.c,599 :: 		return;
;main.c,600 :: 		}
L_end_get_pwr:
0x124B	0x0008      	RETURN
; end of _get_pwr
_Btn_short:
;main.c,356 :: 		void Btn_short(){
;main.c,357 :: 		Green = 0;
0x124C	0x0140      	MOVLB      0
0x124D	0x1197      	BCF        LATB3_bit, BitPos(LATB3_bit+0)
;main.c,358 :: 		atu_reset();
0x124E	0x3188      	MOVLP      8
0x124F	0x2753      	CALL       _atu_reset
0x1250	0x3190      	MOVLP      16
;main.c,359 :: 		oled_wr_str(2, 0, "RESET    ", 9);
0x1251	0x3002      	MOVLW      2
0x1252	0x0144      	MOVLB      4
0x1253	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x1254	0x01B0      	CLRF       FARG_oled_wr_str_col
0x1255	0x30C0      	MOVLW      ?lstr18_main
0x1256	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x1257	0x3000      	MOVLW      hi_addr(?lstr18_main)
0x1258	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x1259	0x3009      	MOVLW      9
0x125A	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x125B	0x3180      	MOVLP      0
0x125C	0x232C      	CALL       _oled_wr_str
0x125D	0x3190      	MOVLP      16
;main.c,360 :: 		Delay_ms(600);
0x125E	0x3019      	MOVLW      25
0x125F	0x00FB      	MOVWF      R11
0x1260	0x305A      	MOVLW      90
0x1261	0x00FC      	MOVWF      R12
0x1262	0x30B1      	MOVLW      177
0x1263	0x00FD      	MOVWF      R13
L_Btn_short85:
0x1264	0x0BFD      	DECFSZ     R13, 1
0x1265	0x2A64      	GOTO       L_Btn_short85
0x1266	0x0BFC      	DECFSZ     R12, 1
0x1267	0x2A64      	GOTO       L_Btn_short85
0x1268	0x0BFB      	DECFSZ     R11, 1
0x1269	0x2A64      	GOTO       L_Btn_short85
0x126A	0x0000      	NOP
0x126B	0x0000      	NOP
;main.c,361 :: 		oled_wr_str(2, 0, "SWR  ", 5);
0x126C	0x3002      	MOVLW      2
0x126D	0x0144      	MOVLB      4
0x126E	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x126F	0x01B0      	CLRF       FARG_oled_wr_str_col
0x1270	0x30CA      	MOVLW      ?lstr19_main
0x1271	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x1272	0x3000      	MOVLW      hi_addr(?lstr19_main)
0x1273	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x1274	0x3005      	MOVLW      5
0x1275	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x1276	0x3180      	MOVLP      0
0x1277	0x232C      	CALL       _oled_wr_str
0x1278	0x3190      	MOVLP      16
;main.c,362 :: 		oled_wr_str(2, 42, "=", 1);
0x1279	0x3002      	MOVLW      2
0x127A	0x0144      	MOVLB      4
0x127B	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x127C	0x302A      	MOVLW      42
0x127D	0x00B0      	MOVWF      FARG_oled_wr_str_col
0x127E	0x306C      	MOVLW      ?lstr20_main
0x127F	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x1280	0x3000      	MOVLW      hi_addr(?lstr20_main)
0x1281	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x1282	0x3001      	MOVLW      1
0x1283	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x1284	0x3180      	MOVLP      0
0x1285	0x232C      	CALL       _oled_wr_str
0x1286	0x3190      	MOVLP      16
;main.c,363 :: 		oled_wr_str(2, 60, "0.00", 4);
0x1287	0x3002      	MOVLW      2
0x1288	0x0144      	MOVLB      4
0x1289	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x128A	0x303C      	MOVLW      60
0x128B	0x00B0      	MOVWF      FARG_oled_wr_str_col
0x128C	0x30A0      	MOVLW      ?lstr21_main
0x128D	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x128E	0x3000      	MOVLW      hi_addr(?lstr21_main)
0x128F	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x1290	0x3004      	MOVLW      4
0x1291	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x1292	0x3180      	MOVLP      0
0x1293	0x232C      	CALL       _oled_wr_str
0x1294	0x3190      	MOVLP      16
;main.c,364 :: 		Delay_ms(300);
0x1295	0x300D      	MOVLW      13
0x1296	0x00FB      	MOVWF      R11
0x1297	0x302D      	MOVLW      45
0x1298	0x00FC      	MOVWF      R12
0x1299	0x30D7      	MOVLW      215
0x129A	0x00FD      	MOVWF      R13
L_Btn_short86:
0x129B	0x0BFD      	DECFSZ     R13, 1
0x129C	0x2A9B      	GOTO       L_Btn_short86
0x129D	0x0BFC      	DECFSZ     R12, 1
0x129E	0x2A9B      	GOTO       L_Btn_short86
0x129F	0x0BFB      	DECFSZ     R11, 1
0x12A0	0x2A9B      	GOTO       L_Btn_short86
0x12A1	0x0000      	NOP
0x12A2	0x0000      	NOP
;main.c,365 :: 		Green = 1;
0x12A3	0x1597      	BSF        LATB3_bit, BitPos(LATB3_bit+0)
;main.c,366 :: 		B_short = 0;
0x12A4	0x0143      	MOVLB      3
0x12A5	0x12A6      	BCF        _B_short, BitPos(_B_short+0)
;main.c,367 :: 		E_short = 0;
0x12A6	0x1126      	BCF        _E_short, BitPos(_E_short+0)
;main.c,368 :: 		volt_cnt = Tick;
0x12A7	0x0142      	MOVLB      2
0x12A8	0x0858      	MOVF       _Tick, 0
0x12A9	0x00E0      	MOVWF      _volt_cnt
0x12AA	0x0859      	MOVF       _Tick+1, 0
0x12AB	0x00E1      	MOVWF      _volt_cnt+1
0x12AC	0x085A      	MOVF       _Tick+2, 0
0x12AD	0x00E2      	MOVWF      _volt_cnt+2
0x12AE	0x085B      	MOVF       _Tick+3, 0
0x12AF	0x00E3      	MOVWF      _volt_cnt+3
;main.c,369 :: 		watch_cnt = Tick;
0x12B0	0x0858      	MOVF       _Tick, 0
0x12B1	0x00DC      	MOVWF      _watch_cnt
0x12B2	0x0859      	MOVF       _Tick+1, 0
0x12B3	0x00DD      	MOVWF      _watch_cnt+1
0x12B4	0x085A      	MOVF       _Tick+2, 0
0x12B5	0x00DE      	MOVWF      _watch_cnt+2
0x12B6	0x085B      	MOVF       _Tick+3, 0
0x12B7	0x00DF      	MOVWF      _watch_cnt+3
;main.c,370 :: 		return;
;main.c,371 :: 		}
L_end_Btn_short:
0x12B8	0x0008      	RETURN
; end of _Btn_short
_get_swr:
;main.c,602 :: 		void get_swr(){
;main.c,603 :: 		get_pwr();
0x12B9	0x2119      	CALL       _get_pwr
;main.c,604 :: 		tune_cnt = 500;
0x12BA	0x30F4      	MOVLW      244
0x12BB	0x00B9      	MOVWF      _tune_cnt
0x12BC	0x3001      	MOVLW      1
0x12BD	0x00BA      	MOVWF      _tune_cnt+1
0x12BE	0x01BB      	CLRF       _tune_cnt+2
0x12BF	0x01BC      	CLRF       _tune_cnt+3
;main.c,605 :: 		while(PWR<min_for_start | PWR>max_for_start){   // waiting for good power
L_get_swr151:
0x12C0	0x3080      	MOVLW      128
0x12C1	0x0142      	MOVLB      2
0x12C2	0x066F      	XORWF      _PWR+1, 0
0x12C3	0x00F1      	MOVWF      R1
0x12C4	0x3080      	MOVLW      128
0x12C5	0x0141      	MOVLB      1
0x12C6	0x0651      	XORWF      _min_for_start+1, 0
0x12C7	0x0271      	SUBWF      R1, 0
0x12C8	0x1D03      	BTFSS      STATUS, 2
0x12C9	0x2ACD      	GOTO       L__get_swr348
0x12CA	0x0850      	MOVF       _min_for_start, 0
0x12CB	0x0142      	MOVLB      2
0x12CC	0x026E      	SUBWF      _PWR, 0
L__get_swr348:
0x12CD	0x3001      	MOVLW      1
0x12CE	0x1803      	BTFSC      STATUS, 0
0x12CF	0x3000      	MOVLW      0
0x12D0	0x00F1      	MOVWF      R1
0x12D1	0x3080      	MOVLW      128
0x12D2	0x0141      	MOVLB      1
0x12D3	0x063F      	XORWF      _max_for_start+1, 0
0x12D4	0x00F0      	MOVWF      R0
0x12D5	0x3080      	MOVLW      128
0x12D6	0x0142      	MOVLB      2
0x12D7	0x066F      	XORWF      _PWR+1, 0
0x12D8	0x0270      	SUBWF      R0, 0
0x12D9	0x1D03      	BTFSS      STATUS, 2
0x12DA	0x2ADE      	GOTO       L__get_swr349
0x12DB	0x086E      	MOVF       _PWR, 0
0x12DC	0x0141      	MOVLB      1
0x12DD	0x023E      	SUBWF      _max_for_start, 0
L__get_swr349:
0x12DE	0x3001      	MOVLW      1
0x12DF	0x1803      	BTFSC      STATUS, 0
0x12E0	0x3000      	MOVLW      0
0x12E1	0x00F0      	MOVWF      R0
0x12E2	0x0871      	MOVF       R1, 0
0x12E3	0x04F0      	IORWF       R0, 1
0x12E4	0x1903      	BTFSC      STATUS, 2
0x12E5	0x2B1C      	GOTO       L_get_swr152
;main.c,606 :: 		if(B_short){
0x12E6	0x0143      	MOVLB      3
0x12E7	0x1EA6      	BTFSS      _B_short, BitPos(_B_short+0)
0x12E8	0x2AEE      	GOTO       L_get_swr153
;main.c,607 :: 		Btn_short();
0x12E9	0x224C      	CALL       _Btn_short
;main.c,608 :: 		SWR = 0;
0x12EA	0x0143      	MOVLB      3
0x12EB	0x01AF      	CLRF       _SWR
0x12EC	0x01B0      	CLRF       _SWR+1
;main.c,609 :: 		return;
0x12ED	0x2B1C      	GOTO       L_end_get_swr
;main.c,610 :: 		}
L_get_swr153:
;main.c,611 :: 		if(B_xlong){
0x12EE	0x1DA6      	BTFSS      _B_xlong, BitPos(_B_xlong+0)
0x12EF	0x2AF4      	GOTO       L_get_swr154
;main.c,612 :: 		Btn_xlong();
0x12F0	0x20F1      	CALL       _Btn_xlong
;main.c,613 :: 		SWR = 0;
0x12F1	0x01AF      	CLRF       _SWR
0x12F2	0x01B0      	CLRF       _SWR+1
;main.c,614 :: 		return;
0x12F3	0x2B1C      	GOTO       L_end_get_swr
;main.c,615 :: 		}
L_get_swr154:
;main.c,616 :: 		get_pwr();
0x12F4	0x2119      	CALL       _get_pwr
;main.c,617 :: 		draw_power(PWR);
0x12F5	0x0142      	MOVLB      2
0x12F6	0x086E      	MOVF       _PWR, 0
0x12F7	0x0143      	MOVLB      3
0x12F8	0x00E6      	MOVWF      FARG_draw_power_p
0x12F9	0x0142      	MOVLB      2
0x12FA	0x086F      	MOVF       _PWR+1, 0
0x12FB	0x0143      	MOVLB      3
0x12FC	0x00E7      	MOVWF      FARG_draw_power_p+1
0x12FD	0x3188      	MOVLP      8
0x12FE	0x275D      	CALL       _draw_power
0x12FF	0x3190      	MOVLP      16
;main.c,618 :: 		if(tune_cnt>0) tune_cnt --;
0x1300	0x0143      	MOVLB      3
0x1301	0x083C      	MOVF       _tune_cnt+3, 0
0x1302	0x3C00      	SUBLW      0
0x1303	0x1D03      	BTFSS      STATUS, 2
0x1304	0x2B0F      	GOTO       L__get_swr350
0x1305	0x083B      	MOVF       _tune_cnt+2, 0
0x1306	0x3C00      	SUBLW      0
0x1307	0x1D03      	BTFSS      STATUS, 2
0x1308	0x2B0F      	GOTO       L__get_swr350
0x1309	0x083A      	MOVF       _tune_cnt+1, 0
0x130A	0x3C00      	SUBLW      0
0x130B	0x1D03      	BTFSS      STATUS, 2
0x130C	0x2B0F      	GOTO       L__get_swr350
0x130D	0x0839      	MOVF       _tune_cnt, 0
0x130E	0x3C00      	SUBLW      0
L__get_swr350:
0x130F	0x1803      	BTFSC      STATUS, 0
0x1310	0x2B18      	GOTO       L_get_swr155
0x1311	0x3001      	MOVLW      1
0x1312	0x02B9      	SUBWF      _tune_cnt, 1
0x1313	0x3000      	MOVLW      0
0x1314	0x3BBA      	SUBWFB     _tune_cnt+1, 1
0x1315	0x3BBB      	SUBWFB     _tune_cnt+2, 1
0x1316	0x3BBC      	SUBWFB     _tune_cnt+3, 1
0x1317	0x2B1B      	GOTO       L_get_swr156
L_get_swr155:
;main.c,620 :: 		SWR = 0;
0x1318	0x01AF      	CLRF       _SWR
0x1319	0x01B0      	CLRF       _SWR+1
;main.c,621 :: 		return;
0x131A	0x2B1C      	GOTO       L_end_get_swr
;main.c,622 :: 		}
L_get_swr156:
;main.c,623 :: 		}
0x131B	0x2AC0      	GOTO       L_get_swr151
L_get_swr152:
;main.c,625 :: 		return;
;main.c,626 :: 		}
L_end_get_swr:
0x131C	0x0008      	RETURN
; end of _get_swr
_coarse_cap:
;main.c,635 :: 		void coarse_cap() {
;main.c,636 :: 		char step = 3;
0x131D	0x3003      	MOVLW      3
0x131E	0x0143      	MOVLB      3
0x131F	0x00E5      	MOVWF      coarse_cap_step_L0
;main.c,640 :: 		cap = 0;
0x1320	0x0140      	MOVLB      0
0x1321	0x01D6      	CLRF       _cap
;main.c,641 :: 		Relay_set(ind, cap, SW);
0x1322	0x0854      	MOVF       _ind, 0
0x1323	0x0144      	MOVLB      4
0x1324	0x00A8      	MOVWF      FARG_Relay_set_L
0x1325	0x01A9      	CLRF       FARG_Relay_set_C
0x1326	0x0140      	MOVLB      0
0x1327	0x0855      	MOVF       _SW, 0
0x1328	0x0144      	MOVLB      4
0x1329	0x00AA      	MOVWF      FARG_Relay_set_I
0x132A	0x3188      	MOVLP      8
0x132B	0x2272      	CALL       _Relay_set
0x132C	0x3190      	MOVLP      16
;main.c,642 :: 		get_swr();
0x132D	0x22B9      	CALL       _get_swr
;main.c,643 :: 		min_swr = SWR + SWR/20;
0x132E	0x3014      	MOVLW      20
0x132F	0x00F4      	MOVWF      R4
0x1330	0x3000      	MOVLW      0
0x1331	0x00F5      	MOVWF      R5
0x1332	0x0143      	MOVLB      3
0x1333	0x082F      	MOVF       _SWR, 0
0x1334	0x00F0      	MOVWF      R0
0x1335	0x0830      	MOVF       _SWR+1, 0
0x1336	0x00F1      	MOVWF      R1
0x1337	0x3180      	MOVLP      0
0x1338	0x265B      	CALL       _Div_16x16_S
0x1339	0x3190      	MOVLP      16
0x133A	0x0870      	MOVF       R0, 0
0x133B	0x0143      	MOVLB      3
0x133C	0x072F      	ADDWF      _SWR, 0
0x133D	0x00E3      	MOVWF      coarse_cap_min_swr_L0
0x133E	0x0871      	MOVF       R1, 0
0x133F	0x3D30      	ADDWFC     _SWR+1, 0
0x1340	0x00E4      	MOVWF      coarse_cap_min_swr_L0+1
;main.c,644 :: 		for(count=step; count<=31;) {
0x1341	0x0865      	MOVF       coarse_cap_step_L0, 0
0x1342	0x00E2      	MOVWF      coarse_cap_count_L0
L_coarse_cap158:
0x1343	0x0862      	MOVF       coarse_cap_count_L0, 0
0x1344	0x3C1F      	SUBLW      31
0x1345	0x1C03      	BTFSS      STATUS, 0
0x1346	0x2BA1      	GOTO       L_coarse_cap159
;main.c,645 :: 		Relay_set(ind, count, SW);
0x1347	0x0140      	MOVLB      0
0x1348	0x0854      	MOVF       _ind, 0
0x1349	0x0144      	MOVLB      4
0x134A	0x00A8      	MOVWF      FARG_Relay_set_L
0x134B	0x0143      	MOVLB      3
0x134C	0x0862      	MOVF       coarse_cap_count_L0, 0
0x134D	0x0144      	MOVLB      4
0x134E	0x00A9      	MOVWF      FARG_Relay_set_C
0x134F	0x0140      	MOVLB      0
0x1350	0x0855      	MOVF       _SW, 0
0x1351	0x0144      	MOVLB      4
0x1352	0x00AA      	MOVWF      FARG_Relay_set_I
0x1353	0x3188      	MOVLP      8
0x1354	0x2272      	CALL       _Relay_set
0x1355	0x3190      	MOVLP      16
;main.c,646 :: 		get_swr();
0x1356	0x22B9      	CALL       _get_swr
;main.c,647 :: 		if(SWR < min_swr) {
0x1357	0x3080      	MOVLW      128
0x1358	0x0143      	MOVLB      3
0x1359	0x0630      	XORWF      _SWR+1, 0
0x135A	0x00F0      	MOVWF      R0
0x135B	0x3080      	MOVLW      128
0x135C	0x0664      	XORWF      coarse_cap_min_swr_L0+1, 0
0x135D	0x0270      	SUBWF      R0, 0
0x135E	0x1D03      	BTFSS      STATUS, 2
0x135F	0x2B62      	GOTO       L__coarse_cap353
0x1360	0x0863      	MOVF       coarse_cap_min_swr_L0, 0
0x1361	0x022F      	SUBWF      _SWR, 0
L__coarse_cap353:
0x1362	0x1803      	BTFSC      STATUS, 0
0x1363	0x2B9F      	GOTO       L_coarse_cap161
;main.c,648 :: 		min_swr = SWR + SWR/20;
0x1364	0x3014      	MOVLW      20
0x1365	0x00F4      	MOVWF      R4
0x1366	0x3000      	MOVLW      0
0x1367	0x00F5      	MOVWF      R5
0x1368	0x082F      	MOVF       _SWR, 0
0x1369	0x00F0      	MOVWF      R0
0x136A	0x0830      	MOVF       _SWR+1, 0
0x136B	0x00F1      	MOVWF      R1
0x136C	0x3180      	MOVLP      0
0x136D	0x265B      	CALL       _Div_16x16_S
0x136E	0x3190      	MOVLP      16
0x136F	0x0870      	MOVF       R0, 0
0x1370	0x0143      	MOVLB      3
0x1371	0x072F      	ADDWF      _SWR, 0
0x1372	0x00E3      	MOVWF      coarse_cap_min_swr_L0
0x1373	0x0871      	MOVF       R1, 0
0x1374	0x3D30      	ADDWFC     _SWR+1, 0
0x1375	0x00E4      	MOVWF      coarse_cap_min_swr_L0+1
;main.c,649 :: 		cap = count;
0x1376	0x0862      	MOVF       coarse_cap_count_L0, 0
0x1377	0x0140      	MOVLB      0
0x1378	0x00D6      	MOVWF      _cap
;main.c,650 :: 		step_cap = step;
0x1379	0x0143      	MOVLB      3
0x137A	0x0865      	MOVF       coarse_cap_step_L0, 0
0x137B	0x0140      	MOVLB      0
0x137C	0x00DC      	MOVWF      _step_cap
;main.c,651 :: 		if(SWR<120) break;
0x137D	0x3080      	MOVLW      128
0x137E	0x0143      	MOVLB      3
0x137F	0x0630      	XORWF      _SWR+1, 0
0x1380	0x00F0      	MOVWF      R0
0x1381	0x3080      	MOVLW      128
0x1382	0x0270      	SUBWF      R0, 0
0x1383	0x1D03      	BTFSS      STATUS, 2
0x1384	0x2B87      	GOTO       L__coarse_cap354
0x1385	0x3078      	MOVLW      120
0x1386	0x022F      	SUBWF      _SWR, 0
L__coarse_cap354:
0x1387	0x1803      	BTFSC      STATUS, 0
0x1388	0x2B8A      	GOTO       L_coarse_cap162
0x1389	0x2BA1      	GOTO       L_coarse_cap159
L_coarse_cap162:
;main.c,652 :: 		count += step;
0x138A	0x0865      	MOVF       coarse_cap_step_L0, 0
0x138B	0x0762      	ADDWF      coarse_cap_count_L0, 0
0x138C	0x00F1      	MOVWF      R1
0x138D	0x0871      	MOVF       R1, 0
0x138E	0x00E2      	MOVWF      coarse_cap_count_L0
;main.c,653 :: 		if(count==9) count = 8;
0x138F	0x0871      	MOVF       R1, 0
0x1390	0x3A09      	XORLW      9
0x1391	0x1D03      	BTFSS      STATUS, 2
0x1392	0x2B96      	GOTO       L_coarse_cap163
0x1393	0x3008      	MOVLW      8
0x1394	0x00E2      	MOVWF      coarse_cap_count_L0
0x1395	0x2B9E      	GOTO       L_coarse_cap164
L_coarse_cap163:
;main.c,654 :: 		else if(count==17) {count = 16; step = 4;}
0x1396	0x0862      	MOVF       coarse_cap_count_L0, 0
0x1397	0x3A11      	XORLW      17
0x1398	0x1D03      	BTFSS      STATUS, 2
0x1399	0x2B9E      	GOTO       L_coarse_cap165
0x139A	0x3010      	MOVLW      16
0x139B	0x00E2      	MOVWF      coarse_cap_count_L0
0x139C	0x3004      	MOVLW      4
0x139D	0x00E5      	MOVWF      coarse_cap_step_L0
L_coarse_cap165:
L_coarse_cap164:
;main.c,655 :: 		}
0x139E	0x2BA0      	GOTO       L_coarse_cap166
L_coarse_cap161:
;main.c,656 :: 		else break;
0x139F	0x2BA1      	GOTO       L_coarse_cap159
L_coarse_cap166:
;main.c,657 :: 		}
0x13A0	0x2B43      	GOTO       L_coarse_cap158
L_coarse_cap159:
;main.c,658 :: 		Relay_set(ind, cap, SW);
0x13A1	0x0140      	MOVLB      0
0x13A2	0x0854      	MOVF       _ind, 0
0x13A3	0x0144      	MOVLB      4
0x13A4	0x00A8      	MOVWF      FARG_Relay_set_L
0x13A5	0x0140      	MOVLB      0
0x13A6	0x0856      	MOVF       _cap, 0
0x13A7	0x0144      	MOVLB      4
0x13A8	0x00A9      	MOVWF      FARG_Relay_set_C
0x13A9	0x0140      	MOVLB      0
0x13AA	0x0855      	MOVF       _SW, 0
0x13AB	0x0144      	MOVLB      4
0x13AC	0x00AA      	MOVWF      FARG_Relay_set_I
0x13AD	0x3188      	MOVLP      8
0x13AE	0x2272      	CALL       _Relay_set
0x13AF	0x3190      	MOVLP      16
;main.c,659 :: 		return;
;main.c,660 :: 		}
L_end_coarse_cap:
0x13B0	0x0008      	RETURN
; end of _coarse_cap
_sharp_ind:
;main.c,726 :: 		void sharp_ind() {
;main.c,729 :: 		range = step_ind;
0x13B1	0x0140      	MOVLB      0
0x13B2	0x082F      	MOVF       _step_ind, 0
0x13B3	0x0143      	MOVLB      3
0x13B4	0x00DC      	MOVWF      sharp_ind_range_L0
;main.c,731 :: 		max_range = ind + range;
0x13B5	0x0140      	MOVLB      0
0x13B6	0x082F      	MOVF       _step_ind, 0
0x13B7	0x0754      	ADDWF      _ind, 0
0x13B8	0x00F1      	MOVWF      R1
0x13B9	0x0871      	MOVF       R1, 0
0x13BA	0x0143      	MOVLB      3
0x13BB	0x00DE      	MOVWF      sharp_ind_max_range_L0
;main.c,732 :: 		if(max_range>31) max_range = 31;
0x13BC	0x0871      	MOVF       R1, 0
0x13BD	0x3C1F      	SUBLW      31
0x13BE	0x1803      	BTFSC      STATUS, 0
0x13BF	0x2BC2      	GOTO       L_sharp_ind192
0x13C0	0x301F      	MOVLW      31
0x13C1	0x00DE      	MOVWF      sharp_ind_max_range_L0
L_sharp_ind192:
;main.c,733 :: 		if(ind>range) min_range = ind - range; else min_range = 0;
0x13C2	0x0140      	MOVLB      0
0x13C3	0x0854      	MOVF       _ind, 0
0x13C4	0x0143      	MOVLB      3
0x13C5	0x025C      	SUBWF      sharp_ind_range_L0, 0
0x13C6	0x1803      	BTFSC      STATUS, 0
0x13C7	0x2BCE      	GOTO       L_sharp_ind193
0x13C8	0x085C      	MOVF       sharp_ind_range_L0, 0
0x13C9	0x0140      	MOVLB      0
0x13CA	0x0254      	SUBWF      _ind, 0
0x13CB	0x0143      	MOVLB      3
0x13CC	0x00DF      	MOVWF      sharp_ind_min_range_L0
0x13CD	0x2BCF      	GOTO       L_sharp_ind194
L_sharp_ind193:
0x13CE	0x01DF      	CLRF       sharp_ind_min_range_L0
L_sharp_ind194:
;main.c,734 :: 		ind = min_range;
0x13CF	0x085F      	MOVF       sharp_ind_min_range_L0, 0
0x13D0	0x0140      	MOVLB      0
0x13D1	0x00D4      	MOVWF      _ind
;main.c,735 :: 		Relay_set(ind, cap, SW);
0x13D2	0x0143      	MOVLB      3
0x13D3	0x085F      	MOVF       sharp_ind_min_range_L0, 0
0x13D4	0x0144      	MOVLB      4
0x13D5	0x00A8      	MOVWF      FARG_Relay_set_L
0x13D6	0x0140      	MOVLB      0
0x13D7	0x0856      	MOVF       _cap, 0
0x13D8	0x0144      	MOVLB      4
0x13D9	0x00A9      	MOVWF      FARG_Relay_set_C
0x13DA	0x0140      	MOVLB      0
0x13DB	0x0855      	MOVF       _SW, 0
0x13DC	0x0144      	MOVLB      4
0x13DD	0x00AA      	MOVWF      FARG_Relay_set_I
0x13DE	0x3188      	MOVLP      8
0x13DF	0x2272      	CALL       _Relay_set
0x13E0	0x3190      	MOVLP      16
;main.c,736 :: 		get_swr();
0x13E1	0x22B9      	CALL       _get_swr
;main.c,737 :: 		if(SWR==0) return;
0x13E2	0x3000      	MOVLW      0
0x13E3	0x0143      	MOVLB      3
0x13E4	0x0630      	XORWF      _SWR+1, 0
0x13E5	0x1D03      	BTFSS      STATUS, 2
0x13E6	0x2BE9      	GOTO       L__sharp_ind366
0x13E7	0x3000      	MOVLW      0
0x13E8	0x062F      	XORWF      _SWR, 0
L__sharp_ind366:
0x13E9	0x1D03      	BTFSS      STATUS, 2
0x13EA	0x2BEC      	GOTO       L_sharp_ind195
0x13EB	0x2C70      	GOTO       L_end_sharp_ind
L_sharp_ind195:
;main.c,738 :: 		min_SWR = SWR;
0x13EC	0x082F      	MOVF       _SWR, 0
0x13ED	0x00E0      	MOVWF      sharp_ind_min_SWR_L0
0x13EE	0x0830      	MOVF       _SWR+1, 0
0x13EF	0x00E1      	MOVWF      sharp_ind_min_SWR_L0+1
;main.c,739 :: 		for(count=min_range+1; count<=max_range; count++) {
0x13F0	0x0A5F      	INCF       sharp_ind_min_range_L0, 0
0x13F1	0x00DD      	MOVWF      sharp_ind_count_L0
L_sharp_ind196:
0x13F2	0x085D      	MOVF       sharp_ind_count_L0, 0
0x13F3	0x025E      	SUBWF      sharp_ind_max_range_L0, 0
0x13F4	0x1C03      	BTFSS      STATUS, 0
0x13F5	0x2C61      	GOTO       L_sharp_ind197
;main.c,740 :: 		Relay_set(count, cap, SW);
0x13F6	0x085D      	MOVF       sharp_ind_count_L0, 0
0x13F7	0x0144      	MOVLB      4
0x13F8	0x00A8      	MOVWF      FARG_Relay_set_L
0x13F9	0x0140      	MOVLB      0
0x13FA	0x0856      	MOVF       _cap, 0
0x13FB	0x0144      	MOVLB      4
0x13FC	0x00A9      	MOVWF      FARG_Relay_set_C
0x13FD	0x0140      	MOVLB      0
0x13FE	0x0855      	MOVF       _SW, 0
0x13FF	0x0144      	MOVLB      4
0x1400	0x00AA      	MOVWF      FARG_Relay_set_I
0x1401	0x3188      	MOVLP      8
0x1402	0x2272      	CALL       _Relay_set
0x1403	0x3190      	MOVLP      16
;main.c,741 :: 		get_swr();
0x1404	0x22B9      	CALL       _get_swr
;main.c,742 :: 		if(SWR==0) return;
0x1405	0x3000      	MOVLW      0
0x1406	0x0143      	MOVLB      3
0x1407	0x0630      	XORWF      _SWR+1, 0
0x1408	0x1D03      	BTFSS      STATUS, 2
0x1409	0x2C0C      	GOTO       L__sharp_ind367
0x140A	0x3000      	MOVLW      0
0x140B	0x062F      	XORWF      _SWR, 0
L__sharp_ind367:
0x140C	0x1D03      	BTFSS      STATUS, 2
0x140D	0x2C0F      	GOTO       L_sharp_ind199
0x140E	0x2C70      	GOTO       L_end_sharp_ind
L_sharp_ind199:
;main.c,743 :: 		if(SWR>=min_SWR) { Delay_ms(10); get_swr(); }
0x140F	0x3080      	MOVLW      128
0x1410	0x0630      	XORWF      _SWR+1, 0
0x1411	0x00F0      	MOVWF      R0
0x1412	0x3080      	MOVLW      128
0x1413	0x0661      	XORWF      sharp_ind_min_SWR_L0+1, 0
0x1414	0x0270      	SUBWF      R0, 0
0x1415	0x1D03      	BTFSS      STATUS, 2
0x1416	0x2C19      	GOTO       L__sharp_ind368
0x1417	0x0860      	MOVF       sharp_ind_min_SWR_L0, 0
0x1418	0x022F      	SUBWF      _SWR, 0
L__sharp_ind368:
0x1419	0x1C03      	BTFSS      STATUS, 0
0x141A	0x2C25      	GOTO       L_sharp_ind200
0x141B	0x3068      	MOVLW      104
0x141C	0x00FC      	MOVWF      R12
0x141D	0x30E4      	MOVLW      228
0x141E	0x00FD      	MOVWF      R13
L_sharp_ind201:
0x141F	0x0BFD      	DECFSZ     R13, 1
0x1420	0x2C1F      	GOTO       L_sharp_ind201
0x1421	0x0BFC      	DECFSZ     R12, 1
0x1422	0x2C1F      	GOTO       L_sharp_ind201
0x1423	0x0000      	NOP
0x1424	0x22B9      	CALL       _get_swr
L_sharp_ind200:
;main.c,744 :: 		if(SWR>=min_SWR) { Delay_ms(10); get_swr(); }
0x1425	0x3080      	MOVLW      128
0x1426	0x0143      	MOVLB      3
0x1427	0x0630      	XORWF      _SWR+1, 0
0x1428	0x00F0      	MOVWF      R0
0x1429	0x3080      	MOVLW      128
0x142A	0x0661      	XORWF      sharp_ind_min_SWR_L0+1, 0
0x142B	0x0270      	SUBWF      R0, 0
0x142C	0x1D03      	BTFSS      STATUS, 2
0x142D	0x2C30      	GOTO       L__sharp_ind369
0x142E	0x0860      	MOVF       sharp_ind_min_SWR_L0, 0
0x142F	0x022F      	SUBWF      _SWR, 0
L__sharp_ind369:
0x1430	0x1C03      	BTFSS      STATUS, 0
0x1431	0x2C3C      	GOTO       L_sharp_ind202
0x1432	0x3068      	MOVLW      104
0x1433	0x00FC      	MOVWF      R12
0x1434	0x30E4      	MOVLW      228
0x1435	0x00FD      	MOVWF      R13
L_sharp_ind203:
0x1436	0x0BFD      	DECFSZ     R13, 1
0x1437	0x2C36      	GOTO       L_sharp_ind203
0x1438	0x0BFC      	DECFSZ     R12, 1
0x1439	0x2C36      	GOTO       L_sharp_ind203
0x143A	0x0000      	NOP
0x143B	0x22B9      	CALL       _get_swr
L_sharp_ind202:
;main.c,745 :: 		if(SWR < min_SWR) {
0x143C	0x3080      	MOVLW      128
0x143D	0x0143      	MOVLB      3
0x143E	0x0630      	XORWF      _SWR+1, 0
0x143F	0x00F0      	MOVWF      R0
0x1440	0x3080      	MOVLW      128
0x1441	0x0661      	XORWF      sharp_ind_min_SWR_L0+1, 0
0x1442	0x0270      	SUBWF      R0, 0
0x1443	0x1D03      	BTFSS      STATUS, 2
0x1444	0x2C47      	GOTO       L__sharp_ind370
0x1445	0x0860      	MOVF       sharp_ind_min_SWR_L0, 0
0x1446	0x022F      	SUBWF      _SWR, 0
L__sharp_ind370:
0x1447	0x1803      	BTFSC      STATUS, 0
0x1448	0x2C5E      	GOTO       L_sharp_ind204
;main.c,746 :: 		min_SWR = SWR;
0x1449	0x082F      	MOVF       _SWR, 0
0x144A	0x00E0      	MOVWF      sharp_ind_min_SWR_L0
0x144B	0x0830      	MOVF       _SWR+1, 0
0x144C	0x00E1      	MOVWF      sharp_ind_min_SWR_L0+1
;main.c,747 :: 		ind = count;
0x144D	0x085D      	MOVF       sharp_ind_count_L0, 0
0x144E	0x0140      	MOVLB      0
0x144F	0x00D4      	MOVWF      _ind
;main.c,748 :: 		if(SWR<120) break;
0x1450	0x3080      	MOVLW      128
0x1451	0x0143      	MOVLB      3
0x1452	0x0630      	XORWF      _SWR+1, 0
0x1453	0x00F0      	MOVWF      R0
0x1454	0x3080      	MOVLW      128
0x1455	0x0270      	SUBWF      R0, 0
0x1456	0x1D03      	BTFSS      STATUS, 2
0x1457	0x2C5A      	GOTO       L__sharp_ind371
0x1458	0x3078      	MOVLW      120
0x1459	0x022F      	SUBWF      _SWR, 0
L__sharp_ind371:
0x145A	0x1803      	BTFSC      STATUS, 0
0x145B	0x2C5D      	GOTO       L_sharp_ind205
0x145C	0x2C61      	GOTO       L_sharp_ind197
L_sharp_ind205:
;main.c,749 :: 		}
0x145D	0x2C5F      	GOTO       L_sharp_ind206
L_sharp_ind204:
;main.c,750 :: 		else break;
0x145E	0x2C61      	GOTO       L_sharp_ind197
L_sharp_ind206:
;main.c,739 :: 		for(count=min_range+1; count<=max_range; count++) {
0x145F	0x0ADD      	INCF       sharp_ind_count_L0, 1
;main.c,751 :: 		}
0x1460	0x2BF2      	GOTO       L_sharp_ind196
L_sharp_ind197:
;main.c,752 :: 		Relay_set(ind, cap, SW);
0x1461	0x0140      	MOVLB      0
0x1462	0x0854      	MOVF       _ind, 0
0x1463	0x0144      	MOVLB      4
0x1464	0x00A8      	MOVWF      FARG_Relay_set_L
0x1465	0x0140      	MOVLB      0
0x1466	0x0856      	MOVF       _cap, 0
0x1467	0x0144      	MOVLB      4
0x1468	0x00A9      	MOVWF      FARG_Relay_set_C
0x1469	0x0140      	MOVLB      0
0x146A	0x0855      	MOVF       _SW, 0
0x146B	0x0144      	MOVLB      4
0x146C	0x00AA      	MOVWF      FARG_Relay_set_I
0x146D	0x3188      	MOVLP      8
0x146E	0x2272      	CALL       _Relay_set
0x146F	0x3190      	MOVLP      16
;main.c,753 :: 		return;
;main.c,754 :: 		}
L_end_sharp_ind:
0x1470	0x0008      	RETURN
; end of _sharp_ind
_coarse_tune:
;main.c,662 :: 		void coarse_tune() {
;main.c,663 :: 		char step = 3;
0x1471	0x3003      	MOVLW      3
0x1472	0x0143      	MOVLB      3
0x1473	0x00E1      	MOVWF      coarse_tune_step_L0
;main.c,668 :: 		mem_cap = 0;
0x1474	0x01DD      	CLRF       coarse_tune_mem_cap_L0
;main.c,669 :: 		step_ind = step;
0x1475	0x0861      	MOVF       coarse_tune_step_L0, 0
0x1476	0x0140      	MOVLB      0
0x1477	0x00AF      	MOVWF      _step_ind
;main.c,670 :: 		mem_step_cap = 3;
0x1478	0x3003      	MOVLW      3
0x1479	0x0143      	MOVLB      3
0x147A	0x00DE      	MOVWF      coarse_tune_mem_step_cap_L0
;main.c,671 :: 		min_swr = SWR + SWR/20;
0x147B	0x3014      	MOVLW      20
0x147C	0x00F4      	MOVWF      R4
0x147D	0x3000      	MOVLW      0
0x147E	0x00F5      	MOVWF      R5
0x147F	0x082F      	MOVF       _SWR, 0
0x1480	0x00F0      	MOVWF      R0
0x1481	0x0830      	MOVF       _SWR+1, 0
0x1482	0x00F1      	MOVWF      R1
0x1483	0x3180      	MOVLP      0
0x1484	0x265B      	CALL       _Div_16x16_S
0x1485	0x3190      	MOVLP      16
0x1486	0x0870      	MOVF       R0, 0
0x1487	0x0143      	MOVLB      3
0x1488	0x072F      	ADDWF      _SWR, 0
0x1489	0x00DF      	MOVWF      coarse_tune_min_swr_L0
0x148A	0x0871      	MOVF       R1, 0
0x148B	0x3D30      	ADDWFC     _SWR+1, 0
0x148C	0x00E0      	MOVWF      coarse_tune_min_swr_L0+1
;main.c,672 :: 		for(count=step; count<=31;) {
0x148D	0x0861      	MOVF       coarse_tune_step_L0, 0
0x148E	0x00DC      	MOVWF      coarse_tune_count_L0
L_coarse_tune167:
0x148F	0x085C      	MOVF       coarse_tune_count_L0, 0
0x1490	0x3C1F      	SUBLW      31
0x1491	0x1C03      	BTFSS      STATUS, 0
0x1492	0x2CF1      	GOTO       L_coarse_tune168
;main.c,673 :: 		Relay_set(count, cap, SW);
0x1493	0x085C      	MOVF       coarse_tune_count_L0, 0
0x1494	0x0144      	MOVLB      4
0x1495	0x00A8      	MOVWF      FARG_Relay_set_L
0x1496	0x0140      	MOVLB      0
0x1497	0x0856      	MOVF       _cap, 0
0x1498	0x0144      	MOVLB      4
0x1499	0x00A9      	MOVWF      FARG_Relay_set_C
0x149A	0x0140      	MOVLB      0
0x149B	0x0855      	MOVF       _SW, 0
0x149C	0x0144      	MOVLB      4
0x149D	0x00AA      	MOVWF      FARG_Relay_set_I
0x149E	0x3188      	MOVLP      8
0x149F	0x2272      	CALL       _Relay_set
0x14A0	0x3190      	MOVLP      16
;main.c,674 :: 		coarse_cap();
0x14A1	0x231D      	CALL       _coarse_cap
;main.c,675 :: 		get_swr();
0x14A2	0x22B9      	CALL       _get_swr
;main.c,676 :: 		if(SWR < min_swr) {
0x14A3	0x3080      	MOVLW      128
0x14A4	0x0143      	MOVLB      3
0x14A5	0x0630      	XORWF      _SWR+1, 0
0x14A6	0x00F0      	MOVWF      R0
0x14A7	0x3080      	MOVLW      128
0x14A8	0x0660      	XORWF      coarse_tune_min_swr_L0+1, 0
0x14A9	0x0270      	SUBWF      R0, 0
0x14AA	0x1D03      	BTFSS      STATUS, 2
0x14AB	0x2CAE      	GOTO       L__coarse_tune356
0x14AC	0x085F      	MOVF       coarse_tune_min_swr_L0, 0
0x14AD	0x022F      	SUBWF      _SWR, 0
L__coarse_tune356:
0x14AE	0x1803      	BTFSC      STATUS, 0
0x14AF	0x2CEF      	GOTO       L_coarse_tune170
;main.c,677 :: 		min_swr = SWR + SWR/20;
0x14B0	0x3014      	MOVLW      20
0x14B1	0x00F4      	MOVWF      R4
0x14B2	0x3000      	MOVLW      0
0x14B3	0x00F5      	MOVWF      R5
0x14B4	0x082F      	MOVF       _SWR, 0
0x14B5	0x00F0      	MOVWF      R0
0x14B6	0x0830      	MOVF       _SWR+1, 0
0x14B7	0x00F1      	MOVWF      R1
0x14B8	0x3180      	MOVLP      0
0x14B9	0x265B      	CALL       _Div_16x16_S
0x14BA	0x3190      	MOVLP      16
0x14BB	0x0870      	MOVF       R0, 0
0x14BC	0x0143      	MOVLB      3
0x14BD	0x072F      	ADDWF      _SWR, 0
0x14BE	0x00DF      	MOVWF      coarse_tune_min_swr_L0
0x14BF	0x0871      	MOVF       R1, 0
0x14C0	0x3D30      	ADDWFC     _SWR+1, 0
0x14C1	0x00E0      	MOVWF      coarse_tune_min_swr_L0+1
;main.c,678 :: 		ind = count;
0x14C2	0x085C      	MOVF       coarse_tune_count_L0, 0
0x14C3	0x0140      	MOVLB      0
0x14C4	0x00D4      	MOVWF      _ind
;main.c,679 :: 		mem_cap = cap;
0x14C5	0x0856      	MOVF       _cap, 0
0x14C6	0x0143      	MOVLB      3
0x14C7	0x00DD      	MOVWF      coarse_tune_mem_cap_L0
;main.c,680 :: 		step_ind = step;
0x14C8	0x0861      	MOVF       coarse_tune_step_L0, 0
0x14C9	0x0140      	MOVLB      0
0x14CA	0x00AF      	MOVWF      _step_ind
;main.c,681 :: 		mem_step_cap = step_cap;
0x14CB	0x085C      	MOVF       _step_cap, 0
0x14CC	0x0143      	MOVLB      3
0x14CD	0x00DE      	MOVWF      coarse_tune_mem_step_cap_L0
;main.c,682 :: 		if(SWR<120) break;
0x14CE	0x3080      	MOVLW      128
0x14CF	0x0630      	XORWF      _SWR+1, 0
0x14D0	0x00F0      	MOVWF      R0
0x14D1	0x3080      	MOVLW      128
0x14D2	0x0270      	SUBWF      R0, 0
0x14D3	0x1D03      	BTFSS      STATUS, 2
0x14D4	0x2CD7      	GOTO       L__coarse_tune357
0x14D5	0x3078      	MOVLW      120
0x14D6	0x022F      	SUBWF      _SWR, 0
L__coarse_tune357:
0x14D7	0x1803      	BTFSC      STATUS, 0
0x14D8	0x2CDA      	GOTO       L_coarse_tune171
0x14D9	0x2CF1      	GOTO       L_coarse_tune168
L_coarse_tune171:
;main.c,683 :: 		count += step;
0x14DA	0x0861      	MOVF       coarse_tune_step_L0, 0
0x14DB	0x075C      	ADDWF      coarse_tune_count_L0, 0
0x14DC	0x00F1      	MOVWF      R1
0x14DD	0x0871      	MOVF       R1, 0
0x14DE	0x00DC      	MOVWF      coarse_tune_count_L0
;main.c,684 :: 		if(count==9) count = 8;
0x14DF	0x0871      	MOVF       R1, 0
0x14E0	0x3A09      	XORLW      9
0x14E1	0x1D03      	BTFSS      STATUS, 2
0x14E2	0x2CE6      	GOTO       L_coarse_tune172
0x14E3	0x3008      	MOVLW      8
0x14E4	0x00DC      	MOVWF      coarse_tune_count_L0
0x14E5	0x2CEE      	GOTO       L_coarse_tune173
L_coarse_tune172:
;main.c,685 :: 		else if(count==17) {count = 16; step = 4;}
0x14E6	0x085C      	MOVF       coarse_tune_count_L0, 0
0x14E7	0x3A11      	XORLW      17
0x14E8	0x1D03      	BTFSS      STATUS, 2
0x14E9	0x2CEE      	GOTO       L_coarse_tune174
0x14EA	0x3010      	MOVLW      16
0x14EB	0x00DC      	MOVWF      coarse_tune_count_L0
0x14EC	0x3004      	MOVLW      4
0x14ED	0x00E1      	MOVWF      coarse_tune_step_L0
L_coarse_tune174:
L_coarse_tune173:
;main.c,686 :: 		}
0x14EE	0x2CF0      	GOTO       L_coarse_tune175
L_coarse_tune170:
;main.c,687 :: 		else break;
0x14EF	0x2CF1      	GOTO       L_coarse_tune168
L_coarse_tune175:
;main.c,688 :: 		}
0x14F0	0x2C8F      	GOTO       L_coarse_tune167
L_coarse_tune168:
;main.c,689 :: 		cap = mem_cap;
0x14F1	0x085D      	MOVF       coarse_tune_mem_cap_L0, 0
0x14F2	0x0140      	MOVLB      0
0x14F3	0x00D6      	MOVWF      _cap
;main.c,690 :: 		Relay_set(ind, cap, SW);
0x14F4	0x0854      	MOVF       _ind, 0
0x14F5	0x0144      	MOVLB      4
0x14F6	0x00A8      	MOVWF      FARG_Relay_set_L
0x14F7	0x0143      	MOVLB      3
0x14F8	0x085D      	MOVF       coarse_tune_mem_cap_L0, 0
0x14F9	0x0144      	MOVLB      4
0x14FA	0x00A9      	MOVWF      FARG_Relay_set_C
0x14FB	0x0140      	MOVLB      0
0x14FC	0x0855      	MOVF       _SW, 0
0x14FD	0x0144      	MOVLB      4
0x14FE	0x00AA      	MOVWF      FARG_Relay_set_I
0x14FF	0x3188      	MOVLP      8
0x1500	0x2272      	CALL       _Relay_set
0x1501	0x3190      	MOVLP      16
;main.c,691 :: 		step_cap = mem_step_cap;
0x1502	0x0143      	MOVLB      3
0x1503	0x085E      	MOVF       coarse_tune_mem_step_cap_L0, 0
0x1504	0x0140      	MOVLB      0
0x1505	0x00DC      	MOVWF      _step_cap
;main.c,692 :: 		Delay_ms(10);
0x1506	0x3068      	MOVLW      104
0x1507	0x00FC      	MOVWF      R12
0x1508	0x30E4      	MOVLW      228
0x1509	0x00FD      	MOVWF      R13
L_coarse_tune176:
0x150A	0x0BFD      	DECFSZ     R13, 1
0x150B	0x2D0A      	GOTO       L_coarse_tune176
0x150C	0x0BFC      	DECFSZ     R12, 1
0x150D	0x2D0A      	GOTO       L_coarse_tune176
0x150E	0x0000      	NOP
;main.c,693 :: 		return;
;main.c,694 :: 		}
L_end_coarse_tune:
0x150F	0x0008      	RETURN
; end of _coarse_tune
_sharp_cap:
;main.c,696 :: 		void sharp_cap() {
;main.c,699 :: 		range = step_cap;
0x1510	0x0140      	MOVLB      0
0x1511	0x085C      	MOVF       _step_cap, 0
0x1512	0x0143      	MOVLB      3
0x1513	0x00DC      	MOVWF      sharp_cap_range_L0
;main.c,701 :: 		max_range = cap + range;
0x1514	0x0140      	MOVLB      0
0x1515	0x085C      	MOVF       _step_cap, 0
0x1516	0x0756      	ADDWF      _cap, 0
0x1517	0x00F1      	MOVWF      R1
0x1518	0x0871      	MOVF       R1, 0
0x1519	0x0143      	MOVLB      3
0x151A	0x00DE      	MOVWF      sharp_cap_max_range_L0
;main.c,702 :: 		if(max_range>31) max_range = 31;
0x151B	0x0871      	MOVF       R1, 0
0x151C	0x3C1F      	SUBLW      31
0x151D	0x1803      	BTFSC      STATUS, 0
0x151E	0x2D21      	GOTO       L_sharp_cap177
0x151F	0x301F      	MOVLW      31
0x1520	0x00DE      	MOVWF      sharp_cap_max_range_L0
L_sharp_cap177:
;main.c,703 :: 		if(cap>range) min_range = cap - range; else min_range = 0;
0x1521	0x0140      	MOVLB      0
0x1522	0x0856      	MOVF       _cap, 0
0x1523	0x0143      	MOVLB      3
0x1524	0x025C      	SUBWF      sharp_cap_range_L0, 0
0x1525	0x1803      	BTFSC      STATUS, 0
0x1526	0x2D2D      	GOTO       L_sharp_cap178
0x1527	0x085C      	MOVF       sharp_cap_range_L0, 0
0x1528	0x0140      	MOVLB      0
0x1529	0x0256      	SUBWF      _cap, 0
0x152A	0x0143      	MOVLB      3
0x152B	0x00DF      	MOVWF      sharp_cap_min_range_L0
0x152C	0x2D2E      	GOTO       L_sharp_cap179
L_sharp_cap178:
0x152D	0x01DF      	CLRF       sharp_cap_min_range_L0
L_sharp_cap179:
;main.c,704 :: 		cap = min_range;
0x152E	0x085F      	MOVF       sharp_cap_min_range_L0, 0
0x152F	0x0140      	MOVLB      0
0x1530	0x00D6      	MOVWF      _cap
;main.c,705 :: 		Relay_set(ind, cap, SW);
0x1531	0x0854      	MOVF       _ind, 0
0x1532	0x0144      	MOVLB      4
0x1533	0x00A8      	MOVWF      FARG_Relay_set_L
0x1534	0x0143      	MOVLB      3
0x1535	0x085F      	MOVF       sharp_cap_min_range_L0, 0
0x1536	0x0144      	MOVLB      4
0x1537	0x00A9      	MOVWF      FARG_Relay_set_C
0x1538	0x0140      	MOVLB      0
0x1539	0x0855      	MOVF       _SW, 0
0x153A	0x0144      	MOVLB      4
0x153B	0x00AA      	MOVWF      FARG_Relay_set_I
0x153C	0x3188      	MOVLP      8
0x153D	0x2272      	CALL       _Relay_set
0x153E	0x3190      	MOVLP      16
;main.c,706 :: 		get_swr();
0x153F	0x22B9      	CALL       _get_swr
;main.c,707 :: 		if(SWR==0) return;
0x1540	0x3000      	MOVLW      0
0x1541	0x0143      	MOVLB      3
0x1542	0x0630      	XORWF      _SWR+1, 0
0x1543	0x1D03      	BTFSS      STATUS, 2
0x1544	0x2D47      	GOTO       L__sharp_cap359
0x1545	0x3000      	MOVLW      0
0x1546	0x062F      	XORWF      _SWR, 0
L__sharp_cap359:
0x1547	0x1D03      	BTFSS      STATUS, 2
0x1548	0x2D4A      	GOTO       L_sharp_cap180
0x1549	0x2DCF      	GOTO       L_end_sharp_cap
L_sharp_cap180:
;main.c,708 :: 		min_SWR = SWR;
0x154A	0x082F      	MOVF       _SWR, 0
0x154B	0x00E0      	MOVWF      sharp_cap_min_swr_L0
0x154C	0x0830      	MOVF       _SWR+1, 0
0x154D	0x00E1      	MOVWF      sharp_cap_min_swr_L0+1
;main.c,709 :: 		for(count=min_range+1; count<=max_range; count++)  {
0x154E	0x0A5F      	INCF       sharp_cap_min_range_L0, 0
0x154F	0x00DD      	MOVWF      sharp_cap_count_L0
L_sharp_cap181:
0x1550	0x085D      	MOVF       sharp_cap_count_L0, 0
0x1551	0x025E      	SUBWF      sharp_cap_max_range_L0, 0
0x1552	0x1C03      	BTFSS      STATUS, 0
0x1553	0x2DC0      	GOTO       L_sharp_cap182
;main.c,710 :: 		Relay_set(ind, count, SW);
0x1554	0x0140      	MOVLB      0
0x1555	0x0854      	MOVF       _ind, 0
0x1556	0x0144      	MOVLB      4
0x1557	0x00A8      	MOVWF      FARG_Relay_set_L
0x1558	0x0143      	MOVLB      3
0x1559	0x085D      	MOVF       sharp_cap_count_L0, 0
0x155A	0x0144      	MOVLB      4
0x155B	0x00A9      	MOVWF      FARG_Relay_set_C
0x155C	0x0140      	MOVLB      0
0x155D	0x0855      	MOVF       _SW, 0
0x155E	0x0144      	MOVLB      4
0x155F	0x00AA      	MOVWF      FARG_Relay_set_I
0x1560	0x3188      	MOVLP      8
0x1561	0x2272      	CALL       _Relay_set
0x1562	0x3190      	MOVLP      16
;main.c,711 :: 		get_swr();
0x1563	0x22B9      	CALL       _get_swr
;main.c,712 :: 		if(SWR==0) return;
0x1564	0x3000      	MOVLW      0
0x1565	0x0143      	MOVLB      3
0x1566	0x0630      	XORWF      _SWR+1, 0
0x1567	0x1D03      	BTFSS      STATUS, 2
0x1568	0x2D6B      	GOTO       L__sharp_cap360
0x1569	0x3000      	MOVLW      0
0x156A	0x062F      	XORWF      _SWR, 0
L__sharp_cap360:
0x156B	0x1D03      	BTFSS      STATUS, 2
0x156C	0x2D6E      	GOTO       L_sharp_cap184
0x156D	0x2DCF      	GOTO       L_end_sharp_cap
L_sharp_cap184:
;main.c,713 :: 		if(SWR>=min_SWR) { Delay_ms(10); get_swr(); }
0x156E	0x3080      	MOVLW      128
0x156F	0x0630      	XORWF      _SWR+1, 0
0x1570	0x00F0      	MOVWF      R0
0x1571	0x3080      	MOVLW      128
0x1572	0x0661      	XORWF      sharp_cap_min_swr_L0+1, 0
0x1573	0x0270      	SUBWF      R0, 0
0x1574	0x1D03      	BTFSS      STATUS, 2
0x1575	0x2D78      	GOTO       L__sharp_cap361
0x1576	0x0860      	MOVF       sharp_cap_min_swr_L0, 0
0x1577	0x022F      	SUBWF      _SWR, 0
L__sharp_cap361:
0x1578	0x1C03      	BTFSS      STATUS, 0
0x1579	0x2D84      	GOTO       L_sharp_cap185
0x157A	0x3068      	MOVLW      104
0x157B	0x00FC      	MOVWF      R12
0x157C	0x30E4      	MOVLW      228
0x157D	0x00FD      	MOVWF      R13
L_sharp_cap186:
0x157E	0x0BFD      	DECFSZ     R13, 1
0x157F	0x2D7E      	GOTO       L_sharp_cap186
0x1580	0x0BFC      	DECFSZ     R12, 1
0x1581	0x2D7E      	GOTO       L_sharp_cap186
0x1582	0x0000      	NOP
0x1583	0x22B9      	CALL       _get_swr
L_sharp_cap185:
;main.c,714 :: 		if(SWR>=min_SWR) { Delay_ms(10); get_swr(); }
0x1584	0x3080      	MOVLW      128
0x1585	0x0143      	MOVLB      3
0x1586	0x0630      	XORWF      _SWR+1, 0
0x1587	0x00F0      	MOVWF      R0
0x1588	0x3080      	MOVLW      128
0x1589	0x0661      	XORWF      sharp_cap_min_swr_L0+1, 0
0x158A	0x0270      	SUBWF      R0, 0
0x158B	0x1D03      	BTFSS      STATUS, 2
0x158C	0x2D8F      	GOTO       L__sharp_cap362
0x158D	0x0860      	MOVF       sharp_cap_min_swr_L0, 0
0x158E	0x022F      	SUBWF      _SWR, 0
L__sharp_cap362:
0x158F	0x1C03      	BTFSS      STATUS, 0
0x1590	0x2D9B      	GOTO       L_sharp_cap187
0x1591	0x3068      	MOVLW      104
0x1592	0x00FC      	MOVWF      R12
0x1593	0x30E4      	MOVLW      228
0x1594	0x00FD      	MOVWF      R13
L_sharp_cap188:
0x1595	0x0BFD      	DECFSZ     R13, 1
0x1596	0x2D95      	GOTO       L_sharp_cap188
0x1597	0x0BFC      	DECFSZ     R12, 1
0x1598	0x2D95      	GOTO       L_sharp_cap188
0x1599	0x0000      	NOP
0x159A	0x22B9      	CALL       _get_swr
L_sharp_cap187:
;main.c,715 :: 		if(SWR < min_SWR) {
0x159B	0x3080      	MOVLW      128
0x159C	0x0143      	MOVLB      3
0x159D	0x0630      	XORWF      _SWR+1, 0
0x159E	0x00F0      	MOVWF      R0
0x159F	0x3080      	MOVLW      128
0x15A0	0x0661      	XORWF      sharp_cap_min_swr_L0+1, 0
0x15A1	0x0270      	SUBWF      R0, 0
0x15A2	0x1D03      	BTFSS      STATUS, 2
0x15A3	0x2DA6      	GOTO       L__sharp_cap363
0x15A4	0x0860      	MOVF       sharp_cap_min_swr_L0, 0
0x15A5	0x022F      	SUBWF      _SWR, 0
L__sharp_cap363:
0x15A6	0x1803      	BTFSC      STATUS, 0
0x15A7	0x2DBD      	GOTO       L_sharp_cap189
;main.c,716 :: 		min_SWR = SWR;
0x15A8	0x082F      	MOVF       _SWR, 0
0x15A9	0x00E0      	MOVWF      sharp_cap_min_swr_L0
0x15AA	0x0830      	MOVF       _SWR+1, 0
0x15AB	0x00E1      	MOVWF      sharp_cap_min_swr_L0+1
;main.c,717 :: 		cap = count;
0x15AC	0x085D      	MOVF       sharp_cap_count_L0, 0
0x15AD	0x0140      	MOVLB      0
0x15AE	0x00D6      	MOVWF      _cap
;main.c,718 :: 		if(SWR<120) break;
0x15AF	0x3080      	MOVLW      128
0x15B0	0x0143      	MOVLB      3
0x15B1	0x0630      	XORWF      _SWR+1, 0
0x15B2	0x00F0      	MOVWF      R0
0x15B3	0x3080      	MOVLW      128
0x15B4	0x0270      	SUBWF      R0, 0
0x15B5	0x1D03      	BTFSS      STATUS, 2
0x15B6	0x2DB9      	GOTO       L__sharp_cap364
0x15B7	0x3078      	MOVLW      120
0x15B8	0x022F      	SUBWF      _SWR, 0
L__sharp_cap364:
0x15B9	0x1803      	BTFSC      STATUS, 0
0x15BA	0x2DBC      	GOTO       L_sharp_cap190
0x15BB	0x2DC0      	GOTO       L_sharp_cap182
L_sharp_cap190:
;main.c,719 :: 		}
0x15BC	0x2DBE      	GOTO       L_sharp_cap191
L_sharp_cap189:
;main.c,720 :: 		else break;
0x15BD	0x2DC0      	GOTO       L_sharp_cap182
L_sharp_cap191:
;main.c,709 :: 		for(count=min_range+1; count<=max_range; count++)  {
0x15BE	0x0ADD      	INCF       sharp_cap_count_L0, 1
;main.c,721 :: 		}
0x15BF	0x2D50      	GOTO       L_sharp_cap181
L_sharp_cap182:
;main.c,722 :: 		Relay_set(ind, cap, SW);
0x15C0	0x0140      	MOVLB      0
0x15C1	0x0854      	MOVF       _ind, 0
0x15C2	0x0144      	MOVLB      4
0x15C3	0x00A8      	MOVWF      FARG_Relay_set_L
0x15C4	0x0140      	MOVLB      0
0x15C5	0x0856      	MOVF       _cap, 0
0x15C6	0x0144      	MOVLB      4
0x15C7	0x00A9      	MOVWF      FARG_Relay_set_C
0x15C8	0x0140      	MOVLB      0
0x15C9	0x0855      	MOVF       _SW, 0
0x15CA	0x0144      	MOVLB      4
0x15CB	0x00AA      	MOVWF      FARG_Relay_set_I
0x15CC	0x3188      	MOVLP      8
0x15CD	0x2272      	CALL       _Relay_set
0x15CE	0x3190      	MOVLP      16
;main.c,723 :: 		return;
;main.c,724 :: 		}
L_end_sharp_cap:
0x15CF	0x0008      	RETURN
; end of _sharp_cap
_draw_swr:
;main.c,240 :: 		void draw_swr(int s){
;main.c,241 :: 		if(s==0)
0x15D0	0x3000      	MOVLW      0
0x15D1	0x0143      	MOVLB      3
0x15D2	0x0657      	XORWF      FARG_draw_swr_s+1, 0
0x15D3	0x1D03      	BTFSS      STATUS, 2
0x15D4	0x2DD7      	GOTO       L__draw_swr267
0x15D5	0x3000      	MOVLW      0
0x15D6	0x0656      	XORWF      FARG_draw_swr_s, 0
L__draw_swr267:
0x15D7	0x1D03      	BTFSS      STATUS, 2
0x15D8	0x2DE8      	GOTO       L_draw_swr66
;main.c,242 :: 		oled_wr_str(2, 60, "0.00", 4);
0x15D9	0x3002      	MOVLW      2
0x15DA	0x0144      	MOVLB      4
0x15DB	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x15DC	0x303C      	MOVLW      60
0x15DD	0x00B0      	MOVWF      FARG_oled_wr_str_col
0x15DE	0x3057      	MOVLW      ?lstr11_main
0x15DF	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x15E0	0x3000      	MOVLW      hi_addr(?lstr11_main)
0x15E1	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x15E2	0x3004      	MOVLW      4
0x15E3	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x15E4	0x3180      	MOVLP      0
0x15E5	0x232C      	CALL       _oled_wr_str
0x15E6	0x3190      	MOVLP      16
0x15E7	0x2E0E      	GOTO       L_draw_swr67
L_draw_swr66:
;main.c,244 :: 		IntToStr(s, txt_2);
0x15E8	0x0143      	MOVLB      3
0x15E9	0x0856      	MOVF       FARG_draw_swr_s, 0
0x15EA	0x0144      	MOVLB      4
0x15EB	0x00A0      	MOVWF      FARG_IntToStr_input
0x15EC	0x0143      	MOVLB      3
0x15ED	0x0857      	MOVF       FARG_draw_swr_s+1, 0
0x15EE	0x0144      	MOVLB      4
0x15EF	0x00A1      	MOVWF      FARG_IntToStr_input+1
0x15F0	0x30A7      	MOVLW      _txt_2
0x15F1	0x00A2      	MOVWF      FARG_IntToStr_output
0x15F2	0x3001      	MOVLW      hi_addr(_txt_2)
0x15F3	0x00A3      	MOVWF      FARG_IntToStr_output+1
0x15F4	0x3188      	MOVLP      8
0x15F5	0x2632      	CALL       _IntToStr
0x15F6	0x3190      	MOVLP      16
;main.c,245 :: 		txt[0] = txt_2[3];
0x15F7	0x0143      	MOVLB      3
0x15F8	0x082A      	MOVF       _txt_2+3, 0
0x15F9	0x00B1      	MOVWF      _txt
;main.c,246 :: 		txt[1] = '.';
0x15FA	0x302E      	MOVLW      46
0x15FB	0x00B2      	MOVWF      _txt+1
;main.c,247 :: 		txt[2] = txt_2[4];
0x15FC	0x082B      	MOVF       _txt_2+4, 0
0x15FD	0x00B3      	MOVWF      _txt+2
;main.c,248 :: 		txt[3] = txt_2[5];
0x15FE	0x082C      	MOVF       _txt_2+5, 0
0x15FF	0x00B4      	MOVWF      _txt+3
;main.c,250 :: 		oled_wr_str(2, 60, txt, 4);
0x1600	0x3002      	MOVLW      2
0x1601	0x0144      	MOVLB      4
0x1602	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x1603	0x303C      	MOVLW      60
0x1604	0x00B0      	MOVWF      FARG_oled_wr_str_col
0x1605	0x30B1      	MOVLW      _txt
0x1606	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x1607	0x3001      	MOVLW      hi_addr(_txt)
0x1608	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x1609	0x3004      	MOVLW      4
0x160A	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x160B	0x3180      	MOVLP      0
0x160C	0x232C      	CALL       _oled_wr_str
0x160D	0x3190      	MOVLP      16
;main.c,251 :: 		}
L_draw_swr67:
;main.c,252 :: 		return;
;main.c,253 :: 		}
L_end_draw_swr:
0x160E	0x0008      	RETURN
; end of _draw_swr
_tune:
;main.c,757 :: 		void tune() {
;main.c,759 :: 		asm CLRWDT;
0x160F	0x0064      	CLRWDT
;main.c,760 :: 		Key_out = 0;
0x1610	0x0140      	MOVLB      0
0x1611	0x1119      	BCF        LATD2_bit, BitPos(LATD2_bit+0)
;main.c,761 :: 		Delay_ms(100);
0x1612	0x3005      	MOVLW      5
0x1613	0x00FB      	MOVWF      R11
0x1614	0x300F      	MOVLW      15
0x1615	0x00FC      	MOVWF      R12
0x1616	0x30F1      	MOVLW      241
0x1617	0x00FD      	MOVWF      R13
L_tune207:
0x1618	0x0BFD      	DECFSZ     R13, 1
0x1619	0x2E18      	GOTO       L_tune207
0x161A	0x0BFC      	DECFSZ     R12, 1
0x161B	0x2E18      	GOTO       L_tune207
0x161C	0x0BFB      	DECFSZ     R11, 1
0x161D	0x2E18      	GOTO       L_tune207
;main.c,762 :: 		get_swr(); if(SWR<110) { Key_out = 1; return; }
0x161E	0x22B9      	CALL       _get_swr
0x161F	0x3080      	MOVLW      128
0x1620	0x0143      	MOVLB      3
0x1621	0x0630      	XORWF      _SWR+1, 0
0x1622	0x00F0      	MOVWF      R0
0x1623	0x3080      	MOVLW      128
0x1624	0x0270      	SUBWF      R0, 0
0x1625	0x1D03      	BTFSS      STATUS, 2
0x1626	0x2E29      	GOTO       L__tune373
0x1627	0x306E      	MOVLW      110
0x1628	0x022F      	SUBWF      _SWR, 0
L__tune373:
0x1629	0x1803      	BTFSC      STATUS, 0
0x162A	0x2E2E      	GOTO       L_tune208
0x162B	0x0140      	MOVLB      0
0x162C	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
0x162D	0x2FCD      	GOTO       L_end_tune
L_tune208:
;main.c,763 :: 		atu_reset();
0x162E	0x3188      	MOVLP      8
0x162F	0x2753      	CALL       _atu_reset
0x1630	0x3190      	MOVLP      16
;main.c,764 :: 		Delay_ms(50);
0x1631	0x3003      	MOVLW      3
0x1632	0x00FB      	MOVWF      R11
0x1633	0x3008      	MOVLW      8
0x1634	0x00FC      	MOVWF      R12
0x1635	0x3077      	MOVLW      119
0x1636	0x00FD      	MOVWF      R13
L_tune209:
0x1637	0x0BFD      	DECFSZ     R13, 1
0x1638	0x2E37      	GOTO       L_tune209
0x1639	0x0BFC      	DECFSZ     R12, 1
0x163A	0x2E37      	GOTO       L_tune209
0x163B	0x0BFB      	DECFSZ     R11, 1
0x163C	0x2E37      	GOTO       L_tune209
;main.c,765 :: 		get_swr(); if(SWR<110) { Key_out = 1; return; }
0x163D	0x22B9      	CALL       _get_swr
0x163E	0x3080      	MOVLW      128
0x163F	0x0143      	MOVLB      3
0x1640	0x0630      	XORWF      _SWR+1, 0
0x1641	0x00F0      	MOVWF      R0
0x1642	0x3080      	MOVLW      128
0x1643	0x0270      	SUBWF      R0, 0
0x1644	0x1D03      	BTFSS      STATUS, 2
0x1645	0x2E48      	GOTO       L__tune374
0x1646	0x306E      	MOVLW      110
0x1647	0x022F      	SUBWF      _SWR, 0
L__tune374:
0x1648	0x1803      	BTFSC      STATUS, 0
0x1649	0x2E4D      	GOTO       L_tune210
0x164A	0x0140      	MOVLB      0
0x164B	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
0x164C	0x2FCD      	GOTO       L_end_tune
L_tune210:
;main.c,767 :: 		swr_mem = SWR;
0x164D	0x0143      	MOVLB      3
0x164E	0x082F      	MOVF       _SWR, 0
0x164F	0x00D6      	MOVWF      tune_swr_mem_L0
0x1650	0x0830      	MOVF       _SWR+1, 0
0x1651	0x00D7      	MOVWF      tune_swr_mem_L0+1
;main.c,768 :: 		coarse_tune(); if(SWR==0) {atu_reset(); Key_out = 1; return;}
0x1652	0x2471      	CALL       _coarse_tune
0x1653	0x3000      	MOVLW      0
0x1654	0x0143      	MOVLB      3
0x1655	0x0630      	XORWF      _SWR+1, 0
0x1656	0x1D03      	BTFSS      STATUS, 2
0x1657	0x2E5A      	GOTO       L__tune375
0x1658	0x3000      	MOVLW      0
0x1659	0x062F      	XORWF      _SWR, 0
L__tune375:
0x165A	0x1D03      	BTFSS      STATUS, 2
0x165B	0x2E61      	GOTO       L_tune211
0x165C	0x3188      	MOVLP      8
0x165D	0x2753      	CALL       _atu_reset
0x165E	0x3190      	MOVLP      16
0x165F	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
0x1660	0x2FCD      	GOTO       L_end_tune
L_tune211:
;main.c,769 :: 		get_swr(); if(SWR<120) { Key_out = 1;  return; }
0x1661	0x22B9      	CALL       _get_swr
0x1662	0x3080      	MOVLW      128
0x1663	0x0143      	MOVLB      3
0x1664	0x0630      	XORWF      _SWR+1, 0
0x1665	0x00F0      	MOVWF      R0
0x1666	0x3080      	MOVLW      128
0x1667	0x0270      	SUBWF      R0, 0
0x1668	0x1D03      	BTFSS      STATUS, 2
0x1669	0x2E6C      	GOTO       L__tune376
0x166A	0x3078      	MOVLW      120
0x166B	0x022F      	SUBWF      _SWR, 0
L__tune376:
0x166C	0x1803      	BTFSC      STATUS, 0
0x166D	0x2E71      	GOTO       L_tune212
0x166E	0x0140      	MOVLB      0
0x166F	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
0x1670	0x2FCD      	GOTO       L_end_tune
L_tune212:
;main.c,770 :: 		sharp_ind();  if(SWR==0) {atu_reset(); Key_out = 1; return;}
0x1671	0x23B1      	CALL       _sharp_ind
0x1672	0x3000      	MOVLW      0
0x1673	0x0143      	MOVLB      3
0x1674	0x0630      	XORWF      _SWR+1, 0
0x1675	0x1D03      	BTFSS      STATUS, 2
0x1676	0x2E79      	GOTO       L__tune377
0x1677	0x3000      	MOVLW      0
0x1678	0x062F      	XORWF      _SWR, 0
L__tune377:
0x1679	0x1D03      	BTFSS      STATUS, 2
0x167A	0x2E80      	GOTO       L_tune213
0x167B	0x3188      	MOVLP      8
0x167C	0x2753      	CALL       _atu_reset
0x167D	0x3190      	MOVLP      16
0x167E	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
0x167F	0x2FCD      	GOTO       L_end_tune
L_tune213:
;main.c,771 :: 		get_swr(); if(SWR<120) { Key_out = 1; return; }
0x1680	0x22B9      	CALL       _get_swr
0x1681	0x3080      	MOVLW      128
0x1682	0x0143      	MOVLB      3
0x1683	0x0630      	XORWF      _SWR+1, 0
0x1684	0x00F0      	MOVWF      R0
0x1685	0x3080      	MOVLW      128
0x1686	0x0270      	SUBWF      R0, 0
0x1687	0x1D03      	BTFSS      STATUS, 2
0x1688	0x2E8B      	GOTO       L__tune378
0x1689	0x3078      	MOVLW      120
0x168A	0x022F      	SUBWF      _SWR, 0
L__tune378:
0x168B	0x1803      	BTFSC      STATUS, 0
0x168C	0x2E90      	GOTO       L_tune214
0x168D	0x0140      	MOVLB      0
0x168E	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
0x168F	0x2FCD      	GOTO       L_end_tune
L_tune214:
;main.c,772 :: 		sharp_cap(); if(SWR==0) {atu_reset(); Key_out = 1; return;}
0x1690	0x2510      	CALL       _sharp_cap
0x1691	0x3000      	MOVLW      0
0x1692	0x0143      	MOVLB      3
0x1693	0x0630      	XORWF      _SWR+1, 0
0x1694	0x1D03      	BTFSS      STATUS, 2
0x1695	0x2E98      	GOTO       L__tune379
0x1696	0x3000      	MOVLW      0
0x1697	0x062F      	XORWF      _SWR, 0
L__tune379:
0x1698	0x1D03      	BTFSS      STATUS, 2
0x1699	0x2E9F      	GOTO       L_tune215
0x169A	0x3188      	MOVLP      8
0x169B	0x2753      	CALL       _atu_reset
0x169C	0x3190      	MOVLP      16
0x169D	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
0x169E	0x2FCD      	GOTO       L_end_tune
L_tune215:
;main.c,773 :: 		get_swr(); if(SWR<120) { Key_out = 1; return; }
0x169F	0x22B9      	CALL       _get_swr
0x16A0	0x3080      	MOVLW      128
0x16A1	0x0143      	MOVLB      3
0x16A2	0x0630      	XORWF      _SWR+1, 0
0x16A3	0x00F0      	MOVWF      R0
0x16A4	0x3080      	MOVLW      128
0x16A5	0x0270      	SUBWF      R0, 0
0x16A6	0x1D03      	BTFSS      STATUS, 2
0x16A7	0x2EAA      	GOTO       L__tune380
0x16A8	0x3078      	MOVLW      120
0x16A9	0x022F      	SUBWF      _SWR, 0
L__tune380:
0x16AA	0x1803      	BTFSC      STATUS, 0
0x16AB	0x2EAF      	GOTO       L_tune216
0x16AC	0x0140      	MOVLB      0
0x16AD	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
0x16AE	0x2FCD      	GOTO       L_end_tune
L_tune216:
;main.c,775 :: 		if(SWR<200 & SWR<swr_mem & (swr_mem-SWR)>100) { Key_out = 1; return; }
0x16AF	0x3080      	MOVLW      128
0x16B0	0x0143      	MOVLB      3
0x16B1	0x0630      	XORWF      _SWR+1, 0
0x16B2	0x00F1      	MOVWF      R1
0x16B3	0x3080      	MOVLW      128
0x16B4	0x0271      	SUBWF      R1, 0
0x16B5	0x1D03      	BTFSS      STATUS, 2
0x16B6	0x2EB9      	GOTO       L__tune381
0x16B7	0x30C8      	MOVLW      200
0x16B8	0x022F      	SUBWF      _SWR, 0
L__tune381:
0x16B9	0x3001      	MOVLW      1
0x16BA	0x1803      	BTFSC      STATUS, 0
0x16BB	0x3000      	MOVLW      0
0x16BC	0x00F1      	MOVWF      R1
0x16BD	0x3080      	MOVLW      128
0x16BE	0x0630      	XORWF      _SWR+1, 0
0x16BF	0x00F0      	MOVWF      R0
0x16C0	0x3080      	MOVLW      128
0x16C1	0x0657      	XORWF      tune_swr_mem_L0+1, 0
0x16C2	0x0270      	SUBWF      R0, 0
0x16C3	0x1D03      	BTFSS      STATUS, 2
0x16C4	0x2EC7      	GOTO       L__tune382
0x16C5	0x0856      	MOVF       tune_swr_mem_L0, 0
0x16C6	0x022F      	SUBWF      _SWR, 0
L__tune382:
0x16C7	0x3001      	MOVLW      1
0x16C8	0x1803      	BTFSC      STATUS, 0
0x16C9	0x3000      	MOVLW      0
0x16CA	0x00F0      	MOVWF      R0
0x16CB	0x0870      	MOVF       R0, 0
0x16CC	0x0571      	ANDWF      R1, 0
0x16CD	0x00F3      	MOVWF      R3
0x16CE	0x082F      	MOVF       _SWR, 0
0x16CF	0x0256      	SUBWF      tune_swr_mem_L0, 0
0x16D0	0x00F1      	MOVWF      R1
0x16D1	0x0830      	MOVF       _SWR+1, 0
0x16D2	0x3B57      	SUBWFB     tune_swr_mem_L0+1, 0
0x16D3	0x00F2      	MOVWF      R2
0x16D4	0x3080      	MOVLW      128
0x16D5	0x00F0      	MOVWF      R0
0x16D6	0x3080      	MOVLW      128
0x16D7	0x0672      	XORWF      R2, 0
0x16D8	0x0270      	SUBWF      R0, 0
0x16D9	0x1D03      	BTFSS      STATUS, 2
0x16DA	0x2EDD      	GOTO       L__tune383
0x16DB	0x0871      	MOVF       R1, 0
0x16DC	0x3C64      	SUBLW      100
L__tune383:
0x16DD	0x3001      	MOVLW      1
0x16DE	0x1803      	BTFSC      STATUS, 0
0x16DF	0x3000      	MOVLW      0
0x16E0	0x00F0      	MOVWF      R0
0x16E1	0x0873      	MOVF       R3, 0
0x16E2	0x05F0      	ANDWF      R0, 1
0x16E3	0x1903      	BTFSC      STATUS, 2
0x16E4	0x2EE8      	GOTO       L_tune217
0x16E5	0x0140      	MOVLB      0
0x16E6	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
0x16E7	0x2FCD      	GOTO       L_end_tune
L_tune217:
;main.c,776 :: 		swr_mem = SWR;
0x16E8	0x0143      	MOVLB      3
0x16E9	0x082F      	MOVF       _SWR, 0
0x16EA	0x00D6      	MOVWF      tune_swr_mem_L0
0x16EB	0x0830      	MOVF       _SWR+1, 0
0x16EC	0x00D7      	MOVWF      tune_swr_mem_L0+1
;main.c,777 :: 		ind_mem = ind;
0x16ED	0x0140      	MOVLB      0
0x16EE	0x0854      	MOVF       _ind, 0
0x16EF	0x0143      	MOVLB      3
0x16F0	0x00D8      	MOVWF      tune_ind_mem_L0
0x16F1	0x01D9      	CLRF       tune_ind_mem_L0+1
;main.c,778 :: 		cap_mem = cap;
0x16F2	0x0140      	MOVLB      0
0x16F3	0x0856      	MOVF       _cap, 0
0x16F4	0x0143      	MOVLB      3
0x16F5	0x00DA      	MOVWF      tune_cap_mem_L0
0x16F6	0x01DB      	CLRF       tune_cap_mem_L0+1
;main.c,780 :: 		if(SW==1) SW = 0; else SW = 1;
0x16F7	0x0140      	MOVLB      0
0x16F8	0x0855      	MOVF       _SW, 0
0x16F9	0x3A01      	XORLW      1
0x16FA	0x1D03      	BTFSS      STATUS, 2
0x16FB	0x2EFE      	GOTO       L_tune218
0x16FC	0x01D5      	CLRF       _SW
0x16FD	0x2F00      	GOTO       L_tune219
L_tune218:
0x16FE	0x3001      	MOVLW      1
0x16FF	0x00D5      	MOVWF      _SW
L_tune219:
;main.c,781 :: 		atu_reset();
0x1700	0x3188      	MOVLP      8
0x1701	0x2753      	CALL       _atu_reset
0x1702	0x3190      	MOVLP      16
;main.c,782 :: 		Relay_set(ind, cap, SW);
0x1703	0x0854      	MOVF       _ind, 0
0x1704	0x0144      	MOVLB      4
0x1705	0x00A8      	MOVWF      FARG_Relay_set_L
0x1706	0x0140      	MOVLB      0
0x1707	0x0856      	MOVF       _cap, 0
0x1708	0x0144      	MOVLB      4
0x1709	0x00A9      	MOVWF      FARG_Relay_set_C
0x170A	0x0140      	MOVLB      0
0x170B	0x0855      	MOVF       _SW, 0
0x170C	0x0144      	MOVLB      4
0x170D	0x00AA      	MOVWF      FARG_Relay_set_I
0x170E	0x3188      	MOVLP      8
0x170F	0x2272      	CALL       _Relay_set
0x1710	0x3190      	MOVLP      16
;main.c,783 :: 		Delay_ms(50);
0x1711	0x3003      	MOVLW      3
0x1712	0x00FB      	MOVWF      R11
0x1713	0x3008      	MOVLW      8
0x1714	0x00FC      	MOVWF      R12
0x1715	0x3077      	MOVLW      119
0x1716	0x00FD      	MOVWF      R13
L_tune220:
0x1717	0x0BFD      	DECFSZ     R13, 1
0x1718	0x2F17      	GOTO       L_tune220
0x1719	0x0BFC      	DECFSZ     R12, 1
0x171A	0x2F17      	GOTO       L_tune220
0x171B	0x0BFB      	DECFSZ     R11, 1
0x171C	0x2F17      	GOTO       L_tune220
;main.c,784 :: 		get_swr(); if(SWR<120) { Key_out = 1; return; }
0x171D	0x22B9      	CALL       _get_swr
0x171E	0x3080      	MOVLW      128
0x171F	0x0143      	MOVLB      3
0x1720	0x0630      	XORWF      _SWR+1, 0
0x1721	0x00F0      	MOVWF      R0
0x1722	0x3080      	MOVLW      128
0x1723	0x0270      	SUBWF      R0, 0
0x1724	0x1D03      	BTFSS      STATUS, 2
0x1725	0x2F28      	GOTO       L__tune384
0x1726	0x3078      	MOVLW      120
0x1727	0x022F      	SUBWF      _SWR, 0
L__tune384:
0x1728	0x1803      	BTFSC      STATUS, 0
0x1729	0x2F2D      	GOTO       L_tune221
0x172A	0x0140      	MOVLB      0
0x172B	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
0x172C	0x2FCD      	GOTO       L_end_tune
L_tune221:
;main.c,786 :: 		coarse_tune(); if(SWR==0) {atu_reset(); Key_out = 1; return;}
0x172D	0x2471      	CALL       _coarse_tune
0x172E	0x3000      	MOVLW      0
0x172F	0x0143      	MOVLB      3
0x1730	0x0630      	XORWF      _SWR+1, 0
0x1731	0x1D03      	BTFSS      STATUS, 2
0x1732	0x2F35      	GOTO       L__tune385
0x1733	0x3000      	MOVLW      0
0x1734	0x062F      	XORWF      _SWR, 0
L__tune385:
0x1735	0x1D03      	BTFSS      STATUS, 2
0x1736	0x2F3C      	GOTO       L_tune222
0x1737	0x3188      	MOVLP      8
0x1738	0x2753      	CALL       _atu_reset
0x1739	0x3190      	MOVLP      16
0x173A	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
0x173B	0x2FCD      	GOTO       L_end_tune
L_tune222:
;main.c,787 :: 		get_swr(); if(SWR<120) { Key_out = 1; return; }
0x173C	0x22B9      	CALL       _get_swr
0x173D	0x3080      	MOVLW      128
0x173E	0x0143      	MOVLB      3
0x173F	0x0630      	XORWF      _SWR+1, 0
0x1740	0x00F0      	MOVWF      R0
0x1741	0x3080      	MOVLW      128
0x1742	0x0270      	SUBWF      R0, 0
0x1743	0x1D03      	BTFSS      STATUS, 2
0x1744	0x2F47      	GOTO       L__tune386
0x1745	0x3078      	MOVLW      120
0x1746	0x022F      	SUBWF      _SWR, 0
L__tune386:
0x1747	0x1803      	BTFSC      STATUS, 0
0x1748	0x2F4C      	GOTO       L_tune223
0x1749	0x0140      	MOVLB      0
0x174A	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
0x174B	0x2FCD      	GOTO       L_end_tune
L_tune223:
;main.c,788 :: 		sharp_ind(); if(SWR==0) {atu_reset(); Key_out = 1; return;}
0x174C	0x23B1      	CALL       _sharp_ind
0x174D	0x3000      	MOVLW      0
0x174E	0x0143      	MOVLB      3
0x174F	0x0630      	XORWF      _SWR+1, 0
0x1750	0x1D03      	BTFSS      STATUS, 2
0x1751	0x2F54      	GOTO       L__tune387
0x1752	0x3000      	MOVLW      0
0x1753	0x062F      	XORWF      _SWR, 0
L__tune387:
0x1754	0x1D03      	BTFSS      STATUS, 2
0x1755	0x2F5B      	GOTO       L_tune224
0x1756	0x3188      	MOVLP      8
0x1757	0x2753      	CALL       _atu_reset
0x1758	0x3190      	MOVLP      16
0x1759	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
0x175A	0x2FCD      	GOTO       L_end_tune
L_tune224:
;main.c,789 :: 		get_swr(); if(SWR<120) { Key_out = 1; return; }
0x175B	0x22B9      	CALL       _get_swr
0x175C	0x3080      	MOVLW      128
0x175D	0x0143      	MOVLB      3
0x175E	0x0630      	XORWF      _SWR+1, 0
0x175F	0x00F0      	MOVWF      R0
0x1760	0x3080      	MOVLW      128
0x1761	0x0270      	SUBWF      R0, 0
0x1762	0x1D03      	BTFSS      STATUS, 2
0x1763	0x2F66      	GOTO       L__tune388
0x1764	0x3078      	MOVLW      120
0x1765	0x022F      	SUBWF      _SWR, 0
L__tune388:
0x1766	0x1803      	BTFSC      STATUS, 0
0x1767	0x2F6B      	GOTO       L_tune225
0x1768	0x0140      	MOVLB      0
0x1769	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
0x176A	0x2FCD      	GOTO       L_end_tune
L_tune225:
;main.c,790 :: 		sharp_cap(); if(SWR==0) {atu_reset(); Key_out = 1; return;}
0x176B	0x2510      	CALL       _sharp_cap
0x176C	0x3000      	MOVLW      0
0x176D	0x0143      	MOVLB      3
0x176E	0x0630      	XORWF      _SWR+1, 0
0x176F	0x1D03      	BTFSS      STATUS, 2
0x1770	0x2F73      	GOTO       L__tune389
0x1771	0x3000      	MOVLW      0
0x1772	0x062F      	XORWF      _SWR, 0
L__tune389:
0x1773	0x1D03      	BTFSS      STATUS, 2
0x1774	0x2F7A      	GOTO       L_tune226
0x1775	0x3188      	MOVLP      8
0x1776	0x2753      	CALL       _atu_reset
0x1777	0x3190      	MOVLP      16
0x1778	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
0x1779	0x2FCD      	GOTO       L_end_tune
L_tune226:
;main.c,791 :: 		get_swr(); if(SWR<120) { Key_out = 1; return; }
0x177A	0x22B9      	CALL       _get_swr
0x177B	0x3080      	MOVLW      128
0x177C	0x0143      	MOVLB      3
0x177D	0x0630      	XORWF      _SWR+1, 0
0x177E	0x00F0      	MOVWF      R0
0x177F	0x3080      	MOVLW      128
0x1780	0x0270      	SUBWF      R0, 0
0x1781	0x1D03      	BTFSS      STATUS, 2
0x1782	0x2F85      	GOTO       L__tune390
0x1783	0x3078      	MOVLW      120
0x1784	0x022F      	SUBWF      _SWR, 0
L__tune390:
0x1785	0x1803      	BTFSC      STATUS, 0
0x1786	0x2F8A      	GOTO       L_tune227
0x1787	0x0140      	MOVLB      0
0x1788	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
0x1789	0x2FCD      	GOTO       L_end_tune
L_tune227:
;main.c,793 :: 		if(SWR>swr_mem) {
0x178A	0x3080      	MOVLW      128
0x178B	0x0143      	MOVLB      3
0x178C	0x0657      	XORWF      tune_swr_mem_L0+1, 0
0x178D	0x00F0      	MOVWF      R0
0x178E	0x3080      	MOVLW      128
0x178F	0x0630      	XORWF      _SWR+1, 0
0x1790	0x0270      	SUBWF      R0, 0
0x1791	0x1D03      	BTFSS      STATUS, 2
0x1792	0x2F95      	GOTO       L__tune391
0x1793	0x082F      	MOVF       _SWR, 0
0x1794	0x0256      	SUBWF      tune_swr_mem_L0, 0
L__tune391:
0x1795	0x1803      	BTFSC      STATUS, 0
0x1796	0x2FCA      	GOTO       L_tune228
;main.c,794 :: 		if(SW==1) SW = 0; else SW = 1;
0x1797	0x0140      	MOVLB      0
0x1798	0x0855      	MOVF       _SW, 0
0x1799	0x3A01      	XORLW      1
0x179A	0x1D03      	BTFSS      STATUS, 2
0x179B	0x2F9E      	GOTO       L_tune229
0x179C	0x01D5      	CLRF       _SW
0x179D	0x2FA0      	GOTO       L_tune230
L_tune229:
0x179E	0x3001      	MOVLW      1
0x179F	0x00D5      	MOVWF      _SW
L_tune230:
;main.c,795 :: 		Relay_set(ind, cap, SW);
0x17A0	0x0854      	MOVF       _ind, 0
0x17A1	0x0144      	MOVLB      4
0x17A2	0x00A8      	MOVWF      FARG_Relay_set_L
0x17A3	0x0140      	MOVLB      0
0x17A4	0x0856      	MOVF       _cap, 0
0x17A5	0x0144      	MOVLB      4
0x17A6	0x00A9      	MOVWF      FARG_Relay_set_C
0x17A7	0x0140      	MOVLB      0
0x17A8	0x0855      	MOVF       _SW, 0
0x17A9	0x0144      	MOVLB      4
0x17AA	0x00AA      	MOVWF      FARG_Relay_set_I
0x17AB	0x3188      	MOVLP      8
0x17AC	0x2272      	CALL       _Relay_set
0x17AD	0x3190      	MOVLP      16
;main.c,796 :: 		ind = ind_mem;
0x17AE	0x0143      	MOVLB      3
0x17AF	0x0858      	MOVF       tune_ind_mem_L0, 0
0x17B0	0x0140      	MOVLB      0
0x17B1	0x00D4      	MOVWF      _ind
;main.c,797 :: 		cap = cap_mem;
0x17B2	0x0143      	MOVLB      3
0x17B3	0x085A      	MOVF       tune_cap_mem_L0, 0
0x17B4	0x0140      	MOVLB      0
0x17B5	0x00D6      	MOVWF      _cap
;main.c,798 :: 		Relay_set(ind, cap, sw);
0x17B6	0x0143      	MOVLB      3
0x17B7	0x0858      	MOVF       tune_ind_mem_L0, 0
0x17B8	0x0144      	MOVLB      4
0x17B9	0x00A8      	MOVWF      FARG_Relay_set_L
0x17BA	0x0143      	MOVLB      3
0x17BB	0x085A      	MOVF       tune_cap_mem_L0, 0
0x17BC	0x0144      	MOVLB      4
0x17BD	0x00A9      	MOVWF      FARG_Relay_set_C
0x17BE	0x0140      	MOVLB      0
0x17BF	0x0855      	MOVF       _SW, 0
0x17C0	0x0144      	MOVLB      4
0x17C1	0x00AA      	MOVWF      FARG_Relay_set_I
0x17C2	0x3188      	MOVLP      8
0x17C3	0x2272      	CALL       _Relay_set
0x17C4	0x3190      	MOVLP      16
;main.c,799 :: 		SWR = swr_mem;
0x17C5	0x0143      	MOVLB      3
0x17C6	0x0856      	MOVF       tune_swr_mem_L0, 0
0x17C7	0x00AF      	MOVWF      _SWR
0x17C8	0x0857      	MOVF       tune_swr_mem_L0+1, 0
0x17C9	0x00B0      	MOVWF      _SWR+1
;main.c,800 :: 		}
L_tune228:
;main.c,802 :: 		asm CLRWDT;
0x17CA	0x0064      	CLRWDT
;main.c,803 :: 		Key_out = 1;
0x17CB	0x0140      	MOVLB      0
0x17CC	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
;main.c,804 :: 		return;
;main.c,805 :: 		}
L_end_tune:
0x17CD	0x0008      	RETURN
; end of _tune
_ADC_Init:
;__Lib_ADC_18xxx.c,24 :: 		
;__Lib_ADC_18xxx.c,25 :: 		
0x17CE	0x30A2      	MOVLW      _ADC_Get_Sample
0x17CF	0x0143      	MOVLB      3
0x17D0	0x00BD      	MOVWF      _ADC_Get_Sample_Ptr
0x17D1	0x3004      	MOVLW      hi_addr(_ADC_Get_Sample)
0x17D2	0x00BE      	MOVWF      _ADC_Get_Sample_Ptr+1
0x17D3	0x302F      	MOVLW      FARG_ADC_Get_Sample_channel
0x17D4	0x00BF      	MOVWF      _ADC_Get_Sample_Ptr+2
0x17D5	0x3002      	MOVLW      hi_addr(FARG_ADC_Get_Sample_channel)
0x17D6	0x00C0      	MOVWF      _ADC_Get_Sample_Ptr+3
;__Lib_ADC_18xxx.c,27 :: 		
0x17D7	0x0141      	MOVLB      1
0x17D8	0x0193      	CLRF       ADCON0
;__Lib_ADC_18xxx.c,28 :: 		
0x17D9	0x0194      	CLRF       ADCON1
;__Lib_ADC_18xxx.c,29 :: 		
0x17DA	0x0195      	CLRF       ADCON2
;__Lib_ADC_18xxx.c,30 :: 		
0x17DB	0x0196      	CLRF       ADCON3
;__Lib_ADC_18xxx.c,32 :: 		
0x17DC	0x30EC      	MOVLW      236
0x17DD	0x059A      	ANDWF      ADREF, 1
;__Lib_ADC_18xxx.c,34 :: 		
0x17DE	0x1613      	BSF        ADCON0, 4
;__Lib_ADC_18xxx.c,35 :: 		
0x17DF	0x1513      	BSF        ADCON0, 2
;__Lib_ADC_18xxx.c,36 :: 		
0x17E0	0x1793      	BSF        ADCON0, 7
;__Lib_ADC_18xxx.c,37 :: 		
L_end_ADC_Init:
0x17E1	0x0008      	RETURN
; end of _ADC_Init
_oled_voltage:
;oled_control.c,221 :: 		void oled_voltage(int Voltage) {
;oled_control.c,223 :: 		Soft_I2C_Start();
0x1800	0x3180      	MOVLP      0
0x1801	0x2139      	CALL       _Soft_I2C_Start
0x1802	0x3198      	MOVLP      24
;oled_control.c,224 :: 		Soft_I2C_Write(oled_addr);       // device addres
0x1803	0x0141      	MOVLB      1
0x1804	0x0828      	MOVF       oled_control_oled_addr, 0
0x1805	0x0144      	MOVLB      4
0x1806	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x1807	0x3180      	MOVLP      0
0x1808	0x2153      	CALL       _Soft_I2C_Write
0x1809	0x3198      	MOVLP      24
;oled_control.c,225 :: 		Soft_I2C_Write(64);              // 0 - continious mode, command; 64 - Co, data
0x180A	0x3040      	MOVLW      64
0x180B	0x0144      	MOVLB      4
0x180C	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x180D	0x3180      	MOVLP      0
0x180E	0x2153      	CALL       _Soft_I2C_Write
0x180F	0x3198      	MOVLP      24
;oled_control.c,227 :: 		Voltage /= 10;
0x1810	0x300A      	MOVLW      10
0x1811	0x00F4      	MOVWF      R4
0x1812	0x3000      	MOVLW      0
0x1813	0x00F5      	MOVWF      R5
0x1814	0x0143      	MOVLB      3
0x1815	0x084D      	MOVF       FARG_oled_voltage_Voltage, 0
0x1816	0x00F0      	MOVWF      R0
0x1817	0x084E      	MOVF       FARG_oled_voltage_Voltage+1, 0
0x1818	0x00F1      	MOVWF      R1
0x1819	0x3180      	MOVLP      0
0x181A	0x265B      	CALL       _Div_16x16_S
0x181B	0x3198      	MOVLP      24
0x181C	0x0870      	MOVF       R0, 0
0x181D	0x0143      	MOVLB      3
0x181E	0x00CD      	MOVWF      FARG_oled_voltage_Voltage
0x181F	0x0871      	MOVF       R1, 0
0x1820	0x00CE      	MOVWF      FARG_oled_voltage_Voltage+1
;oled_control.c,228 :: 		if(Voltage < 300) Voltage = 300;
0x1821	0x3080      	MOVLW      128
0x1822	0x0671      	XORWF      R1, 0
0x1823	0x00F2      	MOVWF      R2
0x1824	0x3080      	MOVLW      128
0x1825	0x3A01      	XORLW      1
0x1826	0x0272      	SUBWF      R2, 0
0x1827	0x1D03      	BTFSS      STATUS, 2
0x1828	0x282B      	GOTO       L__oled_voltage130
0x1829	0x302C      	MOVLW      44
0x182A	0x0270      	SUBWF      R0, 0
L__oled_voltage130:
0x182B	0x1803      	BTFSC      STATUS, 0
0x182C	0x2832      	GOTO       L_oled_voltage42
0x182D	0x302C      	MOVLW      44
0x182E	0x00CD      	MOVWF      FARG_oled_voltage_Voltage
0x182F	0x3001      	MOVLW      1
0x1830	0x00CE      	MOVWF      FARG_oled_voltage_Voltage+1
0x1831	0x2842      	GOTO       L_oled_voltage43
L_oled_voltage42:
;oled_control.c,229 :: 		else if(Voltage > 420) Voltage = 420;
0x1832	0x3080      	MOVLW      128
0x1833	0x3A01      	XORLW      1
0x1834	0x00F0      	MOVWF      R0
0x1835	0x3080      	MOVLW      128
0x1836	0x064E      	XORWF      FARG_oled_voltage_Voltage+1, 0
0x1837	0x0270      	SUBWF      R0, 0
0x1838	0x1D03      	BTFSS      STATUS, 2
0x1839	0x283C      	GOTO       L__oled_voltage131
0x183A	0x084D      	MOVF       FARG_oled_voltage_Voltage, 0
0x183B	0x3CA4      	SUBLW      164
L__oled_voltage131:
0x183C	0x1803      	BTFSC      STATUS, 0
0x183D	0x2842      	GOTO       L_oled_voltage44
0x183E	0x30A4      	MOVLW      164
0x183F	0x00CD      	MOVWF      FARG_oled_voltage_Voltage
0x1840	0x3001      	MOVLW      1
0x1841	0x00CE      	MOVWF      FARG_oled_voltage_Voltage+1
L_oled_voltage44:
L_oled_voltage43:
;oled_control.c,230 :: 		Voltage = Voltage - 300; // 0 - 120
0x1842	0x302C      	MOVLW      44
0x1843	0x024D      	SUBWF      FARG_oled_voltage_Voltage, 0
0x1844	0x00F3      	MOVWF      R3
0x1845	0x3001      	MOVLW      1
0x1846	0x3B4E      	SUBWFB     FARG_oled_voltage_Voltage+1, 0
0x1847	0x00F4      	MOVWF      R4
0x1848	0x0873      	MOVF       R3, 0
0x1849	0x00CD      	MOVWF      FARG_oled_voltage_Voltage
0x184A	0x0874      	MOVF       R4, 0
0x184B	0x00CE      	MOVWF      FARG_oled_voltage_Voltage+1
;oled_control.c,231 :: 		Voltage = Voltage * 32;
0x184C	0x3005      	MOVLW      5
0x184D	0x00F2      	MOVWF      R2
0x184E	0x0873      	MOVF       R3, 0
0x184F	0x00F0      	MOVWF      R0
0x1850	0x0874      	MOVF       R4, 0
0x1851	0x00F1      	MOVWF      R1
0x1852	0x0872      	MOVF       R2, 0
L__oled_voltage132:
0x1853	0x1903      	BTFSC      STATUS, 2
0x1854	0x2859      	GOTO       L__oled_voltage133
0x1855	0x35F0      	LSLF       R0, 1
0x1856	0x0DF1      	RLF        R1, 1
0x1857	0x3EFF      	ADDLW      255
0x1858	0x2853      	GOTO       L__oled_voltage132
L__oled_voltage133:
0x1859	0x0870      	MOVF       R0, 0
0x185A	0x00CD      	MOVWF      FARG_oled_voltage_Voltage
0x185B	0x0871      	MOVF       R1, 0
0x185C	0x00CE      	MOVWF      FARG_oled_voltage_Voltage+1
;oled_control.c,232 :: 		v = Voltage / 120;
0x185D	0x3078      	MOVLW      120
0x185E	0x00F4      	MOVWF      R4
0x185F	0x3000      	MOVLW      0
0x1860	0x00F5      	MOVWF      R5
0x1861	0x3180      	MOVLP      0
0x1862	0x265B      	CALL       _Div_16x16_S
0x1863	0x3198      	MOVLP      24
0x1864	0x0870      	MOVF       R0, 0
0x1865	0x0143      	MOVLB      3
0x1866	0x00D0      	MOVWF      oled_voltage_v_L0
;oled_control.c,235 :: 		if(v >= 25)      { u0 = v - 24; u1 = 8; u2 = 8; u3 = 8; }
0x1867	0x3019      	MOVLW      25
0x1868	0x0270      	SUBWF      R0, 0
0x1869	0x1C03      	BTFSS      STATUS, 0
0x186A	0x2875      	GOTO       L_oled_voltage45
0x186B	0x3018      	MOVLW      24
0x186C	0x0250      	SUBWF      oled_voltage_v_L0, 0
0x186D	0x00D1      	MOVWF      oled_voltage_u0_L0
0x186E	0x3008      	MOVLW      8
0x186F	0x00D2      	MOVWF      oled_voltage_u1_L0
0x1870	0x3008      	MOVLW      8
0x1871	0x00D3      	MOVWF      oled_voltage_u2_L0
0x1872	0x3008      	MOVLW      8
0x1873	0x00D4      	MOVWF      oled_voltage_u3_L0
0x1874	0x2893      	GOTO       L_oled_voltage46
L_oled_voltage45:
;oled_control.c,236 :: 		else if(v >= 17) { u0 = 0; u1 = v - 16; u2 = 8; u3 = 8; }
0x1875	0x3011      	MOVLW      17
0x1876	0x0250      	SUBWF      oled_voltage_v_L0, 0
0x1877	0x1C03      	BTFSS      STATUS, 0
0x1878	0x2882      	GOTO       L_oled_voltage47
0x1879	0x01D1      	CLRF       oled_voltage_u0_L0
0x187A	0x3010      	MOVLW      16
0x187B	0x0250      	SUBWF      oled_voltage_v_L0, 0
0x187C	0x00D2      	MOVWF      oled_voltage_u1_L0
0x187D	0x3008      	MOVLW      8
0x187E	0x00D3      	MOVWF      oled_voltage_u2_L0
0x187F	0x3008      	MOVLW      8
0x1880	0x00D4      	MOVWF      oled_voltage_u3_L0
0x1881	0x2893      	GOTO       L_oled_voltage48
L_oled_voltage47:
;oled_control.c,237 :: 		else if(v >= 9 ) { u0 = 0; u1 = 0;  u2 = v - 8; u3 = 8; }
0x1882	0x3009      	MOVLW      9
0x1883	0x0250      	SUBWF      oled_voltage_v_L0, 0
0x1884	0x1C03      	BTFSS      STATUS, 0
0x1885	0x288E      	GOTO       L_oled_voltage49
0x1886	0x01D1      	CLRF       oled_voltage_u0_L0
0x1887	0x01D2      	CLRF       oled_voltage_u1_L0
0x1888	0x3008      	MOVLW      8
0x1889	0x0250      	SUBWF      oled_voltage_v_L0, 0
0x188A	0x00D3      	MOVWF      oled_voltage_u2_L0
0x188B	0x3008      	MOVLW      8
0x188C	0x00D4      	MOVWF      oled_voltage_u3_L0
0x188D	0x2893      	GOTO       L_oled_voltage50
L_oled_voltage49:
;oled_control.c,238 :: 		else             { u0 = 0; u1 = 0; u2 = 0; u3 = v ; }
0x188E	0x01D1      	CLRF       oled_voltage_u0_L0
0x188F	0x01D2      	CLRF       oled_voltage_u1_L0
0x1890	0x01D3      	CLRF       oled_voltage_u2_L0
0x1891	0x0850      	MOVF       oled_voltage_v_L0, 0
0x1892	0x00D4      	MOVWF      oled_voltage_u3_L0
L_oled_voltage50:
L_oled_voltage48:
L_oled_voltage46:
;oled_control.c,240 :: 		m = 128;
0x1893	0x3080      	MOVLW      128
0x1894	0x00D5      	MOVWF      oled_voltage_m_L0
;oled_control.c,241 :: 		m = 255 - (m >> (u0-1)) +1;
0x1895	0x3001      	MOVLW      1
0x1896	0x0251      	SUBWF      oled_voltage_u0_L0, 0
0x1897	0x00F0      	MOVWF      R0
0x1898	0x01F1      	CLRF       R1
0x1899	0x3000      	MOVLW      0
0x189A	0x3BF1      	SUBWFB     R1, 1
0x189B	0x0870      	MOVF       R0, 0
0x189C	0x00F1      	MOVWF      R1
0x189D	0x0855      	MOVF       oled_voltage_m_L0, 0
0x189E	0x00F0      	MOVWF      R0
0x189F	0x0871      	MOVF       R1, 0
L__oled_voltage134:
0x18A0	0x1903      	BTFSC      STATUS, 2
0x18A1	0x28A5      	GOTO       L__oled_voltage135
0x18A2	0x36F0      	LSRF       R0, 1
0x18A3	0x3EFF      	ADDLW      255
0x18A4	0x28A0      	GOTO       L__oled_voltage134
L__oled_voltage135:
0x18A5	0x0870      	MOVF       R0, 0
0x18A6	0x3CFF      	SUBLW      255
0x18A7	0x00D5      	MOVWF      oled_voltage_m_L0
0x18A8	0x0AD5      	INCF       oled_voltage_m_L0, 1
;oled_control.c,242 :: 		m = m | 0b00000011;
0x18A9	0x3003      	MOVLW      3
0x18AA	0x04D5      	IORWF       oled_voltage_m_L0, 1
;oled_control.c,243 :: 		set_addressing (0, 119);
0x18AB	0x0144      	MOVLB      4
0x18AC	0x01C1      	CLRF       FARG_set_addressing_pagenum
0x18AD	0x3077      	MOVLW      119
0x18AE	0x00C2      	MOVWF      FARG_set_addressing_c_start
0x18AF	0x3180      	MOVLP      0
0x18B0	0x218A      	CALL       _set_addressing
0x18B1	0x3198      	MOVLP      24
;oled_control.c,244 :: 		Soft_I2C_Write(m);
0x18B2	0x0143      	MOVLB      3
0x18B3	0x0855      	MOVF       oled_voltage_m_L0, 0
0x18B4	0x0144      	MOVLB      4
0x18B5	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x18B6	0x3180      	MOVLP      0
0x18B7	0x2153      	CALL       _Soft_I2C_Write
0x18B8	0x3198      	MOVLP      24
;oled_control.c,245 :: 		Soft_I2C_Write(m);
0x18B9	0x0143      	MOVLB      3
0x18BA	0x0855      	MOVF       oled_voltage_m_L0, 0
0x18BB	0x0144      	MOVLB      4
0x18BC	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x18BD	0x3180      	MOVLP      0
0x18BE	0x2153      	CALL       _Soft_I2C_Write
0x18BF	0x3198      	MOVLP      24
;oled_control.c,246 :: 		Soft_I2C_Write(m);
0x18C0	0x0143      	MOVLB      3
0x18C1	0x0855      	MOVF       oled_voltage_m_L0, 0
0x18C2	0x0144      	MOVLB      4
0x18C3	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x18C4	0x3180      	MOVLP      0
0x18C5	0x2153      	CALL       _Soft_I2C_Write
0x18C6	0x3198      	MOVLP      24
;oled_control.c,247 :: 		m = m | 0b00011111;
0x18C7	0x301F      	MOVLW      31
0x18C8	0x0143      	MOVLB      3
0x18C9	0x04D5      	IORWF       oled_voltage_m_L0, 1
;oled_control.c,248 :: 		set_addressing (0, 117);
0x18CA	0x0144      	MOVLB      4
0x18CB	0x01C1      	CLRF       FARG_set_addressing_pagenum
0x18CC	0x3075      	MOVLW      117
0x18CD	0x00C2      	MOVWF      FARG_set_addressing_c_start
0x18CE	0x3180      	MOVLP      0
0x18CF	0x218A      	CALL       _set_addressing
0x18D0	0x3198      	MOVLP      24
;oled_control.c,249 :: 		Soft_I2C_Write(m);
0x18D1	0x0143      	MOVLB      3
0x18D2	0x0855      	MOVF       oled_voltage_m_L0, 0
0x18D3	0x0144      	MOVLB      4
0x18D4	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x18D5	0x3180      	MOVLP      0
0x18D6	0x2153      	CALL       _Soft_I2C_Write
0x18D7	0x3198      	MOVLP      24
;oled_control.c,250 :: 		Soft_I2C_Write(m);
0x18D8	0x0143      	MOVLB      3
0x18D9	0x0855      	MOVF       oled_voltage_m_L0, 0
0x18DA	0x0144      	MOVLB      4
0x18DB	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x18DC	0x3180      	MOVLP      0
0x18DD	0x2153      	CALL       _Soft_I2C_Write
0x18DE	0x3198      	MOVLP      24
;oled_control.c,251 :: 		set_addressing (0, 122);
0x18DF	0x0144      	MOVLB      4
0x18E0	0x01C1      	CLRF       FARG_set_addressing_pagenum
0x18E1	0x307A      	MOVLW      122
0x18E2	0x00C2      	MOVWF      FARG_set_addressing_c_start
0x18E3	0x3180      	MOVLP      0
0x18E4	0x218A      	CALL       _set_addressing
0x18E5	0x3198      	MOVLP      24
;oled_control.c,252 :: 		Soft_I2C_Write(m);
0x18E6	0x0143      	MOVLB      3
0x18E7	0x0855      	MOVF       oled_voltage_m_L0, 0
0x18E8	0x0144      	MOVLB      4
0x18E9	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x18EA	0x3180      	MOVLP      0
0x18EB	0x2153      	CALL       _Soft_I2C_Write
0x18EC	0x3198      	MOVLP      24
;oled_control.c,253 :: 		Soft_I2C_Write(m);
0x18ED	0x0143      	MOVLB      3
0x18EE	0x0855      	MOVF       oled_voltage_m_L0, 0
0x18EF	0x0144      	MOVLB      4
0x18F0	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x18F1	0x3180      	MOVLP      0
0x18F2	0x2153      	CALL       _Soft_I2C_Write
0x18F3	0x3198      	MOVLP      24
;oled_control.c,255 :: 		m = 128;
0x18F4	0x3080      	MOVLW      128
0x18F5	0x0143      	MOVLB      3
0x18F6	0x00D5      	MOVWF      oled_voltage_m_L0
;oled_control.c,256 :: 		m = 255 - (m >> (u1-1)) + 1;
0x18F7	0x3001      	MOVLW      1
0x18F8	0x0252      	SUBWF      oled_voltage_u1_L0, 0
0x18F9	0x00F0      	MOVWF      R0
0x18FA	0x01F1      	CLRF       R1
0x18FB	0x3000      	MOVLW      0
0x18FC	0x3BF1      	SUBWFB     R1, 1
0x18FD	0x0870      	MOVF       R0, 0
0x18FE	0x00F1      	MOVWF      R1
0x18FF	0x0855      	MOVF       oled_voltage_m_L0, 0
0x1900	0x00F0      	MOVWF      R0
0x1901	0x0871      	MOVF       R1, 0
L__oled_voltage136:
0x1902	0x1903      	BTFSC      STATUS, 2
0x1903	0x2907      	GOTO       L__oled_voltage137
0x1904	0x36F0      	LSRF       R0, 1
0x1905	0x3EFF      	ADDLW      255
0x1906	0x2902      	GOTO       L__oled_voltage136
L__oled_voltage137:
0x1907	0x0870      	MOVF       R0, 0
0x1908	0x3CFF      	SUBLW      255
0x1909	0x00D5      	MOVWF      oled_voltage_m_L0
0x190A	0x0AD5      	INCF       oled_voltage_m_L0, 1
;oled_control.c,257 :: 		set_addressing (1, 117);
0x190B	0x3001      	MOVLW      1
0x190C	0x0144      	MOVLB      4
0x190D	0x00C1      	MOVWF      FARG_set_addressing_pagenum
0x190E	0x3075      	MOVLW      117
0x190F	0x00C2      	MOVWF      FARG_set_addressing_c_start
0x1910	0x3180      	MOVLP      0
0x1911	0x218A      	CALL       _set_addressing
0x1912	0x3198      	MOVLP      24
;oled_control.c,258 :: 		for(i=0; i<=6; i++) Soft_I2C_Write(m);
0x1913	0x0143      	MOVLB      3
0x1914	0x01CF      	CLRF       oled_voltage_i_L0
L_oled_voltage51:
0x1915	0x084F      	MOVF       oled_voltage_i_L0, 0
0x1916	0x3C06      	SUBLW      6
0x1917	0x1C03      	BTFSS      STATUS, 0
0x1918	0x2922      	GOTO       L_oled_voltage52
0x1919	0x0855      	MOVF       oled_voltage_m_L0, 0
0x191A	0x0144      	MOVLB      4
0x191B	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x191C	0x3180      	MOVLP      0
0x191D	0x2153      	CALL       _Soft_I2C_Write
0x191E	0x3198      	MOVLP      24
0x191F	0x0143      	MOVLB      3
0x1920	0x0ACF      	INCF       oled_voltage_i_L0, 1
0x1921	0x2915      	GOTO       L_oled_voltage51
L_oled_voltage52:
;oled_control.c,260 :: 		m = 128;
0x1922	0x3080      	MOVLW      128
0x1923	0x00D5      	MOVWF      oled_voltage_m_L0
;oled_control.c,261 :: 		m = 255 - (m >> (u2-1)) + 1;
0x1924	0x3001      	MOVLW      1
0x1925	0x0253      	SUBWF      oled_voltage_u2_L0, 0
0x1926	0x00F0      	MOVWF      R0
0x1927	0x01F1      	CLRF       R1
0x1928	0x3000      	MOVLW      0
0x1929	0x3BF1      	SUBWFB     R1, 1
0x192A	0x0870      	MOVF       R0, 0
0x192B	0x00F1      	MOVWF      R1
0x192C	0x0855      	MOVF       oled_voltage_m_L0, 0
0x192D	0x00F0      	MOVWF      R0
0x192E	0x0871      	MOVF       R1, 0
L__oled_voltage138:
0x192F	0x1903      	BTFSC      STATUS, 2
0x1930	0x2934      	GOTO       L__oled_voltage139
0x1931	0x36F0      	LSRF       R0, 1
0x1932	0x3EFF      	ADDLW      255
0x1933	0x292F      	GOTO       L__oled_voltage138
L__oled_voltage139:
0x1934	0x0870      	MOVF       R0, 0
0x1935	0x3CFF      	SUBLW      255
0x1936	0x00D5      	MOVWF      oled_voltage_m_L0
0x1937	0x0AD5      	INCF       oled_voltage_m_L0, 1
;oled_control.c,262 :: 		set_addressing (2, 117);
0x1938	0x3002      	MOVLW      2
0x1939	0x0144      	MOVLB      4
0x193A	0x00C1      	MOVWF      FARG_set_addressing_pagenum
0x193B	0x3075      	MOVLW      117
0x193C	0x00C2      	MOVWF      FARG_set_addressing_c_start
0x193D	0x3180      	MOVLP      0
0x193E	0x218A      	CALL       _set_addressing
0x193F	0x3198      	MOVLP      24
;oled_control.c,263 :: 		for(i=0; i<=6; i++) Soft_I2C_Write(m);
0x1940	0x0143      	MOVLB      3
0x1941	0x01CF      	CLRF       oled_voltage_i_L0
L_oled_voltage54:
0x1942	0x084F      	MOVF       oled_voltage_i_L0, 0
0x1943	0x3C06      	SUBLW      6
0x1944	0x1C03      	BTFSS      STATUS, 0
0x1945	0x294F      	GOTO       L_oled_voltage55
0x1946	0x0855      	MOVF       oled_voltage_m_L0, 0
0x1947	0x0144      	MOVLB      4
0x1948	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x1949	0x3180      	MOVLP      0
0x194A	0x2153      	CALL       _Soft_I2C_Write
0x194B	0x3198      	MOVLP      24
0x194C	0x0143      	MOVLB      3
0x194D	0x0ACF      	INCF       oled_voltage_i_L0, 1
0x194E	0x2942      	GOTO       L_oled_voltage54
L_oled_voltage55:
;oled_control.c,265 :: 		m = 128;
0x194F	0x3080      	MOVLW      128
0x1950	0x00D5      	MOVWF      oled_voltage_m_L0
;oled_control.c,266 :: 		m = 255 - (m >> (u3-1)) +1;
0x1951	0x3001      	MOVLW      1
0x1952	0x0254      	SUBWF      oled_voltage_u3_L0, 0
0x1953	0x00F0      	MOVWF      R0
0x1954	0x01F1      	CLRF       R1
0x1955	0x3000      	MOVLW      0
0x1956	0x3BF1      	SUBWFB     R1, 1
0x1957	0x0870      	MOVF       R0, 0
0x1958	0x00F1      	MOVWF      R1
0x1959	0x0855      	MOVF       oled_voltage_m_L0, 0
0x195A	0x00F0      	MOVWF      R0
0x195B	0x0871      	MOVF       R1, 0
L__oled_voltage140:
0x195C	0x1903      	BTFSC      STATUS, 2
0x195D	0x2961      	GOTO       L__oled_voltage141
0x195E	0x36F0      	LSRF       R0, 1
0x195F	0x3EFF      	ADDLW      255
0x1960	0x295C      	GOTO       L__oled_voltage140
L__oled_voltage141:
0x1961	0x0870      	MOVF       R0, 0
0x1962	0x3CFF      	SUBLW      255
0x1963	0x00D5      	MOVWF      oled_voltage_m_L0
0x1964	0x0AD5      	INCF       oled_voltage_m_L0, 1
;oled_control.c,267 :: 		m = m | 0b11000000;
0x1965	0x30C0      	MOVLW      192
0x1966	0x04D5      	IORWF       oled_voltage_m_L0, 1
;oled_control.c,268 :: 		set_addressing (3, 117);
0x1967	0x3003      	MOVLW      3
0x1968	0x0144      	MOVLB      4
0x1969	0x00C1      	MOVWF      FARG_set_addressing_pagenum
0x196A	0x3075      	MOVLW      117
0x196B	0x00C2      	MOVWF      FARG_set_addressing_c_start
0x196C	0x3180      	MOVLP      0
0x196D	0x218A      	CALL       _set_addressing
0x196E	0x3198      	MOVLP      24
;oled_control.c,269 :: 		for(i=0; i<=6; i++) Soft_I2C_Write(m);
0x196F	0x0143      	MOVLB      3
0x1970	0x01CF      	CLRF       oled_voltage_i_L0
L_oled_voltage57:
0x1971	0x084F      	MOVF       oled_voltage_i_L0, 0
0x1972	0x3C06      	SUBLW      6
0x1973	0x1C03      	BTFSS      STATUS, 0
0x1974	0x297E      	GOTO       L_oled_voltage58
0x1975	0x0855      	MOVF       oled_voltage_m_L0, 0
0x1976	0x0144      	MOVLB      4
0x1977	0x00C6      	MOVWF      FARG_Soft_I2C_Write_d
0x1978	0x3180      	MOVLP      0
0x1979	0x2153      	CALL       _Soft_I2C_Write
0x197A	0x3198      	MOVLP      24
0x197B	0x0143      	MOVLB      3
0x197C	0x0ACF      	INCF       oled_voltage_i_L0, 1
0x197D	0x2971      	GOTO       L_oled_voltage57
L_oled_voltage58:
;oled_control.c,271 :: 		Soft_I2C_Stop ();
0x197E	0x3180      	MOVLP      0
0x197F	0x21CA      	CALL       _Soft_I2C_Stop
0x1980	0x3198      	MOVLP      24
;oled_control.c,272 :: 		return;
;oled_control.c,273 :: 		}
L_end_oled_voltage:
0x1981	0x0008      	RETURN
; end of _oled_voltage
_Btn_long:
;main.c,330 :: 		void Btn_long(){
;main.c,331 :: 		Green = 0;
0x1982	0x0140      	MOVLB      0
0x1983	0x1197      	BCF        LATB3_bit, BitPos(LATB3_bit+0)
;main.c,332 :: 		oled_wr_str(2, 0, "TUNE     ", 9);
0x1984	0x3002      	MOVLW      2
0x1985	0x0144      	MOVLB      4
0x1986	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x1987	0x01B0      	CLRF       FARG_oled_wr_str_col
0x1988	0x305D      	MOVLW      ?lstr15_main
0x1989	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x198A	0x3000      	MOVLW      hi_addr(?lstr15_main)
0x198B	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x198C	0x3009      	MOVLW      9
0x198D	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x198E	0x3180      	MOVLP      0
0x198F	0x232C      	CALL       _oled_wr_str
0x1990	0x3198      	MOVLP      24
;main.c,333 :: 		tune();
0x1991	0x3190      	MOVLP      16
0x1992	0x260F      	CALL       _tune
0x1993	0x3198      	MOVLP      24
;main.c,334 :: 		SWR_ind = SWR;
0x1994	0x0143      	MOVLB      3
0x1995	0x082F      	MOVF       _SWR, 0
0x1996	0x0141      	MOVLB      1
0x1997	0x00EC      	MOVWF      _SWR_ind
0x1998	0x0143      	MOVLB      3
0x1999	0x0830      	MOVF       _SWR+1, 0
0x199A	0x0141      	MOVLB      1
0x199B	0x00ED      	MOVWF      _SWR_ind+1
;main.c,335 :: 		oled_wr_str(2, 0, "SWR ", 4);
0x199C	0x3002      	MOVLW      2
0x199D	0x0144      	MOVLB      4
0x199E	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x199F	0x01B0      	CLRF       FARG_oled_wr_str_col
0x19A0	0x3067      	MOVLW      ?lstr16_main
0x19A1	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x19A2	0x3000      	MOVLW      hi_addr(?lstr16_main)
0x19A3	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x19A4	0x3004      	MOVLW      4
0x19A5	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x19A6	0x3180      	MOVLP      0
0x19A7	0x232C      	CALL       _oled_wr_str
0x19A8	0x3198      	MOVLP      24
;main.c,336 :: 		oled_wr_str(2, 42, "=", 1);
0x19A9	0x3002      	MOVLW      2
0x19AA	0x0144      	MOVLB      4
0x19AB	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x19AC	0x302A      	MOVLW      42
0x19AD	0x00B0      	MOVWF      FARG_oled_wr_str_col
0x19AE	0x306E      	MOVLW      ?lstr17_main
0x19AF	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x19B0	0x3000      	MOVLW      hi_addr(?lstr17_main)
0x19B1	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x19B2	0x3001      	MOVLW      1
0x19B3	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x19B4	0x3180      	MOVLP      0
0x19B5	0x232C      	CALL       _oled_wr_str
0x19B6	0x3198      	MOVLP      24
;main.c,337 :: 		draw_swr(SWR);
0x19B7	0x0143      	MOVLB      3
0x19B8	0x082F      	MOVF       _SWR, 0
0x19B9	0x00D6      	MOVWF      FARG_draw_swr_s
0x19BA	0x0830      	MOVF       _SWR+1, 0
0x19BB	0x00D7      	MOVWF      FARG_draw_swr_s+1
0x19BC	0x3190      	MOVLP      16
0x19BD	0x25D0      	CALL       _draw_swr
0x19BE	0x3198      	MOVLP      24
;main.c,338 :: 		Green = 1;
0x19BF	0x1597      	BSF        LATB3_bit, BitPos(LATB3_bit+0)
;main.c,339 :: 		B_long = 0;
0x19C0	0x0143      	MOVLB      3
0x19C1	0x1226      	BCF        _B_long, BitPos(_B_long+0)
;main.c,340 :: 		E_long = 0;
0x19C2	0x10A6      	BCF        _E_long, BitPos(_E_long+0)
;main.c,341 :: 		volt_cnt = Tick;
0x19C3	0x0142      	MOVLB      2
0x19C4	0x0858      	MOVF       _Tick, 0
0x19C5	0x00E0      	MOVWF      _volt_cnt
0x19C6	0x0859      	MOVF       _Tick+1, 0
0x19C7	0x00E1      	MOVWF      _volt_cnt+1
0x19C8	0x085A      	MOVF       _Tick+2, 0
0x19C9	0x00E2      	MOVWF      _volt_cnt+2
0x19CA	0x085B      	MOVF       _Tick+3, 0
0x19CB	0x00E3      	MOVWF      _volt_cnt+3
;main.c,342 :: 		watch_cnt = Tick;
0x19CC	0x0858      	MOVF       _Tick, 0
0x19CD	0x00DC      	MOVWF      _watch_cnt
0x19CE	0x0859      	MOVF       _Tick+1, 0
0x19CF	0x00DD      	MOVWF      _watch_cnt+1
0x19D0	0x085A      	MOVF       _Tick+2, 0
0x19D1	0x00DE      	MOVWF      _watch_cnt+2
0x19D2	0x085B      	MOVF       _Tick+3, 0
0x19D3	0x00DF      	MOVWF      _watch_cnt+3
;main.c,343 :: 		return;
;main.c,344 :: 		}
L_end_Btn_long:
0x19D4	0x0008      	RETURN
; end of _Btn_long
_watch_swr:
;main.c,173 :: 		void watch_swr(void){
;main.c,175 :: 		int delta = Auto_delta - 100;
0x19D5	0x3064      	MOVLW      100
0x19D6	0x0141      	MOVLB      1
0x19D7	0x022C      	SUBWF      _Auto_delta, 0
0x19D8	0x0143      	MOVLB      3
0x19D9	0x00C7      	MOVWF      watch_swr_delta_L0
0x19DA	0x3000      	MOVLW      0
0x19DB	0x0141      	MOVLB      1
0x19DC	0x3B2D      	SUBWFB     _Auto_delta+1, 0
0x19DD	0x0143      	MOVLB      3
0x19DE	0x00C8      	MOVWF      watch_swr_delta_L0+1
;main.c,178 :: 		Delay_ms(50);
0x19DF	0x3003      	MOVLW      3
0x19E0	0x00FB      	MOVWF      R11
0x19E1	0x3008      	MOVLW      8
0x19E2	0x00FC      	MOVWF      R12
0x19E3	0x3077      	MOVLW      119
0x19E4	0x00FD      	MOVWF      R13
L_watch_swr39:
0x19E5	0x0BFD      	DECFSZ     R13, 1
0x19E6	0x29E5      	GOTO       L_watch_swr39
0x19E7	0x0BFC      	DECFSZ     R12, 1
0x19E8	0x29E5      	GOTO       L_watch_swr39
0x19E9	0x0BFB      	DECFSZ     R11, 1
0x19EA	0x29E5      	GOTO       L_watch_swr39
;main.c,180 :: 		cnt = 600;
0x19EB	0x3058      	MOVLW      88
0x19EC	0x00C6      	MOVWF      watch_swr_cnt_L0
;main.c,181 :: 		PWR_fixed = 0;
0x19ED	0x01C9      	CLRF       watch_swr_PWR_fixed_L0
0x19EE	0x01CA      	CLRF       watch_swr_PWR_fixed_L0+1
;main.c,182 :: 		SWR_fixed = 999;
0x19EF	0x30E7      	MOVLW      231
0x19F0	0x00CB      	MOVWF      watch_swr_SWR_fixed_L0
0x19F1	0x3003      	MOVLW      3
0x19F2	0x00CC      	MOVWF      watch_swr_SWR_fixed_L0+1
;main.c,183 :: 		for(peak_cnt=0; peak_cnt<cnt; peak_cnt++){
0x19F3	0x01C5      	CLRF       watch_swr_peak_cnt_L0
L_watch_swr40:
0x19F4	0x0846      	MOVF       watch_swr_cnt_L0, 0
0x19F5	0x0245      	SUBWF      watch_swr_peak_cnt_L0, 0
0x19F6	0x1803      	BTFSC      STATUS, 0
0x19F7	0x2A21      	GOTO       L_watch_swr41
;main.c,184 :: 		get_pwr();
0x19F8	0x3190      	MOVLP      16
0x19F9	0x2119      	CALL       _get_pwr
0x19FA	0x3198      	MOVLP      24
;main.c,185 :: 		if(PWR>PWR_fixed) {PWR_fixed = PWR; SWR_fixed = SWR;}
0x19FB	0x3080      	MOVLW      128
0x19FC	0x064A      	XORWF      watch_swr_PWR_fixed_L0+1, 0
0x19FD	0x00F0      	MOVWF      R0
0x19FE	0x3080      	MOVLW      128
0x19FF	0x0142      	MOVLB      2
0x1A00	0x066F      	XORWF      _PWR+1, 0
0x1A01	0x0270      	SUBWF      R0, 0
0x1A02	0x1D03      	BTFSS      STATUS, 2
0x1A03	0x2A07      	GOTO       L__watch_swr251
0x1A04	0x086E      	MOVF       _PWR, 0
0x1A05	0x0143      	MOVLB      3
0x1A06	0x0249      	SUBWF      watch_swr_PWR_fixed_L0, 0
L__watch_swr251:
0x1A07	0x1803      	BTFSC      STATUS, 0
0x1A08	0x2A15      	GOTO       L_watch_swr43
0x1A09	0x0142      	MOVLB      2
0x1A0A	0x086E      	MOVF       _PWR, 0
0x1A0B	0x0143      	MOVLB      3
0x1A0C	0x00C9      	MOVWF      watch_swr_PWR_fixed_L0
0x1A0D	0x0142      	MOVLB      2
0x1A0E	0x086F      	MOVF       _PWR+1, 0
0x1A0F	0x0143      	MOVLB      3
0x1A10	0x00CA      	MOVWF      watch_swr_PWR_fixed_L0+1
0x1A11	0x082F      	MOVF       _SWR, 0
0x1A12	0x00CB      	MOVWF      watch_swr_SWR_fixed_L0
0x1A13	0x0830      	MOVF       _SWR+1, 0
0x1A14	0x00CC      	MOVWF      watch_swr_SWR_fixed_L0+1
L_watch_swr43:
;main.c,186 :: 		Delay_ms(1);
0x1A15	0x300B      	MOVLW      11
0x1A16	0x00FC      	MOVWF      R12
0x1A17	0x3062      	MOVLW      98
0x1A18	0x00FD      	MOVWF      R13
L_watch_swr44:
0x1A19	0x0143      	MOVLB      3
0x1A1A	0x0BFD      	DECFSZ     R13, 1
0x1A1B	0x2A19      	GOTO       L_watch_swr44
0x1A1C	0x0BFC      	DECFSZ     R12, 1
0x1A1D	0x2A19      	GOTO       L_watch_swr44
0x1A1E	0x0000      	NOP
;main.c,183 :: 		for(peak_cnt=0; peak_cnt<cnt; peak_cnt++){
0x1A1F	0x0AC5      	INCF       watch_swr_peak_cnt_L0, 1
;main.c,187 :: 		}
0x1A20	0x29F4      	GOTO       L_watch_swr40
L_watch_swr41:
;main.c,189 :: 		if(PWR_fixed>0){
0x1A21	0x3080      	MOVLW      128
0x1A22	0x00F0      	MOVWF      R0
0x1A23	0x3080      	MOVLW      128
0x1A24	0x064A      	XORWF      watch_swr_PWR_fixed_L0+1, 0
0x1A25	0x0270      	SUBWF      R0, 0
0x1A26	0x1D03      	BTFSS      STATUS, 2
0x1A27	0x2A2A      	GOTO       L__watch_swr252
0x1A28	0x0849      	MOVF       watch_swr_PWR_fixed_L0, 0
0x1A29	0x3C00      	SUBLW      0
L__watch_swr252:
0x1A2A	0x1803      	BTFSC      STATUS, 0
0x1A2B	0x2A7F      	GOTO       L_watch_swr45
;main.c,190 :: 		if(OLED_PWD){
0x1A2C	0x0140      	MOVLB      0
0x1A2D	0x1E16      	BTFSS      LATA4_bit, BitPos(LATA4_bit+0)
0x1A2E	0x2A7C      	GOTO       L_watch_swr46
;main.c,191 :: 		disp_cnt = Tick + Disp_time*1000;
0x1A2F	0x0142      	MOVLB      2
0x1A30	0x0854      	MOVF       _Disp_time, 0
0x1A31	0x00F0      	MOVWF      R0
0x1A32	0x0855      	MOVF       _Disp_time+1, 0
0x1A33	0x00F1      	MOVWF      R1
0x1A34	0x0856      	MOVF       _Disp_time+2, 0
0x1A35	0x00F2      	MOVWF      R2
0x1A36	0x0857      	MOVF       _Disp_time+3, 0
0x1A37	0x00F3      	MOVWF      R3
0x1A38	0x30E8      	MOVLW      232
0x1A39	0x00F4      	MOVWF      R4
0x1A3A	0x3003      	MOVLW      3
0x1A3B	0x00F5      	MOVWF      R5
0x1A3C	0x01F6      	CLRF       R6
0x1A3D	0x01F7      	CLRF       R7
0x1A3E	0x3180      	MOVLP      0
0x1A3F	0x2209      	CALL       _Mul_32x32_U
0x1A40	0x3198      	MOVLP      24
0x1A41	0x0870      	MOVF       R0, 0
0x1A42	0x0142      	MOVLB      2
0x1A43	0x0758      	ADDWF      _Tick, 0
0x1A44	0x0143      	MOVLB      3
0x1A45	0x00C1      	MOVWF      _disp_cnt
0x1A46	0x0871      	MOVF       R1, 0
0x1A47	0x0142      	MOVLB      2
0x1A48	0x3D59      	ADDWFC     _Tick+1, 0
0x1A49	0x0143      	MOVLB      3
0x1A4A	0x00C2      	MOVWF      _disp_cnt+1
0x1A4B	0x0872      	MOVF       R2, 0
0x1A4C	0x0142      	MOVLB      2
0x1A4D	0x3D5A      	ADDWFC     _Tick+2, 0
0x1A4E	0x0143      	MOVLB      3
0x1A4F	0x00C3      	MOVWF      _disp_cnt+2
0x1A50	0x0873      	MOVF       R3, 0
0x1A51	0x0142      	MOVLB      2
0x1A52	0x3D5B      	ADDWFC     _Tick+3, 0
0x1A53	0x0143      	MOVLB      3
0x1A54	0x00C4      	MOVWF      _disp_cnt+3
;main.c,192 :: 		off_cnt = Tick + Off_time*1000;
0x1A55	0x0140      	MOVLB      0
0x1A56	0x0850      	MOVF       _Off_time, 0
0x1A57	0x00F0      	MOVWF      R0
0x1A58	0x0851      	MOVF       _Off_time+1, 0
0x1A59	0x00F1      	MOVWF      R1
0x1A5A	0x0852      	MOVF       _Off_time+2, 0
0x1A5B	0x00F2      	MOVWF      R2
0x1A5C	0x0853      	MOVF       _Off_time+3, 0
0x1A5D	0x00F3      	MOVWF      R3
0x1A5E	0x30E8      	MOVLW      232
0x1A5F	0x00F4      	MOVWF      R4
0x1A60	0x3003      	MOVLW      3
0x1A61	0x00F5      	MOVWF      R5
0x1A62	0x01F6      	CLRF       R6
0x1A63	0x01F7      	CLRF       R7
0x1A64	0x3180      	MOVLP      0
0x1A65	0x2209      	CALL       _Mul_32x32_U
0x1A66	0x3198      	MOVLP      24
0x1A67	0x0870      	MOVF       R0, 0
0x1A68	0x0142      	MOVLB      2
0x1A69	0x0758      	ADDWF      _Tick, 0
0x1A6A	0x0143      	MOVLB      3
0x1A6B	0x00A2      	MOVWF      _off_cnt
0x1A6C	0x0871      	MOVF       R1, 0
0x1A6D	0x0142      	MOVLB      2
0x1A6E	0x3D59      	ADDWFC     _Tick+1, 0
0x1A6F	0x0143      	MOVLB      3
0x1A70	0x00A3      	MOVWF      _off_cnt+1
0x1A71	0x0872      	MOVF       R2, 0
0x1A72	0x0142      	MOVLB      2
0x1A73	0x3D5A      	ADDWFC     _Tick+2, 0
0x1A74	0x0143      	MOVLB      3
0x1A75	0x00A4      	MOVWF      _off_cnt+2
0x1A76	0x0873      	MOVF       R3, 0
0x1A77	0x0142      	MOVLB      2
0x1A78	0x3D5B      	ADDWFC     _Tick+3, 0
0x1A79	0x0143      	MOVLB      3
0x1A7A	0x00A5      	MOVWF      _off_cnt+3
;main.c,193 :: 		}
0x1A7B	0x2A7F      	GOTO       L_watch_swr47
L_watch_swr46:
;main.c,194 :: 		else oled_start();
0x1A7C	0x3180      	MOVLP      0
0x1A7D	0x26DD      	CALL       _oled_start
0x1A7E	0x3198      	MOVLP      24
L_watch_swr47:
;main.c,195 :: 		}
L_watch_swr45:
;main.c,197 :: 		if(PWR_fixed!=PWR_fixed_old){
0x1A7F	0x084A      	MOVF       watch_swr_PWR_fixed_L0+1, 0
0x1A80	0x0142      	MOVLB      2
0x1A81	0x066B      	XORWF      _PWR_fixed_old+1, 0
0x1A82	0x1D03      	BTFSS      STATUS, 2
0x1A83	0x2A87      	GOTO       L__watch_swr253
0x1A84	0x086A      	MOVF       _PWR_fixed_old, 0
0x1A85	0x0143      	MOVLB      3
0x1A86	0x0649      	XORWF      watch_swr_PWR_fixed_L0, 0
L__watch_swr253:
0x1A87	0x1903      	BTFSC      STATUS, 2
0x1A88	0x2AB7      	GOTO       L_watch_swr48
;main.c,198 :: 		if(Overflow)
0x1A89	0x0143      	MOVLB      3
0x1A8A	0x1C26      	BTFSS      _Overflow, BitPos(_Overflow+0)
0x1A8B	0x2A9A      	GOTO       L_watch_swr49
;main.c,199 :: 		oled_wr_str(0, 42, ">", 1);
0x1A8C	0x0144      	MOVLB      4
0x1A8D	0x01AF      	CLRF       FARG_oled_wr_str_page
0x1A8E	0x302A      	MOVLW      42
0x1A8F	0x00B0      	MOVWF      FARG_oled_wr_str_col
0x1A90	0x30AE      	MOVLW      ?lstr5_main
0x1A91	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x1A92	0x3000      	MOVLW      hi_addr(?lstr5_main)
0x1A93	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x1A94	0x3001      	MOVLW      1
0x1A95	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x1A96	0x3180      	MOVLP      0
0x1A97	0x232C      	CALL       _oled_wr_str
0x1A98	0x3198      	MOVLP      24
0x1A99	0x2AA7      	GOTO       L_watch_swr50
L_watch_swr49:
;main.c,201 :: 		oled_wr_str(0, 42, "=", 1);
0x1A9A	0x0144      	MOVLB      4
0x1A9B	0x01AF      	CLRF       FARG_oled_wr_str_page
0x1A9C	0x302A      	MOVLW      42
0x1A9D	0x00B0      	MOVWF      FARG_oled_wr_str_col
0x1A9E	0x30B0      	MOVLW      ?lstr6_main
0x1A9F	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x1AA0	0x3000      	MOVLW      hi_addr(?lstr6_main)
0x1AA1	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x1AA2	0x3001      	MOVLW      1
0x1AA3	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x1AA4	0x3180      	MOVLP      0
0x1AA5	0x232C      	CALL       _oled_wr_str
0x1AA6	0x3198      	MOVLP      24
L_watch_swr50:
;main.c,202 :: 		PWR_fixed_old = PWR_fixed;
0x1AA7	0x0143      	MOVLB      3
0x1AA8	0x0849      	MOVF       watch_swr_PWR_fixed_L0, 0
0x1AA9	0x0142      	MOVLB      2
0x1AAA	0x00EA      	MOVWF      _PWR_fixed_old
0x1AAB	0x0143      	MOVLB      3
0x1AAC	0x084A      	MOVF       watch_swr_PWR_fixed_L0+1, 0
0x1AAD	0x0142      	MOVLB      2
0x1AAE	0x00EB      	MOVWF      _PWR_fixed_old+1
;main.c,203 :: 		draw_power(PWR_fixed);
0x1AAF	0x0143      	MOVLB      3
0x1AB0	0x0849      	MOVF       watch_swr_PWR_fixed_L0, 0
0x1AB1	0x00E6      	MOVWF      FARG_draw_power_p
0x1AB2	0x084A      	MOVF       watch_swr_PWR_fixed_L0+1, 0
0x1AB3	0x00E7      	MOVWF      FARG_draw_power_p+1
0x1AB4	0x3188      	MOVLP      8
0x1AB5	0x275D      	CALL       _draw_power
0x1AB6	0x3198      	MOVLP      24
;main.c,204 :: 		}
L_watch_swr48:
;main.c,205 :: 		if(PWR_fixed<10)
0x1AB7	0x3080      	MOVLW      128
0x1AB8	0x0143      	MOVLB      3
0x1AB9	0x064A      	XORWF      watch_swr_PWR_fixed_L0+1, 0
0x1ABA	0x00F0      	MOVWF      R0
0x1ABB	0x3080      	MOVLW      128
0x1ABC	0x0270      	SUBWF      R0, 0
0x1ABD	0x1D03      	BTFSS      STATUS, 2
0x1ABE	0x2AC1      	GOTO       L__watch_swr254
0x1ABF	0x300A      	MOVLW      10
0x1AC0	0x0249      	SUBWF      watch_swr_PWR_fixed_L0, 0
L__watch_swr254:
0x1AC1	0x1803      	BTFSC      STATUS, 0
0x1AC2	0x2AC5      	GOTO       L_watch_swr51
;main.c,206 :: 		SWR_fixed = 0;
0x1AC3	0x01CB      	CLRF       watch_swr_SWR_fixed_L0
0x1AC4	0x01CC      	CLRF       watch_swr_SWR_fixed_L0+1
L_watch_swr51:
;main.c,208 :: 		if(Overflow){
0x1AC5	0x1C26      	BTFSS      _Overflow, BitPos(_Overflow+0)
0x1AC6	0x2B38      	GOTO       L_watch_swr52
;main.c,209 :: 		for(cnt=3; cnt!=0; cnt--){
0x1AC7	0x3003      	MOVLW      3
0x1AC8	0x00C6      	MOVWF      watch_swr_cnt_L0
L_watch_swr53:
0x1AC9	0x0846      	MOVF       watch_swr_cnt_L0, 0
0x1ACA	0x3A00      	XORLW      0
0x1ACB	0x1903      	BTFSC      STATUS, 2
0x1ACC	0x2B05      	GOTO       L_watch_swr54
;main.c,210 :: 		oled_wr_str(2, 6, "OVERLOAD ", 9);
0x1ACD	0x3002      	MOVLW      2
0x1ACE	0x0144      	MOVLB      4
0x1ACF	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x1AD0	0x3006      	MOVLW      6
0x1AD1	0x00B0      	MOVWF      FARG_oled_wr_str_col
0x1AD2	0x30B4      	MOVLW      ?lstr7_main
0x1AD3	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x1AD4	0x3000      	MOVLW      hi_addr(?lstr7_main)
0x1AD5	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x1AD6	0x3009      	MOVLW      9
0x1AD7	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x1AD8	0x3180      	MOVLP      0
0x1AD9	0x232C      	CALL       _oled_wr_str
0x1ADA	0x3198      	MOVLP      24
;main.c,211 :: 		Delay_ms(500);
0x1ADB	0x3015      	MOVLW      21
0x1ADC	0x00FB      	MOVWF      R11
0x1ADD	0x304B      	MOVLW      75
0x1ADE	0x00FC      	MOVWF      R12
0x1ADF	0x30BE      	MOVLW      190
0x1AE0	0x00FD      	MOVWF      R13
L_watch_swr56:
0x1AE1	0x0BFD      	DECFSZ     R13, 1
0x1AE2	0x2AE1      	GOTO       L_watch_swr56
0x1AE3	0x0BFC      	DECFSZ     R12, 1
0x1AE4	0x2AE1      	GOTO       L_watch_swr56
0x1AE5	0x0BFB      	DECFSZ     R11, 1
0x1AE6	0x2AE1      	GOTO       L_watch_swr56
0x1AE7	0x0000      	NOP
;main.c,212 :: 		oled_wr_str(2, 0, "         ", 9);
0x1AE8	0x3002      	MOVLW      2
0x1AE9	0x0144      	MOVLB      4
0x1AEA	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x1AEB	0x01B0      	CLRF       FARG_oled_wr_str_col
0x1AEC	0x30D2      	MOVLW      ?lstr8_main
0x1AED	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x1AEE	0x3000      	MOVLW      hi_addr(?lstr8_main)
0x1AEF	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x1AF0	0x3009      	MOVLW      9
0x1AF1	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x1AF2	0x3180      	MOVLP      0
0x1AF3	0x232C      	CALL       _oled_wr_str
0x1AF4	0x3198      	MOVLP      24
;main.c,213 :: 		Delay_ms(500);
0x1AF5	0x3015      	MOVLW      21
0x1AF6	0x00FB      	MOVWF      R11
0x1AF7	0x304B      	MOVLW      75
0x1AF8	0x00FC      	MOVWF      R12
0x1AF9	0x30BE      	MOVLW      190
0x1AFA	0x00FD      	MOVWF      R13
L_watch_swr57:
0x1AFB	0x0BFD      	DECFSZ     R13, 1
0x1AFC	0x2AFB      	GOTO       L_watch_swr57
0x1AFD	0x0BFC      	DECFSZ     R12, 1
0x1AFE	0x2AFB      	GOTO       L_watch_swr57
0x1AFF	0x0BFB      	DECFSZ     R11, 1
0x1B00	0x2AFB      	GOTO       L_watch_swr57
0x1B01	0x0000      	NOP
;main.c,209 :: 		for(cnt=3; cnt!=0; cnt--){
0x1B02	0x0143      	MOVLB      3
0x1B03	0x03C6      	DECF       watch_swr_cnt_L0, 1
;main.c,214 :: 		}
0x1B04	0x2AC9      	GOTO       L_watch_swr53
L_watch_swr54:
;main.c,215 :: 		oled_wr_str(2, 0, "SWR      ", 9);
0x1B05	0x3002      	MOVLW      2
0x1B06	0x0144      	MOVLB      4
0x1B07	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x1B08	0x01B0      	CLRF       FARG_oled_wr_str_col
0x1B09	0x30DC      	MOVLW      ?lstr9_main
0x1B0A	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x1B0B	0x3000      	MOVLW      hi_addr(?lstr9_main)
0x1B0C	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x1B0D	0x3009      	MOVLW      9
0x1B0E	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x1B0F	0x3180      	MOVLP      0
0x1B10	0x232C      	CALL       _oled_wr_str
0x1B11	0x3198      	MOVLP      24
;main.c,216 :: 		oled_wr_str(2, 42, "=", 1);
0x1B12	0x3002      	MOVLW      2
0x1B13	0x0144      	MOVLB      4
0x1B14	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x1B15	0x302A      	MOVLW      42
0x1B16	0x00B0      	MOVWF      FARG_oled_wr_str_col
0x1B17	0x30E6      	MOVLW      ?lstr10_main
0x1B18	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x1B19	0x3000      	MOVLW      hi_addr(?lstr10_main)
0x1B1A	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x1B1B	0x3001      	MOVLW      1
0x1B1C	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x1B1D	0x3180      	MOVLP      0
0x1B1E	0x232C      	CALL       _oled_wr_str
0x1B1F	0x3198      	MOVLP      24
;main.c,217 :: 		draw_swr(SWR_fixed);
0x1B20	0x0143      	MOVLB      3
0x1B21	0x084B      	MOVF       watch_swr_SWR_fixed_L0, 0
0x1B22	0x00D6      	MOVWF      FARG_draw_swr_s
0x1B23	0x084C      	MOVF       watch_swr_SWR_fixed_L0+1, 0
0x1B24	0x00D7      	MOVWF      FARG_draw_swr_s+1
0x1B25	0x3190      	MOVLP      16
0x1B26	0x25D0      	CALL       _draw_swr
0x1B27	0x3198      	MOVLP      24
;main.c,218 :: 		Delay_ms(500);
0x1B28	0x3015      	MOVLW      21
0x1B29	0x00FB      	MOVWF      R11
0x1B2A	0x304B      	MOVLW      75
0x1B2B	0x00FC      	MOVWF      R12
0x1B2C	0x30BE      	MOVLW      190
0x1B2D	0x00FD      	MOVWF      R13
L_watch_swr58:
0x1B2E	0x0BFD      	DECFSZ     R13, 1
0x1B2F	0x2B2E      	GOTO       L_watch_swr58
0x1B30	0x0BFC      	DECFSZ     R12, 1
0x1B31	0x2B2E      	GOTO       L_watch_swr58
0x1B32	0x0BFB      	DECFSZ     R11, 1
0x1B33	0x2B2E      	GOTO       L_watch_swr58
0x1B34	0x0000      	NOP
;main.c,219 :: 		Overflow = 0;
0x1B35	0x0143      	MOVLB      3
0x1B36	0x1026      	BCF        _Overflow, BitPos(_Overflow+0)
;main.c,220 :: 		}
0x1B37	0x2C29      	GOTO       L_watch_swr59
L_watch_swr52:
;main.c,221 :: 		else if(PWR_fixed>10){
0x1B38	0x3080      	MOVLW      128
0x1B39	0x00F0      	MOVWF      R0
0x1B3A	0x3080      	MOVLW      128
0x1B3B	0x064A      	XORWF      watch_swr_PWR_fixed_L0+1, 0
0x1B3C	0x0270      	SUBWF      R0, 0
0x1B3D	0x1D03      	BTFSS      STATUS, 2
0x1B3E	0x2B41      	GOTO       L__watch_swr255
0x1B3F	0x0849      	MOVF       watch_swr_PWR_fixed_L0, 0
0x1B40	0x3C0A      	SUBLW      10
L__watch_swr255:
0x1B41	0x1803      	BTFSC      STATUS, 0
0x1B42	0x2C0B      	GOTO       L_watch_swr60
;main.c,222 :: 		if(PWR_fixed>min_for_start & PWR_fixed<max_for_start) {
0x1B43	0x3080      	MOVLW      128
0x1B44	0x0141      	MOVLB      1
0x1B45	0x0651      	XORWF      _min_for_start+1, 0
0x1B46	0x00F1      	MOVWF      R1
0x1B47	0x3080      	MOVLW      128
0x1B48	0x0143      	MOVLB      3
0x1B49	0x064A      	XORWF      watch_swr_PWR_fixed_L0+1, 0
0x1B4A	0x0271      	SUBWF      R1, 0
0x1B4B	0x1D03      	BTFSS      STATUS, 2
0x1B4C	0x2B50      	GOTO       L__watch_swr256
0x1B4D	0x0849      	MOVF       watch_swr_PWR_fixed_L0, 0
0x1B4E	0x0141      	MOVLB      1
0x1B4F	0x0250      	SUBWF      _min_for_start, 0
L__watch_swr256:
0x1B50	0x3001      	MOVLW      1
0x1B51	0x1803      	BTFSC      STATUS, 0
0x1B52	0x3000      	MOVLW      0
0x1B53	0x00F1      	MOVWF      R1
0x1B54	0x3080      	MOVLW      128
0x1B55	0x0143      	MOVLB      3
0x1B56	0x064A      	XORWF      watch_swr_PWR_fixed_L0+1, 0
0x1B57	0x00F0      	MOVWF      R0
0x1B58	0x3080      	MOVLW      128
0x1B59	0x0141      	MOVLB      1
0x1B5A	0x063F      	XORWF      _max_for_start+1, 0
0x1B5B	0x0270      	SUBWF      R0, 0
0x1B5C	0x1D03      	BTFSS      STATUS, 2
0x1B5D	0x2B61      	GOTO       L__watch_swr257
0x1B5E	0x083E      	MOVF       _max_for_start, 0
0x1B5F	0x0143      	MOVLB      3
0x1B60	0x0249      	SUBWF      watch_swr_PWR_fixed_L0, 0
L__watch_swr257:
0x1B61	0x3001      	MOVLW      1
0x1B62	0x1803      	BTFSC      STATUS, 0
0x1B63	0x3000      	MOVLW      0
0x1B64	0x00F0      	MOVWF      R0
0x1B65	0x0871      	MOVF       R1, 0
0x1B66	0x05F0      	ANDWF      R0, 1
0x1B67	0x1903      	BTFSC      STATUS, 2
0x1B68	0x2BE7      	GOTO       L_watch_swr61
;main.c,223 :: 		if(SWR_fixed>=Auto_delta & ((SWR_fixed>SWR_fixed_old & (SWR_fixed-SWR_fixed_old)>delta) | (SWR_fixed<SWR_fixed_old & (SWR_fixed_old-SWR_fixed)>delta) | SWR_fixed_old==999))
0x1B69	0x0143      	MOVLB      3
0x1B6A	0x3080      	MOVLW      128
0x1B6B	0x064C      	XORWF      watch_swr_SWR_fixed_L0+1, 0
0x1B6C	0x00F5      	MOVWF      R5
0x1B6D	0x3080      	MOVLW      128
0x1B6E	0x0141      	MOVLB      1
0x1B6F	0x062D      	XORWF      _Auto_delta+1, 0
0x1B70	0x0275      	SUBWF      R5, 0
0x1B71	0x1D03      	BTFSS      STATUS, 2
0x1B72	0x2B76      	GOTO       L__watch_swr258
0x1B73	0x082C      	MOVF       _Auto_delta, 0
0x1B74	0x0143      	MOVLB      3
0x1B75	0x024B      	SUBWF      watch_swr_SWR_fixed_L0, 0
L__watch_swr258:
0x1B76	0x3001      	MOVLW      1
0x1B77	0x1C03      	BTFSS      STATUS, 0
0x1B78	0x3000      	MOVLW      0
0x1B79	0x00F5      	MOVWF      R5
0x1B7A	0x3080      	MOVLW      128
0x1B7B	0x0142      	MOVLB      2
0x1B7C	0x066D      	XORWF      _SWR_fixed_old+1, 0
0x1B7D	0x00F3      	MOVWF      R3
0x1B7E	0x3080      	MOVLW      128
0x1B7F	0x0143      	MOVLB      3
0x1B80	0x064C      	XORWF      watch_swr_SWR_fixed_L0+1, 0
0x1B81	0x0273      	SUBWF      R3, 0
0x1B82	0x1D03      	BTFSS      STATUS, 2
0x1B83	0x2B87      	GOTO       L__watch_swr259
0x1B84	0x084B      	MOVF       watch_swr_SWR_fixed_L0, 0
0x1B85	0x0142      	MOVLB      2
0x1B86	0x026C      	SUBWF      _SWR_fixed_old, 0
L__watch_swr259:
0x1B87	0x0142      	MOVLB      2
0x1B88	0x3001      	MOVLW      1
0x1B89	0x1803      	BTFSC      STATUS, 0
0x1B8A	0x3000      	MOVLW      0
0x1B8B	0x00F3      	MOVWF      R3
0x1B8C	0x086C      	MOVF       _SWR_fixed_old, 0
0x1B8D	0x0143      	MOVLB      3
0x1B8E	0x024B      	SUBWF      watch_swr_SWR_fixed_L0, 0
0x1B8F	0x00F1      	MOVWF      R1
0x1B90	0x0142      	MOVLB      2
0x1B91	0x086D      	MOVF       _SWR_fixed_old+1, 0
0x1B92	0x0143      	MOVLB      3
0x1B93	0x3B4C      	SUBWFB     watch_swr_SWR_fixed_L0+1, 0
0x1B94	0x00F2      	MOVWF      R2
0x1B95	0x3080      	MOVLW      128
0x1B96	0x0648      	XORWF      watch_swr_delta_L0+1, 0
0x1B97	0x00F0      	MOVWF      R0
0x1B98	0x3080      	MOVLW      128
0x1B99	0x0672      	XORWF      R2, 0
0x1B9A	0x0270      	SUBWF      R0, 0
0x1B9B	0x1D03      	BTFSS      STATUS, 2
0x1B9C	0x2B9F      	GOTO       L__watch_swr260
0x1B9D	0x0871      	MOVF       R1, 0
0x1B9E	0x0247      	SUBWF      watch_swr_delta_L0, 0
L__watch_swr260:
0x1B9F	0x3001      	MOVLW      1
0x1BA0	0x1803      	BTFSC      STATUS, 0
0x1BA1	0x3000      	MOVLW      0
0x1BA2	0x00F0      	MOVWF      R0
0x1BA3	0x0870      	MOVF       R0, 0
0x1BA4	0x0573      	ANDWF      R3, 0
0x1BA5	0x00F4      	MOVWF      R4
0x1BA6	0x3080      	MOVLW      128
0x1BA7	0x064C      	XORWF      watch_swr_SWR_fixed_L0+1, 0
0x1BA8	0x00F3      	MOVWF      R3
0x1BA9	0x3080      	MOVLW      128
0x1BAA	0x0142      	MOVLB      2
0x1BAB	0x066D      	XORWF      _SWR_fixed_old+1, 0
0x1BAC	0x0273      	SUBWF      R3, 0
0x1BAD	0x1D03      	BTFSS      STATUS, 2
0x1BAE	0x2BB2      	GOTO       L__watch_swr261
0x1BAF	0x086C      	MOVF       _SWR_fixed_old, 0
0x1BB0	0x0143      	MOVLB      3
0x1BB1	0x024B      	SUBWF      watch_swr_SWR_fixed_L0, 0
L__watch_swr261:
0x1BB2	0x0143      	MOVLB      3
0x1BB3	0x3001      	MOVLW      1
0x1BB4	0x1803      	BTFSC      STATUS, 0
0x1BB5	0x3000      	MOVLW      0
0x1BB6	0x00F3      	MOVWF      R3
0x1BB7	0x084B      	MOVF       watch_swr_SWR_fixed_L0, 0
0x1BB8	0x0142      	MOVLB      2
0x1BB9	0x026C      	SUBWF      _SWR_fixed_old, 0
0x1BBA	0x00F1      	MOVWF      R1
0x1BBB	0x0143      	MOVLB      3
0x1BBC	0x084C      	MOVF       watch_swr_SWR_fixed_L0+1, 0
0x1BBD	0x0142      	MOVLB      2
0x1BBE	0x3B6D      	SUBWFB     _SWR_fixed_old+1, 0
0x1BBF	0x00F2      	MOVWF      R2
0x1BC0	0x3080      	MOVLW      128
0x1BC1	0x0143      	MOVLB      3
0x1BC2	0x0648      	XORWF      watch_swr_delta_L0+1, 0
0x1BC3	0x00F0      	MOVWF      R0
0x1BC4	0x3080      	MOVLW      128
0x1BC5	0x0672      	XORWF      R2, 0
0x1BC6	0x0270      	SUBWF      R0, 0
0x1BC7	0x1D03      	BTFSS      STATUS, 2
0x1BC8	0x2BCB      	GOTO       L__watch_swr262
0x1BC9	0x0871      	MOVF       R1, 0
0x1BCA	0x0247      	SUBWF      watch_swr_delta_L0, 0
L__watch_swr262:
0x1BCB	0x3001      	MOVLW      1
0x1BCC	0x1803      	BTFSC      STATUS, 0
0x1BCD	0x3000      	MOVLW      0
0x1BCE	0x00F0      	MOVWF      R0
0x1BCF	0x0873      	MOVF       R3, 0
0x1BD0	0x05F0      	ANDWF      R0, 1
0x1BD1	0x0870      	MOVF       R0, 0
0x1BD2	0x0474      	IORWF       R4, 0
0x1BD3	0x00F1      	MOVWF      R1
0x1BD4	0x0142      	MOVLB      2
0x1BD5	0x086D      	MOVF       _SWR_fixed_old+1, 0
0x1BD6	0x3A03      	XORLW      3
0x1BD7	0x1D03      	BTFSS      STATUS, 2
0x1BD8	0x2BDB      	GOTO       L__watch_swr263
0x1BD9	0x30E7      	MOVLW      231
0x1BDA	0x066C      	XORWF      _SWR_fixed_old, 0
L__watch_swr263:
0x1BDB	0x3001      	MOVLW      1
0x1BDC	0x1D03      	BTFSS      STATUS, 2
0x1BDD	0x3000      	MOVLW      0
0x1BDE	0x00F0      	MOVWF      R0
0x1BDF	0x0871      	MOVF       R1, 0
0x1BE0	0x04F0      	IORWF       R0, 1
0x1BE1	0x0875      	MOVF       R5, 0
0x1BE2	0x05F0      	ANDWF      R0, 1
0x1BE3	0x1903      	BTFSC      STATUS, 2
0x1BE4	0x2BE7      	GOTO       L_watch_swr62
;main.c,224 :: 		{ Btn_long(); return; }
0x1BE5	0x2182      	CALL       _Btn_long
0x1BE6	0x2C29      	GOTO       L_end_watch_swr
L_watch_swr62:
;main.c,225 :: 		}
L_watch_swr61:
;main.c,226 :: 		if(SWR_fixed!=SWR_fixed_old){
0x1BE7	0x0143      	MOVLB      3
0x1BE8	0x084C      	MOVF       watch_swr_SWR_fixed_L0+1, 0
0x1BE9	0x0142      	MOVLB      2
0x1BEA	0x066D      	XORWF      _SWR_fixed_old+1, 0
0x1BEB	0x1D03      	BTFSS      STATUS, 2
0x1BEC	0x2BF0      	GOTO       L__watch_swr264
0x1BED	0x086C      	MOVF       _SWR_fixed_old, 0
0x1BEE	0x0143      	MOVLB      3
0x1BEF	0x064B      	XORWF      watch_swr_SWR_fixed_L0, 0
L__watch_swr264:
0x1BF0	0x1903      	BTFSC      STATUS, 2
0x1BF1	0x2C0A      	GOTO       L_watch_swr63
;main.c,227 :: 		SWR_fixed_old = SWR_fixed;
0x1BF2	0x0143      	MOVLB      3
0x1BF3	0x084B      	MOVF       watch_swr_SWR_fixed_L0, 0
0x1BF4	0x0142      	MOVLB      2
0x1BF5	0x00EC      	MOVWF      _SWR_fixed_old
0x1BF6	0x0143      	MOVLB      3
0x1BF7	0x084C      	MOVF       watch_swr_SWR_fixed_L0+1, 0
0x1BF8	0x0142      	MOVLB      2
0x1BF9	0x00ED      	MOVWF      _SWR_fixed_old+1
;main.c,228 :: 		draw_swr(SWR_fixed);
0x1BFA	0x0143      	MOVLB      3
0x1BFB	0x084B      	MOVF       watch_swr_SWR_fixed_L0, 0
0x1BFC	0x00D6      	MOVWF      FARG_draw_swr_s
0x1BFD	0x084C      	MOVF       watch_swr_SWR_fixed_L0+1, 0
0x1BFE	0x00D7      	MOVWF      FARG_draw_swr_s+1
0x1BFF	0x3190      	MOVLP      16
0x1C00	0x25D0      	CALL       _draw_swr
0x1C01	0x3198      	MOVLP      24
;main.c,229 :: 		SWR_ind = SWR_fixed;
0x1C02	0x0143      	MOVLB      3
0x1C03	0x084B      	MOVF       watch_swr_SWR_fixed_L0, 0
0x1C04	0x0141      	MOVLB      1
0x1C05	0x00EC      	MOVWF      _SWR_ind
0x1C06	0x0143      	MOVLB      3
0x1C07	0x084C      	MOVF       watch_swr_SWR_fixed_L0+1, 0
0x1C08	0x0141      	MOVLB      1
0x1C09	0x00ED      	MOVWF      _SWR_ind+1
;main.c,230 :: 		}
L_watch_swr63:
;main.c,231 :: 		}
0x1C0A	0x2C29      	GOTO       L_watch_swr64
L_watch_swr60:
0x1C0B	0x0141      	MOVLB      1
;main.c,232 :: 		else if(SWR_ind!=SWR_ind_old){
0x1C0C	0x086D      	MOVF       _SWR_ind+1, 0
0x1C0D	0x0142      	MOVLB      2
0x1C0E	0x0669      	XORWF      _SWR_ind_old+1, 0
0x1C0F	0x1D03      	BTFSS      STATUS, 2
0x1C10	0x2C14      	GOTO       L__watch_swr265
0x1C11	0x0868      	MOVF       _SWR_ind_old, 0
0x1C12	0x0141      	MOVLB      1
0x1C13	0x066C      	XORWF      _SWR_ind, 0
L__watch_swr265:
0x1C14	0x1903      	BTFSC      STATUS, 2
0x1C15	0x2C29      	GOTO       L_watch_swr65
;main.c,233 :: 		SWR_ind_old = SWR_ind;
0x1C16	0x0141      	MOVLB      1
0x1C17	0x086C      	MOVF       _SWR_ind, 0
0x1C18	0x0142      	MOVLB      2
0x1C19	0x00E8      	MOVWF      _SWR_ind_old
0x1C1A	0x0141      	MOVLB      1
0x1C1B	0x086D      	MOVF       _SWR_ind+1, 0
0x1C1C	0x0142      	MOVLB      2
0x1C1D	0x00E9      	MOVWF      _SWR_ind_old+1
;main.c,234 :: 		draw_swr(SWR_ind);
0x1C1E	0x0141      	MOVLB      1
0x1C1F	0x086C      	MOVF       _SWR_ind, 0
0x1C20	0x0143      	MOVLB      3
0x1C21	0x00D6      	MOVWF      FARG_draw_swr_s
0x1C22	0x0141      	MOVLB      1
0x1C23	0x086D      	MOVF       _SWR_ind+1, 0
0x1C24	0x0143      	MOVLB      3
0x1C25	0x00D7      	MOVWF      FARG_draw_swr_s+1
0x1C26	0x3190      	MOVLP      16
0x1C27	0x25D0      	CALL       _draw_swr
0x1C28	0x3198      	MOVLP      24
;main.c,235 :: 		}
L_watch_swr65:
L_watch_swr64:
L_watch_swr59:
;main.c,237 :: 		return;
;main.c,238 :: 		}
L_end_watch_swr:
0x1C29	0x0008      	RETURN
; end of _watch_swr
_Voltage_show:
;main.c,284 :: 		void Voltage_show(){
;main.c,285 :: 		get_batt();
0x1C2A	0x3180      	MOVLP      0
0x1C2B	0x26C1      	CALL       _get_batt
0x1C2C	0x3198      	MOVLP      24
;main.c,286 :: 		if(Voltage != Voltage_old) { Voltage_old = Voltage; oled_voltage(Voltage); }
0x1C2D	0x0821      	MOVF       _Voltage+1, 0
0x1C2E	0x0141      	MOVLB      1
0x1C2F	0x066F      	XORWF      _Voltage_old+1, 0
0x1C30	0x1D03      	BTFSS      STATUS, 2
0x1C31	0x2C35      	GOTO       L__Voltage_show273
0x1C32	0x086E      	MOVF       _Voltage_old, 0
0x1C33	0x0143      	MOVLB      3
0x1C34	0x0620      	XORWF      _Voltage, 0
L__Voltage_show273:
0x1C35	0x1903      	BTFSC      STATUS, 2
0x1C36	0x2C45      	GOTO       L_Voltage_show74
0x1C37	0x0143      	MOVLB      3
0x1C38	0x0820      	MOVF       _Voltage, 0
0x1C39	0x0141      	MOVLB      1
0x1C3A	0x00EE      	MOVWF      _Voltage_old
0x1C3B	0x0143      	MOVLB      3
0x1C3C	0x0821      	MOVF       _Voltage+1, 0
0x1C3D	0x0141      	MOVLB      1
0x1C3E	0x00EF      	MOVWF      _Voltage_old+1
0x1C3F	0x0143      	MOVLB      3
0x1C40	0x0820      	MOVF       _Voltage, 0
0x1C41	0x00CD      	MOVWF      FARG_oled_voltage_Voltage
0x1C42	0x0821      	MOVF       _Voltage+1, 0
0x1C43	0x00CE      	MOVWF      FARG_oled_voltage_Voltage+1
0x1C44	0x2000      	CALL       _oled_voltage
L_Voltage_show74:
;main.c,288 :: 		if(Voltage>3700){
0x1C45	0x3080      	MOVLW      128
0x1C46	0x3A0E      	XORLW      14
0x1C47	0x00F0      	MOVWF      R0
0x1C48	0x3080      	MOVLW      128
0x1C49	0x0143      	MOVLB      3
0x1C4A	0x0621      	XORWF      _Voltage+1, 0
0x1C4B	0x0270      	SUBWF      R0, 0
0x1C4C	0x1D03      	BTFSS      STATUS, 2
0x1C4D	0x2C50      	GOTO       L__Voltage_show274
0x1C4E	0x0820      	MOVF       _Voltage, 0
0x1C4F	0x3C74      	SUBLW      116
L__Voltage_show274:
0x1C50	0x1803      	BTFSC      STATUS, 0
0x1C51	0x2C64      	GOTO       L_Voltage_show75
;main.c,289 :: 		Green = 0;
0x1C52	0x0140      	MOVLB      0
0x1C53	0x1197      	BCF        LATB3_bit, BitPos(LATB3_bit+0)
;main.c,290 :: 		Red = 1;
0x1C54	0x1617      	BSF        LATB4_bit, BitPos(LATB4_bit+0)
;main.c,291 :: 		Delay_ms(30);
0x1C55	0x3002      	MOVLW      2
0x1C56	0x00FB      	MOVWF      R11
0x1C57	0x3038      	MOVLW      56
0x1C58	0x00FC      	MOVWF      R12
0x1C59	0x30AD      	MOVLW      173
0x1C5A	0x00FD      	MOVWF      R13
L_Voltage_show76:
0x1C5B	0x0BFD      	DECFSZ     R13, 1
0x1C5C	0x2C5B      	GOTO       L_Voltage_show76
0x1C5D	0x0BFC      	DECFSZ     R12, 1
0x1C5E	0x2C5B      	GOTO       L_Voltage_show76
0x1C5F	0x0BFB      	DECFSZ     R11, 1
0x1C60	0x2C5B      	GOTO       L_Voltage_show76
;main.c,292 :: 		Green = 1;
0x1C61	0x1597      	BSF        LATB3_bit, BitPos(LATB3_bit+0)
;main.c,293 :: 		Red = 1;
0x1C62	0x1617      	BSF        LATB4_bit, BitPos(LATB4_bit+0)
;main.c,294 :: 		}
0x1C63	0x2C94      	GOTO       L_Voltage_show77
L_Voltage_show75:
;main.c,295 :: 		else if(Voltage>3590){
0x1C64	0x3080      	MOVLW      128
0x1C65	0x3A0E      	XORLW      14
0x1C66	0x00F0      	MOVWF      R0
0x1C67	0x3080      	MOVLW      128
0x1C68	0x0143      	MOVLB      3
0x1C69	0x0621      	XORWF      _Voltage+1, 0
0x1C6A	0x0270      	SUBWF      R0, 0
0x1C6B	0x1D03      	BTFSS      STATUS, 2
0x1C6C	0x2C6F      	GOTO       L__Voltage_show275
0x1C6D	0x0820      	MOVF       _Voltage, 0
0x1C6E	0x3C06      	SUBLW      6
L__Voltage_show275:
0x1C6F	0x1803      	BTFSC      STATUS, 0
0x1C70	0x2C83      	GOTO       L_Voltage_show78
;main.c,296 :: 		Green = 0;
0x1C71	0x0140      	MOVLB      0
0x1C72	0x1197      	BCF        LATB3_bit, BitPos(LATB3_bit+0)
;main.c,297 :: 		Red = 0;
0x1C73	0x1217      	BCF        LATB4_bit, BitPos(LATB4_bit+0)
;main.c,298 :: 		Delay_ms(30);
0x1C74	0x3002      	MOVLW      2
0x1C75	0x00FB      	MOVWF      R11
0x1C76	0x3038      	MOVLW      56
0x1C77	0x00FC      	MOVWF      R12
0x1C78	0x30AD      	MOVLW      173
0x1C79	0x00FD      	MOVWF      R13
L_Voltage_show79:
0x1C7A	0x0BFD      	DECFSZ     R13, 1
0x1C7B	0x2C7A      	GOTO       L_Voltage_show79
0x1C7C	0x0BFC      	DECFSZ     R12, 1
0x1C7D	0x2C7A      	GOTO       L_Voltage_show79
0x1C7E	0x0BFB      	DECFSZ     R11, 1
0x1C7F	0x2C7A      	GOTO       L_Voltage_show79
;main.c,299 :: 		Green = 1;
0x1C80	0x1597      	BSF        LATB3_bit, BitPos(LATB3_bit+0)
;main.c,300 :: 		Red = 1;
0x1C81	0x1617      	BSF        LATB4_bit, BitPos(LATB4_bit+0)
;main.c,301 :: 		}
0x1C82	0x2C94      	GOTO       L_Voltage_show80
L_Voltage_show78:
0x1C83	0x0140      	MOVLB      0
;main.c,303 :: 		Red = 0;
0x1C84	0x1217      	BCF        LATB4_bit, BitPos(LATB4_bit+0)
;main.c,304 :: 		Green = 1;
0x1C85	0x1597      	BSF        LATB3_bit, BitPos(LATB3_bit+0)
;main.c,305 :: 		Delay_ms(30);
0x1C86	0x3002      	MOVLW      2
0x1C87	0x00FB      	MOVWF      R11
0x1C88	0x3038      	MOVLW      56
0x1C89	0x00FC      	MOVWF      R12
0x1C8A	0x30AD      	MOVLW      173
0x1C8B	0x00FD      	MOVWF      R13
L_Voltage_show81:
0x1C8C	0x0BFD      	DECFSZ     R13, 1
0x1C8D	0x2C8C      	GOTO       L_Voltage_show81
0x1C8E	0x0BFC      	DECFSZ     R12, 1
0x1C8F	0x2C8C      	GOTO       L_Voltage_show81
0x1C90	0x0BFB      	DECFSZ     R11, 1
0x1C91	0x2C8C      	GOTO       L_Voltage_show81
;main.c,306 :: 		Red = 1;
0x1C92	0x1617      	BSF        LATB4_bit, BitPos(LATB4_bit+0)
;main.c,307 :: 		Green = 1;
0x1C93	0x1597      	BSF        LATB3_bit, BitPos(LATB3_bit+0)
;main.c,308 :: 		}
L_Voltage_show80:
L_Voltage_show77:
;main.c,310 :: 		if(Voltage<3400){
0x1C94	0x3080      	MOVLW      128
0x1C95	0x0143      	MOVLB      3
0x1C96	0x0621      	XORWF      _Voltage+1, 0
0x1C97	0x00F0      	MOVWF      R0
0x1C98	0x3080      	MOVLW      128
0x1C99	0x3A0D      	XORLW      13
0x1C9A	0x0270      	SUBWF      R0, 0
0x1C9B	0x1D03      	BTFSS      STATUS, 2
0x1C9C	0x2C9F      	GOTO       L__Voltage_show276
0x1C9D	0x3048      	MOVLW      72
0x1C9E	0x0220      	SUBWF      _Voltage, 0
L__Voltage_show276:
0x1C9F	0x1803      	BTFSC      STATUS, 0
0x1CA0	0x2CC2      	GOTO       L_Voltage_show82
;main.c,311 :: 		oled_clear();
0x1CA1	0x3180      	MOVLP      0
0x1CA2	0x227C      	CALL       _oled_clear
0x1CA3	0x3198      	MOVLP      24
;main.c,312 :: 		oled_wr_str(1, 0, "  LOW BATT ", 11);
0x1CA4	0x3001      	MOVLW      1
0x1CA5	0x0144      	MOVLB      4
0x1CA6	0x00AF      	MOVWF      FARG_oled_wr_str_page
0x1CA7	0x01B0      	CLRF       FARG_oled_wr_str_col
0x1CA8	0x3030      	MOVLW      ?lstr13_main
0x1CA9	0x00B1      	MOVWF      FARG_oled_wr_str_str
0x1CAA	0x3000      	MOVLW      hi_addr(?lstr13_main)
0x1CAB	0x00B2      	MOVWF      FARG_oled_wr_str_str+1
0x1CAC	0x300B      	MOVLW      11
0x1CAD	0x00B3      	MOVWF      FARG_oled_wr_str_leng
0x1CAE	0x3180      	MOVLP      0
0x1CAF	0x232C      	CALL       _oled_wr_str
0x1CB0	0x3198      	MOVLP      24
;main.c,313 :: 		Delay_ms(2000);
0x1CB1	0x3052      	MOVLW      82
0x1CB2	0x00FB      	MOVWF      R11
0x1CB3	0x302B      	MOVLW      43
0x1CB4	0x00FC      	MOVWF      R12
0x1CB5	0x3000      	MOVLW      0
0x1CB6	0x00FD      	MOVWF      R13
L_Voltage_show83:
0x1CB7	0x0BFD      	DECFSZ     R13, 1
0x1CB8	0x2CB7      	GOTO       L_Voltage_show83
0x1CB9	0x0BFC      	DECFSZ     R12, 1
0x1CBA	0x2CB7      	GOTO       L_Voltage_show83
0x1CBB	0x0BFB      	DECFSZ     R11, 1
0x1CBC	0x2CB7      	GOTO       L_Voltage_show83
0x1CBD	0x0000      	NOP
;main.c,314 :: 		OLED_PWD = 0;
0x1CBE	0x1216      	BCF        LATA4_bit, BitPos(LATA4_bit+0)
;main.c,315 :: 		power_off();
0x1CBF	0x3188      	MOVLP      8
0x1CC0	0x25CF      	CALL       _power_off
0x1CC1	0x3198      	MOVLP      24
;main.c,316 :: 		}
L_Voltage_show82:
;main.c,317 :: 		return;
;main.c,318 :: 		}
L_end_Voltage_show:
0x1CC2	0x0008      	RETURN
; end of _Voltage_show
_pic_init:
;pic_init.c,5 :: 		void pic_init (void) {
;pic_init.c,7 :: 		ANSELA = 0;         // all as digital
0x1CC3	0x017E      	MOVLB      62
0x1CC4	0x01B8      	CLRF       ANSELA
;pic_init.c,8 :: 		ANSELB = 0;         // all as digital
0x1CC5	0x01C3      	CLRF       ANSELB
;pic_init.c,9 :: 		ANSB0_bit = 1;      // analog input
0x1CC6	0x1443      	BSF        ANSB0_bit, BitPos(ANSB0_bit+0)
;pic_init.c,10 :: 		ANSB1_bit = 1;      // analog input
0x1CC7	0x14C3      	BSF        ANSB1_bit, BitPos(ANSB1_bit+0)
;pic_init.c,11 :: 		ANSB2_bit = 1;      // analog input
0x1CC8	0x1543      	BSF        ANSB2_bit, BitPos(ANSB2_bit+0)
;pic_init.c,12 :: 		ANSELC = 0;         // all as digital
0x1CC9	0x01CE      	CLRF       ANSELC
;pic_init.c,13 :: 		ANSELE = 0;         // all as digital
0x1CCA	0x01E4      	CLRF       ANSELE
;pic_init.c,14 :: 		ANSELD = 0;         // all as digital
0x1CCB	0x01D9      	CLRF       ANSELD
;pic_init.c,16 :: 		C1ON_bit = 0;      // Disable comparators
0x1CCC	0x0153      	MOVLB      19
0x1CCD	0x1390      	BCF        C1ON_bit, BitPos(C1ON_bit+0)
;pic_init.c,17 :: 		C2ON_bit = 0;
0x1CCE	0x1394      	BCF        C2ON_bit, BitPos(C2ON_bit+0)
;pic_init.c,19 :: 		PORTA = 0;
0x1CCF	0x0140      	MOVLB      0
0x1CD0	0x018C      	CLRF       PORTA
;pic_init.c,20 :: 		PORTB = 0;
0x1CD1	0x018D      	CLRF       PORTB
;pic_init.c,21 :: 		PORTC = 0;
0x1CD2	0x018E      	CLRF       PORTC
;pic_init.c,22 :: 		PORTD = 0;
0x1CD3	0x018F      	CLRF       PORTD
;pic_init.c,23 :: 		PORTE = 0;
0x1CD4	0x0190      	CLRF       PORTE
;pic_init.c,24 :: 		LATA = 0b00000000;
0x1CD5	0x0196      	CLRF       LATA
;pic_init.c,25 :: 		LATB = 0b00000000;
0x1CD6	0x0197      	CLRF       LATB
;pic_init.c,26 :: 		LATC = 0b00010000;
0x1CD7	0x3010      	MOVLW      16
0x1CD8	0x0098      	MOVWF      LATC
;pic_init.c,27 :: 		LATD = 0b00000110;
0x1CD9	0x3006      	MOVLW      6
0x1CDA	0x0099      	MOVWF      LATD
;pic_init.c,28 :: 		LATE = 0b00000000;
0x1CDB	0x019A      	CLRF       LATE
;pic_init.c,29 :: 		TRISA = 0b00000000;
0x1CDC	0x0191      	CLRF       TRISA
;pic_init.c,30 :: 		TRISB = 0b00100111;
0x1CDD	0x3027      	MOVLW      39
0x1CDE	0x0092      	MOVWF      TRISB
;pic_init.c,31 :: 		TRISC = 0b00000000;
0x1CDF	0x0193      	CLRF       TRISC
;pic_init.c,32 :: 		TRISD = 0b00000000;
0x1CE0	0x0194      	CLRF       TRISD
;pic_init.c,33 :: 		TRISE = 0b00000000;
0x1CE1	0x0195      	CLRF       TRISE
;pic_init.c,36 :: 		ODCA2_bit = 1;
0x1CE2	0x017E      	MOVLB      62
0x1CE3	0x153A      	BSF        ODCA2_bit, BitPos(ODCA2_bit+0)
;pic_init.c,37 :: 		ODCA3_bit = 1;
0x1CE4	0x15BA      	BSF        ODCA3_bit, BitPos(ODCA3_bit+0)
;pic_init.c,38 :: 		ODCD1_bit = 1;
0x1CE5	0x14DB      	BSF        ODCD1_bit, BitPos(ODCD1_bit+0)
;pic_init.c,39 :: 		ODCD2_bit = 1;
0x1CE6	0x155B      	BSF        ODCD2_bit, BitPos(ODCD2_bit+0)
;pic_init.c,42 :: 		T0CS0_bit = 0; // Fosc/4
0x1CE7	0x0140      	MOVLB      0
0x1CE8	0x129F      	BCF        T0CS0_bit, BitPos(T0CS0_bit+0)
;pic_init.c,43 :: 		T0CS1_bit = 1;
0x1CE9	0x171F      	BSF        T0CS1_bit, BitPos(T0CS1_bit+0)
;pic_init.c,44 :: 		T0CS2_bit = 0;
0x1CEA	0x139F      	BCF        T0CS2_bit, BitPos(T0CS2_bit+0)
;pic_init.c,45 :: 		T016BIT_bit = 1;
0x1CEB	0x161E      	BSF        T016BIT_bit, BitPos(T016BIT_bit+0)
;pic_init.c,46 :: 		TMR0L = 0xC0;   // 80_000 cycles to OF
0x1CEC	0x30C0      	MOVLW      192
0x1CED	0x009C      	MOVWF      TMR0L
;pic_init.c,47 :: 		TMR0H = 0xE0;
0x1CEE	0x30E0      	MOVLW      224
0x1CEF	0x009D      	MOVWF      TMR0H
;pic_init.c,48 :: 		TMR0IF_bit = 0;
0x1CF0	0x014E      	MOVLB      14
0x1CF1	0x128C      	BCF        TMR0IF_bit, BitPos(TMR0IF_bit+0)
;pic_init.c,49 :: 		T0EN_bit = 1;
0x1CF2	0x0140      	MOVLB      0
0x1CF3	0x179E      	BSF        T0EN_bit, BitPos(T0EN_bit+0)
;pic_init.c,50 :: 		TMR0IE_bit = 1;
0x1CF4	0x014E      	MOVLB      14
0x1CF5	0x1696      	BSF        TMR0IE_bit, BitPos(TMR0IE_bit+0)
;pic_init.c,53 :: 		PMD0 = 0b00011110; //
0x1CF6	0x301E      	MOVLW      30
0x1CF7	0x014F      	MOVLB      15
0x1CF8	0x0096      	MOVWF      PMD0
;pic_init.c,54 :: 		PMD1 = 0b11111110;
0x1CF9	0x30FE      	MOVLW      254
0x1CFA	0x0097      	MOVWF      PMD1
;pic_init.c,55 :: 		PMD2 = 0b01000111;
0x1CFB	0x3047      	MOVLW      71
0x1CFC	0x0098      	MOVWF      PMD2
;pic_init.c,56 :: 		PMD3 = 0b01111111;
0x1CFD	0x307F      	MOVLW      127
0x1CFE	0x0099      	MOVWF      PMD3
;pic_init.c,57 :: 		PMD4 = 0b1110111;
0x1CFF	0x3077      	MOVLW      119
0x1D00	0x009A      	MOVWF      PMD4
;pic_init.c,58 :: 		PMD5 = 0b11011111;
0x1D01	0x30DF      	MOVLW      223
0x1D02	0x009B      	MOVWF      PMD5
;pic_init.c,60 :: 		GIE_bit = 1;
0x1D03	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;pic_init.c,61 :: 		Delay_ms (100);
0x1D04	0x3005      	MOVLW      5
0x1D05	0x00FB      	MOVWF      R11
0x1D06	0x300F      	MOVLW      15
0x1D07	0x00FC      	MOVWF      R12
0x1D08	0x30F1      	MOVLW      241
0x1D09	0x00FD      	MOVWF      R13
L_pic_init0:
0x1D0A	0x0BFD      	DECFSZ     R13, 1
0x1D0B	0x2D0A      	GOTO       L_pic_init0
0x1D0C	0x0BFC      	DECFSZ     R12, 1
0x1D0D	0x2D0A      	GOTO       L_pic_init0
0x1D0E	0x0BFB      	DECFSZ     R11, 1
0x1D0F	0x2D0A      	GOTO       L_pic_init0
;pic_init.c,62 :: 		return;
;pic_init.c,63 :: 		}
L_end_pic_init:
0x1D10	0x0008      	RETURN
; end of _pic_init
_main:
0x1D11	0x31A0      	MOVLP      32
0x1D12	0x20E0      	CALL       8416
0x1D13	0x3198      	MOVLP      24
;main.c,74 :: 		void main() {
;main.c,75 :: 		pic_init();
0x1D14	0x24C3      	CALL       _pic_init
;main.c,76 :: 		Red = 1;
0x1D15	0x0140      	MOVLB      0
0x1D16	0x1617      	BSF        LATB4_bit, BitPos(LATB4_bit+0)
;main.c,77 :: 		Key_out = 1;
0x1D17	0x1519      	BSF        LATD2_bit, BitPos(LATD2_bit+0)
;main.c,78 :: 		gre = 1;
0x1D18	0x0143      	MOVLB      3
0x1D19	0x1726      	BSF        _gre, BitPos(_gre+0)
;main.c,79 :: 		oled_start();
0x1D1A	0x3180      	MOVLP      0
0x1D1B	0x26DD      	CALL       _oled_start
0x1D1C	0x3198      	MOVLP      24
;main.c,81 :: 		ADC_Init();
0x1D1D	0x3190      	MOVLP      16
0x1D1E	0x27CE      	CALL       _ADC_Init
0x1D1F	0x3198      	MOVLP      24
;main.c,82 :: 		Overflow = 0;
0x1D20	0x0143      	MOVLB      3
0x1D21	0x1026      	BCF        _Overflow, BitPos(_Overflow+0)
;main.c,83 :: 		B_short = 0;
0x1D22	0x12A6      	BCF        _B_short, BitPos(_B_short+0)
;main.c,84 :: 		B_long = 0;
0x1D23	0x1226      	BCF        _B_long, BitPos(_B_long+0)
;main.c,85 :: 		B_xlong = 0;
0x1D24	0x11A6      	BCF        _B_xlong, BitPos(_B_xlong+0)
;main.c,86 :: 		E_short = 0;
0x1D25	0x1126      	BCF        _E_short, BitPos(_E_short+0)
;main.c,87 :: 		E_long = 0;
0x1D26	0x10A6      	BCF        _E_long, BitPos(_E_long+0)
;main.c,89 :: 		disp_cnt = Tick + Disp_time*1000;
0x1D27	0x0142      	MOVLB      2
0x1D28	0x0854      	MOVF       _Disp_time, 0
0x1D29	0x00F0      	MOVWF      R0
0x1D2A	0x0855      	MOVF       _Disp_time+1, 0
0x1D2B	0x00F1      	MOVWF      R1
0x1D2C	0x0856      	MOVF       _Disp_time+2, 0
0x1D2D	0x00F2      	MOVWF      R2
0x1D2E	0x0857      	MOVF       _Disp_time+3, 0
0x1D2F	0x00F3      	MOVWF      R3
0x1D30	0x30E8      	MOVLW      232
0x1D31	0x00F4      	MOVWF      R4
0x1D32	0x3003      	MOVLW      3
0x1D33	0x00F5      	MOVWF      R5
0x1D34	0x01F6      	CLRF       R6
0x1D35	0x01F7      	CLRF       R7
0x1D36	0x3180      	MOVLP      0
0x1D37	0x2209      	CALL       _Mul_32x32_U
0x1D38	0x3198      	MOVLP      24
0x1D39	0x0870      	MOVF       R0, 0
0x1D3A	0x0142      	MOVLB      2
0x1D3B	0x0758      	ADDWF      _Tick, 0
0x1D3C	0x0143      	MOVLB      3
0x1D3D	0x00C1      	MOVWF      _disp_cnt
0x1D3E	0x0871      	MOVF       R1, 0
0x1D3F	0x0142      	MOVLB      2
0x1D40	0x3D59      	ADDWFC     _Tick+1, 0
0x1D41	0x0143      	MOVLB      3
0x1D42	0x00C2      	MOVWF      _disp_cnt+1
0x1D43	0x0872      	MOVF       R2, 0
0x1D44	0x0142      	MOVLB      2
0x1D45	0x3D5A      	ADDWFC     _Tick+2, 0
0x1D46	0x0143      	MOVLB      3
0x1D47	0x00C3      	MOVWF      _disp_cnt+2
0x1D48	0x0873      	MOVF       R3, 0
0x1D49	0x0142      	MOVLB      2
0x1D4A	0x3D5B      	ADDWFC     _Tick+3, 0
0x1D4B	0x0143      	MOVLB      3
0x1D4C	0x00C4      	MOVWF      _disp_cnt+3
;main.c,90 :: 		off_cnt = Tick + Off_time*1000;
0x1D4D	0x0140      	MOVLB      0
0x1D4E	0x0850      	MOVF       _Off_time, 0
0x1D4F	0x00F0      	MOVWF      R0
0x1D50	0x0851      	MOVF       _Off_time+1, 0
0x1D51	0x00F1      	MOVWF      R1
0x1D52	0x0852      	MOVF       _Off_time+2, 0
0x1D53	0x00F2      	MOVWF      R2
0x1D54	0x0853      	MOVF       _Off_time+3, 0
0x1D55	0x00F3      	MOVWF      R3
0x1D56	0x30E8      	MOVLW      232
0x1D57	0x00F4      	MOVWF      R4
0x1D58	0x3003      	MOVLW      3
0x1D59	0x00F5      	MOVWF      R5
0x1D5A	0x01F6      	CLRF       R6
0x1D5B	0x01F7      	CLRF       R7
0x1D5C	0x3180      	MOVLP      0
0x1D5D	0x2209      	CALL       _Mul_32x32_U
0x1D5E	0x3198      	MOVLP      24
0x1D5F	0x0870      	MOVF       R0, 0
0x1D60	0x0142      	MOVLB      2
0x1D61	0x0758      	ADDWF      _Tick, 0
0x1D62	0x0143      	MOVLB      3
0x1D63	0x00A2      	MOVWF      _off_cnt
0x1D64	0x0871      	MOVF       R1, 0
0x1D65	0x0142      	MOVLB      2
0x1D66	0x3D59      	ADDWFC     _Tick+1, 0
0x1D67	0x0143      	MOVLB      3
0x1D68	0x00A3      	MOVWF      _off_cnt+1
0x1D69	0x0872      	MOVF       R2, 0
0x1D6A	0x0142      	MOVLB      2
0x1D6B	0x3D5A      	ADDWFC     _Tick+2, 0
0x1D6C	0x0143      	MOVLB      3
0x1D6D	0x00A4      	MOVWF      _off_cnt+2
0x1D6E	0x0873      	MOVF       R3, 0
0x1D6F	0x0142      	MOVLB      2
0x1D70	0x3D5B      	ADDWFC     _Tick+3, 0
0x1D71	0x0143      	MOVLB      3
0x1D72	0x00A5      	MOVWF      _off_cnt+3
;main.c,95 :: 		while(1) {
L_main16:
;main.c,96 :: 		if(Tick>=volt_cnt){   // every 3 second
0x1D73	0x0142      	MOVLB      2
0x1D74	0x0863      	MOVF       _volt_cnt+3, 0
0x1D75	0x025B      	SUBWF      _Tick+3, 0
0x1D76	0x1D03      	BTFSS      STATUS, 2
0x1D77	0x2D82      	GOTO       L__main245
0x1D78	0x0862      	MOVF       _volt_cnt+2, 0
0x1D79	0x025A      	SUBWF      _Tick+2, 0
0x1D7A	0x1D03      	BTFSS      STATUS, 2
0x1D7B	0x2D82      	GOTO       L__main245
0x1D7C	0x0861      	MOVF       _volt_cnt+1, 0
0x1D7D	0x0259      	SUBWF      _Tick+1, 0
0x1D7E	0x1D03      	BTFSS      STATUS, 2
0x1D7F	0x2D82      	GOTO       L__main245
0x1D80	0x0860      	MOVF       _volt_cnt, 0
0x1D81	0x0258      	SUBWF      _Tick, 0
L__main245:
0x1D82	0x1C03      	BTFSS      STATUS, 0
0x1D83	0x2D8C      	GOTO       L_main18
;main.c,97 :: 		volt_cnt += 3000;
0x1D84	0x30B8      	MOVLW      184
0x1D85	0x07E0      	ADDWF      _volt_cnt, 1
0x1D86	0x300B      	MOVLW      11
0x1D87	0x3DE1      	ADDWFC     _volt_cnt+1, 1
0x1D88	0x3000      	MOVLW      0
0x1D89	0x3DE2      	ADDWFC     _volt_cnt+2, 1
0x1D8A	0x3DE3      	ADDWFC     _volt_cnt+3, 1
;main.c,98 :: 		Voltage_show();
0x1D8B	0x242A      	CALL       _Voltage_show
;main.c,99 :: 		}
L_main18:
;main.c,101 :: 		if(Tick>=watch_cnt){   // every 300 ms    unless power off
0x1D8C	0x0142      	MOVLB      2
0x1D8D	0x085F      	MOVF       _watch_cnt+3, 0
0x1D8E	0x025B      	SUBWF      _Tick+3, 0
0x1D8F	0x1D03      	BTFSS      STATUS, 2
0x1D90	0x2D9B      	GOTO       L__main246
0x1D91	0x085E      	MOVF       _watch_cnt+2, 0
0x1D92	0x025A      	SUBWF      _Tick+2, 0
0x1D93	0x1D03      	BTFSS      STATUS, 2
0x1D94	0x2D9B      	GOTO       L__main246
0x1D95	0x085D      	MOVF       _watch_cnt+1, 0
0x1D96	0x0259      	SUBWF      _Tick+1, 0
0x1D97	0x1D03      	BTFSS      STATUS, 2
0x1D98	0x2D9B      	GOTO       L__main246
0x1D99	0x085C      	MOVF       _watch_cnt, 0
0x1D9A	0x0258      	SUBWF      _Tick, 0
L__main246:
0x1D9B	0x1C03      	BTFSS      STATUS, 0
0x1D9C	0x2DA5      	GOTO       L_main19
;main.c,102 :: 		watch_cnt += 300;
0x1D9D	0x302C      	MOVLW      44
0x1D9E	0x07DC      	ADDWF      _watch_cnt, 1
0x1D9F	0x3001      	MOVLW      1
0x1DA0	0x3DDD      	ADDWFC     _watch_cnt+1, 1
0x1DA1	0x3000      	MOVLW      0
0x1DA2	0x3DDE      	ADDWFC     _watch_cnt+2, 1
0x1DA3	0x3DDF      	ADDWFC     _watch_cnt+3, 1
;main.c,103 :: 		watch_swr();
0x1DA4	0x21D5      	CALL       _watch_swr
;main.c,104 :: 		}
L_main19:
;main.c,106 :: 		if(Tick>=disp_cnt){  // Display off
0x1DA5	0x0143      	MOVLB      3
0x1DA6	0x0844      	MOVF       _disp_cnt+3, 0
0x1DA7	0x0142      	MOVLB      2
0x1DA8	0x025B      	SUBWF      _Tick+3, 0
0x1DA9	0x1D03      	BTFSS      STATUS, 2
0x1DAA	0x2DBB      	GOTO       L__main247
0x1DAB	0x0143      	MOVLB      3
0x1DAC	0x0843      	MOVF       _disp_cnt+2, 0
0x1DAD	0x0142      	MOVLB      2
0x1DAE	0x025A      	SUBWF      _Tick+2, 0
0x1DAF	0x1D03      	BTFSS      STATUS, 2
0x1DB0	0x2DBB      	GOTO       L__main247
0x1DB1	0x0143      	MOVLB      3
0x1DB2	0x0842      	MOVF       _disp_cnt+1, 0
0x1DB3	0x0142      	MOVLB      2
0x1DB4	0x0259      	SUBWF      _Tick+1, 0
0x1DB5	0x1D03      	BTFSS      STATUS, 2
0x1DB6	0x2DBB      	GOTO       L__main247
0x1DB7	0x0143      	MOVLB      3
0x1DB8	0x0841      	MOVF       _disp_cnt, 0
0x1DB9	0x0142      	MOVLB      2
0x1DBA	0x0258      	SUBWF      _Tick, 0
L__main247:
0x1DBB	0x1C03      	BTFSS      STATUS, 0
0x1DBC	0x2DBF      	GOTO       L_main20
;main.c,108 :: 		OLED_PWD = 0;
0x1DBD	0x0140      	MOVLB      0
0x1DBE	0x1216      	BCF        LATA4_bit, BitPos(LATA4_bit+0)
;main.c,109 :: 		}
L_main20:
;main.c,111 :: 		if(Tick>=off_cnt){    // Go to power off
0x1DBF	0x0143      	MOVLB      3
0x1DC0	0x0825      	MOVF       _off_cnt+3, 0
0x1DC1	0x0142      	MOVLB      2
0x1DC2	0x025B      	SUBWF      _Tick+3, 0
0x1DC3	0x1D03      	BTFSS      STATUS, 2
0x1DC4	0x2DD5      	GOTO       L__main248
0x1DC5	0x0143      	MOVLB      3
0x1DC6	0x0824      	MOVF       _off_cnt+2, 0
0x1DC7	0x0142      	MOVLB      2
0x1DC8	0x025A      	SUBWF      _Tick+2, 0
0x1DC9	0x1D03      	BTFSS      STATUS, 2
0x1DCA	0x2DD5      	GOTO       L__main248
0x1DCB	0x0143      	MOVLB      3
0x1DCC	0x0823      	MOVF       _off_cnt+1, 0
0x1DCD	0x0142      	MOVLB      2
0x1DCE	0x0259      	SUBWF      _Tick+1, 0
0x1DCF	0x1D03      	BTFSS      STATUS, 2
0x1DD0	0x2DD5      	GOTO       L__main248
0x1DD1	0x0143      	MOVLB      3
0x1DD2	0x0822      	MOVF       _off_cnt, 0
0x1DD3	0x0142      	MOVLB      2
0x1DD4	0x0258      	SUBWF      _Tick, 0
L__main248:
0x1DD5	0x1C03      	BTFSS      STATUS, 0
0x1DD6	0x2DDA      	GOTO       L_main21
;main.c,112 :: 		power_off();
0x1DD7	0x3188      	MOVLP      8
0x1DD8	0x25CF      	CALL       _power_off
0x1DD9	0x3198      	MOVLP      24
;main.c,113 :: 		}
L_main21:
0x1DDA	0x0143      	MOVLB      3
;main.c,115 :: 		if(B_short){
0x1DDB	0x1EA6      	BTFSS      _B_short, BitPos(_B_short+0)
0x1DDC	0x2DE7      	GOTO       L_main22
;main.c,116 :: 		if(OLED_PWD) Btn_short();
0x1DDD	0x0140      	MOVLB      0
0x1DDE	0x1E16      	BTFSS      LATA4_bit, BitPos(LATA4_bit+0)
0x1DDF	0x2DE4      	GOTO       L_main23
0x1DE0	0x3190      	MOVLP      16
0x1DE1	0x224C      	CALL       _Btn_short
0x1DE2	0x3198      	MOVLP      24
0x1DE3	0x2DE7      	GOTO       L_main24
L_main23:
;main.c,117 :: 		else oled_start();
0x1DE4	0x3180      	MOVLP      0
0x1DE5	0x26DD      	CALL       _oled_start
0x1DE6	0x3198      	MOVLP      24
L_main24:
;main.c,118 :: 		}
L_main22:
0x1DE7	0x0143      	MOVLB      3
;main.c,119 :: 		if(B_long){
0x1DE8	0x1E26      	BTFSS      _B_long, BitPos(_B_long+0)
0x1DE9	0x2DF2      	GOTO       L_main25
;main.c,120 :: 		if(OLED_PWD) Btn_long();
0x1DEA	0x0140      	MOVLB      0
0x1DEB	0x1E16      	BTFSS      LATA4_bit, BitPos(LATA4_bit+0)
0x1DEC	0x2DEF      	GOTO       L_main26
0x1DED	0x2182      	CALL       _Btn_long
0x1DEE	0x2DF2      	GOTO       L_main27
L_main26:
;main.c,121 :: 		else oled_start();
0x1DEF	0x3180      	MOVLP      0
0x1DF0	0x26DD      	CALL       _oled_start
0x1DF1	0x3198      	MOVLP      24
L_main27:
;main.c,122 :: 		}
L_main25:
0x1DF2	0x0143      	MOVLB      3
;main.c,123 :: 		if(B_xlong){
0x1DF3	0x1DA6      	BTFSS      _B_xlong, BitPos(_B_xlong+0)
0x1DF4	0x2DFF      	GOTO       L_main28
;main.c,124 :: 		if(OLED_PWD) Btn_xlong();
0x1DF5	0x0140      	MOVLB      0
0x1DF6	0x1E16      	BTFSS      LATA4_bit, BitPos(LATA4_bit+0)
0x1DF7	0x2DFC      	GOTO       L_main29
0x1DF8	0x3190      	MOVLP      16
0x1DF9	0x20F1      	CALL       _Btn_xlong
0x1DFA	0x3198      	MOVLP      24
0x1DFB	0x2DFF      	GOTO       L_main30
L_main29:
;main.c,125 :: 		else oled_start();
0x1DFC	0x3180      	MOVLP      0
0x1DFD	0x26DD      	CALL       _oled_start
0x1DFE	0x3198      	MOVLP      24
L_main30:
;main.c,126 :: 		}
L_main28:
;main.c,128 :: 		if(E_short){
0x1DFF	0x1D26      	BTFSS      _E_short, BitPos(_E_short+0)
0x1E00	0x2E0A      	GOTO       L_main31
;main.c,129 :: 		if(OLED_PWD==0) oled_start();
0x1E01	0x0140      	MOVLB      0
0x1E02	0x1A16      	BTFSC      LATA4_bit, BitPos(LATA4_bit+0)
0x1E03	0x2E07      	GOTO       L_main32
0x1E04	0x3180      	MOVLP      0
0x1E05	0x26DD      	CALL       _oled_start
0x1E06	0x3198      	MOVLP      24
L_main32:
;main.c,130 :: 		Btn_short();
0x1E07	0x3190      	MOVLP      16
0x1E08	0x224C      	CALL       _Btn_short
0x1E09	0x3198      	MOVLP      24
;main.c,131 :: 		}
L_main31:
;main.c,132 :: 		if(E_long){
0x1E0A	0x0143      	MOVLB      3
0x1E0B	0x1CA6      	BTFSS      _E_long, BitPos(_E_long+0)
0x1E0C	0x2E18      	GOTO       L_main33
;main.c,133 :: 		if(OLED_PWD==0) { Ext_long(); oled_start(); }
0x1E0D	0x0140      	MOVLB      0
0x1E0E	0x1A16      	BTFSC      LATA4_bit, BitPos(LATA4_bit+0)
0x1E0F	0x2E17      	GOTO       L_main34
0x1E10	0x3188      	MOVLP      8
0x1E11	0x27DC      	CALL       _Ext_long
0x1E12	0x3198      	MOVLP      24
0x1E13	0x3180      	MOVLP      0
0x1E14	0x26DD      	CALL       _oled_start
0x1E15	0x3198      	MOVLP      24
0x1E16	0x2E18      	GOTO       L_main35
L_main34:
;main.c,134 :: 		else Btn_long();
0x1E17	0x2182      	CALL       _Btn_long
L_main35:
;main.c,135 :: 		}
L_main33:
;main.c,137 :: 		} // while(1)
0x1E18	0x2D73      	GOTO       L_main16
;main.c,138 :: 		} // main
L_end_main:
0x1E19	0x2E19      	GOTO       $+0
; end of _main
0x20E0	0x3043      	MOVLW      67
0x20E1	0x0084      	MOVWF      FSR0
0x20E2	0x30A0      	MOVLW      160
0x20E3	0x0085      	MOVWF      FSR0H
0x20E4	0x303F      	MOVLW      63
0x20E5	0x00F0      	MOVWF      R0
0x20E6	0x3001      	MOVLW      1
0x20E7	0x00F1      	MOVWF      R1
0x20E8	0x302F      	MOVLW      47
0x20E9	0x0086      	MOVWF      FSR1
0x20EA	0x3000      	MOVLW      0
0x20EB	0x0087      	MOVWF      FSR1H
0x20EC	0x3188      	MOVLP      8
0x20ED	0x27EF      	CALL       4079
0x20EE	0x31A0      	MOVLP      32
0x20EF	0x30FA      	MOVLW      250
0x20F0	0x0084      	MOVWF      FSR0
0x20F1	0x3087      	MOVLW      135
0x20F2	0x0085      	MOVWF      FSR0H
0x20F3	0x3005      	MOVLW      5
0x20F4	0x00F0      	MOVWF      R0
0x20F5	0x3001      	MOVLW      1
0x20F6	0x00F1      	MOVWF      R1
0x20F7	0x30A0      	MOVLW      160
0x20F8	0x0086      	MOVWF      FSR1
0x20F9	0x3000      	MOVLW      0
0x20FA	0x0087      	MOVWF      FSR1H
0x20FB	0x3188      	MOVLP      8
0x20FC	0x27EF      	CALL       4079
0x20FD	0x31A0      	MOVLP      32
0x20FE	0x30FC      	MOVLW      252
0x20FF	0x0084      	MOVWF      FSR0
0x2100	0x308F      	MOVLW      143
0x2101	0x0085      	MOVWF      FSR0H
0x2102	0x3002      	MOVLW      2
0x2103	0x00F0      	MOVWF      R0
0x2104	0x3001      	MOVLW      1
0x2105	0x00F1      	MOVWF      R1
0x2106	0x306E      	MOVLW      110
0x2107	0x0086      	MOVWF      FSR1
0x2108	0x3000      	MOVLW      0
0x2109	0x0087      	MOVWF      FSR1H
0x210A	0x3188      	MOVLP      8
0x210B	0x27EF      	CALL       4079
0x210C	0x31A0      	MOVLP      32
0x210D	0x3000      	MOVLW      0
0x210E	0x0084      	MOVWF      FSR0
0x210F	0x30A0      	MOVLW      160
0x2110	0x0085      	MOVWF      FSR0H
0x2111	0x3043      	MOVLW      67
0x2112	0x00F0      	MOVWF      R0
0x2113	0x3001      	MOVLW      1
0x2114	0x00F1      	MOVWF      R1
0x2115	0x30A5      	MOVLW      165
0x2116	0x0086      	MOVWF      FSR1
0x2117	0x3000      	MOVLW      0
0x2118	0x0087      	MOVWF      FSR1H
0x2119	0x3188      	MOVLP      8
0x211A	0x27EF      	CALL       4079
0x211B	0x31A0      	MOVLP      32
0x211C	0x30E2      	MOVLW      226
0x211D	0x0084      	MOVWF      FSR0
0x211E	0x3097      	MOVLW      151
0x211F	0x0085      	MOVWF      FSR0H
0x2120	0x301D      	MOVLW      29
0x2121	0x00F0      	MOVWF      R0
0x2122	0x3001      	MOVLW      1
0x2123	0x00F1      	MOVWF      R1
0x2124	0x3020      	MOVLW      32
0x2125	0x0086      	MOVWF      FSR1
0x2126	0x3001      	MOVLW      1
0x2127	0x0087      	MOVWF      FSR1H
0x2128	0x3188      	MOVLP      8
0x2129	0x27EF      	CALL       4079
0x212A	0x31A0      	MOVLP      32
0x212B	0x30F8      	MOVLW      248
0x212C	0x0084      	MOVWF      FSR0
0x212D	0x308F      	MOVLW      143
0x212E	0x0085      	MOVWF      FSR0H
0x212F	0x3004      	MOVLW      4
0x2130	0x00F0      	MOVWF      R0
0x2131	0x3001      	MOVLW      1
0x2132	0x00F1      	MOVWF      R1
0x2133	0x30E8      	MOVLW      232
0x2134	0x0086      	MOVWF      FSR1
0x2135	0x3000      	MOVLW      0
0x2136	0x0087      	MOVWF      FSR1H
0x2137	0x3188      	MOVLP      8
0x2138	0x27EF      	CALL       4079
0x2139	0x31A0      	MOVLP      32
0x213A	0x30AE      	MOVLW      174
0x213B	0x0084      	MOVWF      FSR0
0x213C	0x30A0      	MOVLW      160
0x213D	0x0085      	MOVWF      FSR0H
0x213E	0x3017      	MOVLW      23
0x213F	0x00F0      	MOVWF      R0
0x2140	0x3001      	MOVLW      1
0x2141	0x00F1      	MOVWF      R1
0x2142	0x303D      	MOVLW      61
0x2143	0x0086      	MOVWF      FSR1
0x2144	0x3001      	MOVLW      1
0x2145	0x0087      	MOVWF      FSR1H
0x2146	0x3188      	MOVLP      8
0x2147	0x27EF      	CALL       4079
0x2148	0x31A0      	MOVLP      32
0x2149	0x30FE      	MOVLW      254
0x214A	0x0084      	MOVWF      FSR0
0x214B	0x308F      	MOVLW      143
0x214C	0x0085      	MOVWF      FSR0H
0x214D	0x3002      	MOVLW      2
0x214E	0x00F0      	MOVWF      R0
0x214F	0x3001      	MOVLW      1
0x2150	0x00F1      	MOVWF      R1
0x2151	0x30EC      	MOVLW      236
0x2152	0x0086      	MOVWF      FSR1
0x2153	0x3000      	MOVLW      0
0x2154	0x0087      	MOVWF      FSR1H
0x2155	0x3188      	MOVLP      8
0x2156	0x27EF      	CALL       4079
0x2157	0x31A0      	MOVLP      32
0x2158	0x30C5      	MOVLW      197
0x2159	0x0084      	MOVWF      FSR0
0x215A	0x30A0      	MOVLW      160
0x215B	0x0085      	MOVWF      FSR0H
0x215C	0x3010      	MOVLW      16
0x215D	0x00F0      	MOVWF      R0
0x215E	0x3001      	MOVLW      1
0x215F	0x00F1      	MOVWF      R1
0x2160	0x3054      	MOVLW      84
0x2161	0x0086      	MOVWF      FSR1
0x2162	0x3001      	MOVLW      1
0x2163	0x0087      	MOVWF      FSR1H
0x2164	0x3188      	MOVLP      8
0x2165	0x27EF      	CALL       4079
0x2166	0x31A0      	MOVLP      32
0x2167	0x30FB      	MOVLW      251
0x2168	0x0084      	MOVWF      FSR0
0x2169	0x309F      	MOVLW      159
0x216A	0x0085      	MOVWF      FSR0H
0x216B	0x3002      	MOVLW      2
0x216C	0x00F0      	MOVWF      R0
0x216D	0x3001      	MOVLW      1
0x216E	0x00F1      	MOVWF      R1
0x216F	0x30EE      	MOVLW      238
0x2170	0x0086      	MOVWF      FSR1
0x2171	0x3000      	MOVLW      0
0x2172	0x0087      	MOVWF      FSR1H
0x2173	0x3188      	MOVLP      8
0x2174	0x27EF      	CALL       4079
0x2175	0x31A0      	MOVLP      32
0x2176	0x30D5      	MOVLW      213
0x2177	0x0084      	MOVWF      FSR0
0x2178	0x30A0      	MOVLW      160
0x2179	0x0085      	MOVWF      FSR0H
0x217A	0x300A      	MOVLW      10
0x217B	0x00F0      	MOVWF      R0
0x217C	0x3001      	MOVLW      1
0x217D	0x00F1      	MOVWF      R1
0x217E	0x3064      	MOVLW      100
0x217F	0x0086      	MOVWF      FSR1
0x2180	0x3001      	MOVLW      1
0x2181	0x0087      	MOVWF      FSR1H
0x2182	0x3188      	MOVLP      8
0x2183	0x27EF      	CALL       4079
0x2184	0x31A0      	MOVLP      32
0x2185	0x0008      	RETURN
;main.c,0 :: ?ICS?lstr21_main
0x07FA	0x3430 ;?ICS?lstr21_main+0
0x07FB	0x342E ;?ICS?lstr21_main+1
0x07FC	0x3430 ;?ICS?lstr21_main+2
0x07FD	0x3430 ;?ICS?lstr21_main+3
0x07FE	0x3400 ;?ICS?lstr21_main+4
; end of ?ICS?lstr21_main
;main.c,0 :: ?ICS?lstr24_main
0x0FF8	0x3431 ;?ICS?lstr24_main+0
0x0FF9	0x342E ;?ICS?lstr24_main+1
0x0FFA	0x3432 ;?ICS?lstr24_main+2
0x0FFB	0x3400 ;?ICS?lstr24_main+3
; end of ?ICS?lstr24_main
;main.c,0 :: ?ICS?lstr17_main
0x0FFC	0x343D ;?ICS?lstr17_main+0
0x0FFD	0x3400 ;?ICS?lstr17_main+1
; end of ?ICS?lstr17_main
;main.c,0 :: ?ICS_SWR_ind
0x0FFE	0x3400 ;?ICS_SWR_ind+0
0x0FFF	0x3400 ;?ICS_SWR_ind+1
; end of ?ICS_SWR_ind
;main.c,0 :: ?ICS?lstr22_main
0x17E2	0x3420 ;?ICS?lstr22_main+0
0x17E3	0x3444 ;?ICS?lstr22_main+1
0x17E4	0x3445 ;?ICS?lstr22_main+2
0x17E5	0x3453 ;?ICS?lstr22_main+3
0x17E6	0x3449 ;?ICS?lstr22_main+4
0x17E7	0x3447 ;?ICS?lstr22_main+5
0x17E8	0x344E ;?ICS?lstr22_main+6
0x17E9	0x3445 ;?ICS?lstr22_main+7
0x17EA	0x3444 ;?ICS?lstr22_main+8
0x17EB	0x3420 ;?ICS?lstr22_main+9
0x17EC	0x3442 ;?ICS?lstr22_main+10
0x17ED	0x3459 ;?ICS?lstr22_main+11
0x17EE	0x3420 ;?ICS?lstr22_main+12
0x17EF	0x344E ;?ICS?lstr22_main+13
0x17F0	0x3437 ;?ICS?lstr22_main+14
0x17F1	0x3444 ;?ICS?lstr22_main+15
0x17F2	0x3444 ;?ICS?lstr22_main+16
0x17F3	0x3443 ;?ICS?lstr22_main+17
0x17F4	0x3400 ;?ICS?lstr22_main+18
; end of ?ICS?lstr22_main
;main.c,0 :: ?ICS?lstr1_main
0x17F5	0x3450 ;?ICS?lstr1_main+0
0x17F6	0x3457 ;?ICS?lstr1_main+1
0x17F7	0x3452 ;?ICS?lstr1_main+2
0x17F8	0x3420 ;?ICS?lstr1_main+3
0x17F9	0x3420 ;?ICS?lstr1_main+4
0x17FA	0x3420 ;?ICS?lstr1_main+5
0x17FB	0x3420 ;?ICS?lstr1_main+6
0x17FC	0x3420 ;?ICS?lstr1_main+7
0x17FD	0x3457 ;?ICS?lstr1_main+8
0x17FE	0x3400 ;?ICS?lstr1_main+9
; end of ?ICS?lstr1_main
;oled_control.c,1 :: oled_control_font_5x8
0x1E1B	0x3400 ;oled_control_font_5x8+0
0x1E1C	0x3400 ;oled_control_font_5x8+1
0x1E1D	0x3400 ;oled_control_font_5x8+2
0x1E1E	0x3400 ;oled_control_font_5x8+3
0x1E1F	0x3400 ;oled_control_font_5x8+4
0x1E20	0x3400 ;oled_control_font_5x8+5
0x1E21	0x3400 ;oled_control_font_5x8+6
0x1E22	0x345F ;oled_control_font_5x8+7
0x1E23	0x3400 ;oled_control_font_5x8+8
0x1E24	0x3400 ;oled_control_font_5x8+9
0x1E25	0x3400 ;oled_control_font_5x8+10
0x1E26	0x3407 ;oled_control_font_5x8+11
0x1E27	0x3400 ;oled_control_font_5x8+12
0x1E28	0x3407 ;oled_control_font_5x8+13
0x1E29	0x3400 ;oled_control_font_5x8+14
0x1E2A	0x3414 ;oled_control_font_5x8+15
0x1E2B	0x347F ;oled_control_font_5x8+16
0x1E2C	0x3414 ;oled_control_font_5x8+17
0x1E2D	0x347F ;oled_control_font_5x8+18
0x1E2E	0x3414 ;oled_control_font_5x8+19
0x1E2F	0x3424 ;oled_control_font_5x8+20
0x1E30	0x342A ;oled_control_font_5x8+21
0x1E31	0x347F ;oled_control_font_5x8+22
0x1E32	0x342A ;oled_control_font_5x8+23
0x1E33	0x3412 ;oled_control_font_5x8+24
0x1E34	0x3423 ;oled_control_font_5x8+25
0x1E35	0x3413 ;oled_control_font_5x8+26
0x1E36	0x3408 ;oled_control_font_5x8+27
0x1E37	0x3464 ;oled_control_font_5x8+28
0x1E38	0x3462 ;oled_control_font_5x8+29
0x1E39	0x3436 ;oled_control_font_5x8+30
0x1E3A	0x3449 ;oled_control_font_5x8+31
0x1E3B	0x3455 ;oled_control_font_5x8+32
0x1E3C	0x3422 ;oled_control_font_5x8+33
0x1E3D	0x3450 ;oled_control_font_5x8+34
0x1E3E	0x3400 ;oled_control_font_5x8+35
0x1E3F	0x3405 ;oled_control_font_5x8+36
0x1E40	0x3403 ;oled_control_font_5x8+37
0x1E41	0x3400 ;oled_control_font_5x8+38
0x1E42	0x3400 ;oled_control_font_5x8+39
0x1E43	0x3400 ;oled_control_font_5x8+40
0x1E44	0x341C ;oled_control_font_5x8+41
0x1E45	0x3422 ;oled_control_font_5x8+42
0x1E46	0x3441 ;oled_control_font_5x8+43
0x1E47	0x3400 ;oled_control_font_5x8+44
0x1E48	0x3400 ;oled_control_font_5x8+45
0x1E49	0x3441 ;oled_control_font_5x8+46
0x1E4A	0x3422 ;oled_control_font_5x8+47
0x1E4B	0x341C ;oled_control_font_5x8+48
0x1E4C	0x3400 ;oled_control_font_5x8+49
0x1E4D	0x3408 ;oled_control_font_5x8+50
0x1E4E	0x342A ;oled_control_font_5x8+51
0x1E4F	0x341C ;oled_control_font_5x8+52
0x1E50	0x342A ;oled_control_font_5x8+53
0x1E51	0x3408 ;oled_control_font_5x8+54
0x1E52	0x3408 ;oled_control_font_5x8+55
0x1E53	0x3408 ;oled_control_font_5x8+56
0x1E54	0x343E ;oled_control_font_5x8+57
0x1E55	0x3408 ;oled_control_font_5x8+58
0x1E56	0x3408 ;oled_control_font_5x8+59
0x1E57	0x3400 ;oled_control_font_5x8+60
0x1E58	0x3450 ;oled_control_font_5x8+61
0x1E59	0x3430 ;oled_control_font_5x8+62
0x1E5A	0x3400 ;oled_control_font_5x8+63
0x1E5B	0x3400 ;oled_control_font_5x8+64
0x1E5C	0x3408 ;oled_control_font_5x8+65
0x1E5D	0x3408 ;oled_control_font_5x8+66
0x1E5E	0x3408 ;oled_control_font_5x8+67
0x1E5F	0x3408 ;oled_control_font_5x8+68
0x1E60	0x3408 ;oled_control_font_5x8+69
0x1E61	0x3400 ;oled_control_font_5x8+70
0x1E62	0x3430 ;oled_control_font_5x8+71
0x1E63	0x3430 ;oled_control_font_5x8+72
0x1E64	0x3400 ;oled_control_font_5x8+73
0x1E65	0x3400 ;oled_control_font_5x8+74
0x1E66	0x3420 ;oled_control_font_5x8+75
0x1E67	0x3410 ;oled_control_font_5x8+76
0x1E68	0x3408 ;oled_control_font_5x8+77
0x1E69	0x3404 ;oled_control_font_5x8+78
0x1E6A	0x3402 ;oled_control_font_5x8+79
0x1E6B	0x343E ;oled_control_font_5x8+80
0x1E6C	0x3451 ;oled_control_font_5x8+81
0x1E6D	0x3449 ;oled_control_font_5x8+82
0x1E6E	0x3445 ;oled_control_font_5x8+83
0x1E6F	0x343E ;oled_control_font_5x8+84
0x1E70	0x3400 ;oled_control_font_5x8+85
0x1E71	0x3442 ;oled_control_font_5x8+86
0x1E72	0x347F ;oled_control_font_5x8+87
0x1E73	0x3440 ;oled_control_font_5x8+88
0x1E74	0x3400 ;oled_control_font_5x8+89
0x1E75	0x3442 ;oled_control_font_5x8+90
0x1E76	0x3461 ;oled_control_font_5x8+91
0x1E77	0x3451 ;oled_control_font_5x8+92
0x1E78	0x3449 ;oled_control_font_5x8+93
0x1E79	0x3446 ;oled_control_font_5x8+94
0x1E7A	0x3421 ;oled_control_font_5x8+95
0x1E7B	0x3441 ;oled_control_font_5x8+96
0x1E7C	0x3445 ;oled_control_font_5x8+97
0x1E7D	0x344B ;oled_control_font_5x8+98
0x1E7E	0x3431 ;oled_control_font_5x8+99
0x1E7F	0x3418 ;oled_control_font_5x8+100
0x1E80	0x3414 ;oled_control_font_5x8+101
0x1E81	0x3412 ;oled_control_font_5x8+102
0x1E82	0x347F ;oled_control_font_5x8+103
0x1E83	0x3410 ;oled_control_font_5x8+104
0x1E84	0x3427 ;oled_control_font_5x8+105
0x1E85	0x3445 ;oled_control_font_5x8+106
0x1E86	0x3445 ;oled_control_font_5x8+107
0x1E87	0x3445 ;oled_control_font_5x8+108
0x1E88	0x3439 ;oled_control_font_5x8+109
0x1E89	0x343C ;oled_control_font_5x8+110
0x1E8A	0x344A ;oled_control_font_5x8+111
0x1E8B	0x3449 ;oled_control_font_5x8+112
0x1E8C	0x3449 ;oled_control_font_5x8+113
0x1E8D	0x3430 ;oled_control_font_5x8+114
0x1E8E	0x3401 ;oled_control_font_5x8+115
0x1E8F	0x3471 ;oled_control_font_5x8+116
0x1E90	0x3409 ;oled_control_font_5x8+117
0x1E91	0x3405 ;oled_control_font_5x8+118
0x1E92	0x3403 ;oled_control_font_5x8+119
0x1E93	0x3436 ;oled_control_font_5x8+120
0x1E94	0x3449 ;oled_control_font_5x8+121
0x1E95	0x3449 ;oled_control_font_5x8+122
0x1E96	0x3449 ;oled_control_font_5x8+123
0x1E97	0x3436 ;oled_control_font_5x8+124
0x1E98	0x3406 ;oled_control_font_5x8+125
0x1E99	0x3449 ;oled_control_font_5x8+126
0x1E9A	0x3449 ;oled_control_font_5x8+127
0x1E9B	0x3429 ;oled_control_font_5x8+128
0x1E9C	0x341E ;oled_control_font_5x8+129
0x1E9D	0x3400 ;oled_control_font_5x8+130
0x1E9E	0x3436 ;oled_control_font_5x8+131
0x1E9F	0x3436 ;oled_control_font_5x8+132
0x1EA0	0x3400 ;oled_control_font_5x8+133
0x1EA1	0x3400 ;oled_control_font_5x8+134
0x1EA2	0x3400 ;oled_control_font_5x8+135
0x1EA3	0x3456 ;oled_control_font_5x8+136
0x1EA4	0x3436 ;oled_control_font_5x8+137
0x1EA5	0x3400 ;oled_control_font_5x8+138
0x1EA6	0x3400 ;oled_control_font_5x8+139
0x1EA7	0x3400 ;oled_control_font_5x8+140
0x1EA8	0x3408 ;oled_control_font_5x8+141
0x1EA9	0x3414 ;oled_control_font_5x8+142
0x1EAA	0x3422 ;oled_control_font_5x8+143
0x1EAB	0x3441 ;oled_control_font_5x8+144
0x1EAC	0x3414 ;oled_control_font_5x8+145
0x1EAD	0x3414 ;oled_control_font_5x8+146
0x1EAE	0x3414 ;oled_control_font_5x8+147
0x1EAF	0x3414 ;oled_control_font_5x8+148
0x1EB0	0x3414 ;oled_control_font_5x8+149
0x1EB1	0x3441 ;oled_control_font_5x8+150
0x1EB2	0x3422 ;oled_control_font_5x8+151
0x1EB3	0x3414 ;oled_control_font_5x8+152
0x1EB4	0x3408 ;oled_control_font_5x8+153
0x1EB5	0x3400 ;oled_control_font_5x8+154
0x1EB6	0x3402 ;oled_control_font_5x8+155
0x1EB7	0x3401 ;oled_control_font_5x8+156
0x1EB8	0x3451 ;oled_control_font_5x8+157
0x1EB9	0x3409 ;oled_control_font_5x8+158
0x1EBA	0x3406 ;oled_control_font_5x8+159
0x1EBB	0x3432 ;oled_control_font_5x8+160
0x1EBC	0x3449 ;oled_control_font_5x8+161
0x1EBD	0x3479 ;oled_control_font_5x8+162
0x1EBE	0x3441 ;oled_control_font_5x8+163
0x1EBF	0x343E ;oled_control_font_5x8+164
0x1EC0	0x347E ;oled_control_font_5x8+165
0x1EC1	0x3411 ;oled_control_font_5x8+166
0x1EC2	0x3411 ;oled_control_font_5x8+167
0x1EC3	0x3411 ;oled_control_font_5x8+168
0x1EC4	0x347E ;oled_control_font_5x8+169
0x1EC5	0x347F ;oled_control_font_5x8+170
0x1EC6	0x3449 ;oled_control_font_5x8+171
0x1EC7	0x3449 ;oled_control_font_5x8+172
0x1EC8	0x3449 ;oled_control_font_5x8+173
0x1EC9	0x3436 ;oled_control_font_5x8+174
0x1ECA	0x343E ;oled_control_font_5x8+175
0x1ECB	0x3441 ;oled_control_font_5x8+176
0x1ECC	0x3441 ;oled_control_font_5x8+177
0x1ECD	0x3441 ;oled_control_font_5x8+178
0x1ECE	0x3422 ;oled_control_font_5x8+179
0x1ECF	0x347F ;oled_control_font_5x8+180
0x1ED0	0x3441 ;oled_control_font_5x8+181
0x1ED1	0x3441 ;oled_control_font_5x8+182
0x1ED2	0x3422 ;oled_control_font_5x8+183
0x1ED3	0x341C ;oled_control_font_5x8+184
0x1ED4	0x347F ;oled_control_font_5x8+185
0x1ED5	0x3449 ;oled_control_font_5x8+186
0x1ED6	0x3449 ;oled_control_font_5x8+187
0x1ED7	0x3449 ;oled_control_font_5x8+188
0x1ED8	0x3441 ;oled_control_font_5x8+189
0x1ED9	0x347F ;oled_control_font_5x8+190
0x1EDA	0x3409 ;oled_control_font_5x8+191
0x1EDB	0x3409 ;oled_control_font_5x8+192
0x1EDC	0x3401 ;oled_control_font_5x8+193
0x1EDD	0x3401 ;oled_control_font_5x8+194
0x1EDE	0x343E ;oled_control_font_5x8+195
0x1EDF	0x3441 ;oled_control_font_5x8+196
0x1EE0	0x3441 ;oled_control_font_5x8+197
0x1EE1	0x3451 ;oled_control_font_5x8+198
0x1EE2	0x3432 ;oled_control_font_5x8+199
0x1EE3	0x347F ;oled_control_font_5x8+200
0x1EE4	0x3408 ;oled_control_font_5x8+201
0x1EE5	0x3408 ;oled_control_font_5x8+202
0x1EE6	0x3408 ;oled_control_font_5x8+203
0x1EE7	0x347F ;oled_control_font_5x8+204
0x1EE8	0x3400 ;oled_control_font_5x8+205
0x1EE9	0x3441 ;oled_control_font_5x8+206
0x1EEA	0x347F ;oled_control_font_5x8+207
0x1EEB	0x3441 ;oled_control_font_5x8+208
0x1EEC	0x3400 ;oled_control_font_5x8+209
0x1EED	0x3420 ;oled_control_font_5x8+210
0x1EEE	0x3440 ;oled_control_font_5x8+211
0x1EEF	0x3441 ;oled_control_font_5x8+212
0x1EF0	0x343F ;oled_control_font_5x8+213
0x1EF1	0x3401 ;oled_control_font_5x8+214
0x1EF2	0x347F ;oled_control_font_5x8+215
0x1EF3	0x3408 ;oled_control_font_5x8+216
0x1EF4	0x3414 ;oled_control_font_5x8+217
0x1EF5	0x3422 ;oled_control_font_5x8+218
0x1EF6	0x3441 ;oled_control_font_5x8+219
0x1EF7	0x347F ;oled_control_font_5x8+220
0x1EF8	0x3440 ;oled_control_font_5x8+221
0x1EF9	0x3440 ;oled_control_font_5x8+222
0x1EFA	0x3440 ;oled_control_font_5x8+223
0x1EFB	0x3440 ;oled_control_font_5x8+224
0x1EFC	0x347F ;oled_control_font_5x8+225
0x1EFD	0x3402 ;oled_control_font_5x8+226
0x1EFE	0x3404 ;oled_control_font_5x8+227
0x1EFF	0x3402 ;oled_control_font_5x8+228
0x1F00	0x347F ;oled_control_font_5x8+229
0x1F01	0x347F ;oled_control_font_5x8+230
0x1F02	0x3404 ;oled_control_font_5x8+231
0x1F03	0x3408 ;oled_control_font_5x8+232
0x1F04	0x3410 ;oled_control_font_5x8+233
0x1F05	0x347F ;oled_control_font_5x8+234
0x1F06	0x343E ;oled_control_font_5x8+235
0x1F07	0x3441 ;oled_control_font_5x8+236
0x1F08	0x3441 ;oled_control_font_5x8+237
0x1F09	0x3441 ;oled_control_font_5x8+238
0x1F0A	0x343E ;oled_control_font_5x8+239
0x1F0B	0x347F ;oled_control_font_5x8+240
0x1F0C	0x3409 ;oled_control_font_5x8+241
0x1F0D	0x3409 ;oled_control_font_5x8+242
0x1F0E	0x3409 ;oled_control_font_5x8+243
0x1F0F	0x3406 ;oled_control_font_5x8+244
0x1F10	0x343E ;oled_control_font_5x8+245
0x1F11	0x3441 ;oled_control_font_5x8+246
0x1F12	0x3451 ;oled_control_font_5x8+247
0x1F13	0x3421 ;oled_control_font_5x8+248
0x1F14	0x345E ;oled_control_font_5x8+249
0x1F15	0x347F ;oled_control_font_5x8+250
0x1F16	0x3409 ;oled_control_font_5x8+251
0x1F17	0x3419 ;oled_control_font_5x8+252
0x1F18	0x3429 ;oled_control_font_5x8+253
0x1F19	0x3446 ;oled_control_font_5x8+254
0x1F1A	0x3446 ;oled_control_font_5x8+255
0x1F1B	0x3449 ;oled_control_font_5x8+256
0x1F1C	0x3449 ;oled_control_font_5x8+257
0x1F1D	0x3449 ;oled_control_font_5x8+258
0x1F1E	0x3431 ;oled_control_font_5x8+259
0x1F1F	0x3401 ;oled_control_font_5x8+260
0x1F20	0x3401 ;oled_control_font_5x8+261
0x1F21	0x347F ;oled_control_font_5x8+262
0x1F22	0x3401 ;oled_control_font_5x8+263
0x1F23	0x3401 ;oled_control_font_5x8+264
0x1F24	0x343F ;oled_control_font_5x8+265
0x1F25	0x3440 ;oled_control_font_5x8+266
0x1F26	0x3440 ;oled_control_font_5x8+267
0x1F27	0x3440 ;oled_control_font_5x8+268
0x1F28	0x343F ;oled_control_font_5x8+269
0x1F29	0x341F ;oled_control_font_5x8+270
0x1F2A	0x3420 ;oled_control_font_5x8+271
0x1F2B	0x3440 ;oled_control_font_5x8+272
0x1F2C	0x3420 ;oled_control_font_5x8+273
0x1F2D	0x341F ;oled_control_font_5x8+274
0x1F2E	0x347F ;oled_control_font_5x8+275
0x1F2F	0x3420 ;oled_control_font_5x8+276
0x1F30	0x3418 ;oled_control_font_5x8+277
0x1F31	0x3420 ;oled_control_font_5x8+278
0x1F32	0x347F ;oled_control_font_5x8+279
0x1F33	0x3463 ;oled_control_font_5x8+280
0x1F34	0x3414 ;oled_control_font_5x8+281
0x1F35	0x3408 ;oled_control_font_5x8+282
0x1F36	0x3414 ;oled_control_font_5x8+283
0x1F37	0x3463 ;oled_control_font_5x8+284
0x1F38	0x3403 ;oled_control_font_5x8+285
0x1F39	0x3404 ;oled_control_font_5x8+286
0x1F3A	0x3478 ;oled_control_font_5x8+287
0x1F3B	0x3404 ;oled_control_font_5x8+288
0x1F3C	0x3403 ;oled_control_font_5x8+289
0x1F3D	0x3461 ;oled_control_font_5x8+290
0x1F3E	0x3451 ;oled_control_font_5x8+291
0x1F3F	0x3449 ;oled_control_font_5x8+292
0x1F40	0x3445 ;oled_control_font_5x8+293
0x1F41	0x3443 ;oled_control_font_5x8+294
0x1F42	0x3400 ;oled_control_font_5x8+295
0x1F43	0x3400 ;oled_control_font_5x8+296
0x1F44	0x347F ;oled_control_font_5x8+297
0x1F45	0x3441 ;oled_control_font_5x8+298
0x1F46	0x3441 ;oled_control_font_5x8+299
0x1F47	0x3402 ;oled_control_font_5x8+300
0x1F48	0x3404 ;oled_control_font_5x8+301
0x1F49	0x3408 ;oled_control_font_5x8+302
0x1F4A	0x3410 ;oled_control_font_5x8+303
0x1F4B	0x3420 ;oled_control_font_5x8+304
0x1F4C	0x3441 ;oled_control_font_5x8+305
0x1F4D	0x3441 ;oled_control_font_5x8+306
0x1F4E	0x347F ;oled_control_font_5x8+307
0x1F4F	0x3400 ;oled_control_font_5x8+308
0x1F50	0x3400 ;oled_control_font_5x8+309
0x1F51	0x3404 ;oled_control_font_5x8+310
0x1F52	0x3402 ;oled_control_font_5x8+311
0x1F53	0x3401 ;oled_control_font_5x8+312
0x1F54	0x3402 ;oled_control_font_5x8+313
0x1F55	0x3404 ;oled_control_font_5x8+314
0x1F56	0x3440 ;oled_control_font_5x8+315
0x1F57	0x3440 ;oled_control_font_5x8+316
0x1F58	0x3440 ;oled_control_font_5x8+317
0x1F59	0x3440 ;oled_control_font_5x8+318
0x1F5A	0x3440 ;oled_control_font_5x8+319
0x1F5B	0x3400 ;oled_control_font_5x8+320
0x1F5C	0x3401 ;oled_control_font_5x8+321
0x1F5D	0x3402 ;oled_control_font_5x8+322
0x1F5E	0x3404 ;oled_control_font_5x8+323
0x1F5F	0x3400 ;oled_control_font_5x8+324
0x1F60	0x3420 ;oled_control_font_5x8+325
0x1F61	0x3454 ;oled_control_font_5x8+326
0x1F62	0x3454 ;oled_control_font_5x8+327
0x1F63	0x3454 ;oled_control_font_5x8+328
0x1F64	0x3478 ;oled_control_font_5x8+329
0x1F65	0x347F ;oled_control_font_5x8+330
0x1F66	0x3448 ;oled_control_font_5x8+331
0x1F67	0x3444 ;oled_control_font_5x8+332
0x1F68	0x3444 ;oled_control_font_5x8+333
0x1F69	0x3438 ;oled_control_font_5x8+334
0x1F6A	0x3438 ;oled_control_font_5x8+335
0x1F6B	0x3444 ;oled_control_font_5x8+336
0x1F6C	0x3444 ;oled_control_font_5x8+337
0x1F6D	0x3444 ;oled_control_font_5x8+338
0x1F6E	0x3420 ;oled_control_font_5x8+339
0x1F6F	0x3438 ;oled_control_font_5x8+340
0x1F70	0x3444 ;oled_control_font_5x8+341
0x1F71	0x3444 ;oled_control_font_5x8+342
0x1F72	0x3448 ;oled_control_font_5x8+343
0x1F73	0x347F ;oled_control_font_5x8+344
0x1F74	0x3438 ;oled_control_font_5x8+345
0x1F75	0x3454 ;oled_control_font_5x8+346
0x1F76	0x3454 ;oled_control_font_5x8+347
0x1F77	0x3454 ;oled_control_font_5x8+348
0x1F78	0x3418 ;oled_control_font_5x8+349
0x1F79	0x3408 ;oled_control_font_5x8+350
0x1F7A	0x347E ;oled_control_font_5x8+351
0x1F7B	0x3409 ;oled_control_font_5x8+352
0x1F7C	0x3401 ;oled_control_font_5x8+353
0x1F7D	0x3402 ;oled_control_font_5x8+354
0x1F7E	0x3408 ;oled_control_font_5x8+355
0x1F7F	0x3414 ;oled_control_font_5x8+356
0x1F80	0x3454 ;oled_control_font_5x8+357
0x1F81	0x3454 ;oled_control_font_5x8+358
0x1F82	0x343C ;oled_control_font_5x8+359
0x1F83	0x347F ;oled_control_font_5x8+360
0x1F84	0x3408 ;oled_control_font_5x8+361
0x1F85	0x3404 ;oled_control_font_5x8+362
0x1F86	0x3404 ;oled_control_font_5x8+363
0x1F87	0x3478 ;oled_control_font_5x8+364
0x1F88	0x3400 ;oled_control_font_5x8+365
0x1F89	0x3444 ;oled_control_font_5x8+366
0x1F8A	0x347D ;oled_control_font_5x8+367
0x1F8B	0x3440 ;oled_control_font_5x8+368
0x1F8C	0x3400 ;oled_control_font_5x8+369
0x1F8D	0x3420 ;oled_control_font_5x8+370
0x1F8E	0x3440 ;oled_control_font_5x8+371
0x1F8F	0x3444 ;oled_control_font_5x8+372
0x1F90	0x343D ;oled_control_font_5x8+373
0x1F91	0x3400 ;oled_control_font_5x8+374
0x1F92	0x3400 ;oled_control_font_5x8+375
0x1F93	0x347F ;oled_control_font_5x8+376
0x1F94	0x3410 ;oled_control_font_5x8+377
0x1F95	0x3428 ;oled_control_font_5x8+378
0x1F96	0x3444 ;oled_control_font_5x8+379
0x1F97	0x3400 ;oled_control_font_5x8+380
0x1F98	0x3441 ;oled_control_font_5x8+381
0x1F99	0x347F ;oled_control_font_5x8+382
0x1F9A	0x3440 ;oled_control_font_5x8+383
0x1F9B	0x3400 ;oled_control_font_5x8+384
0x1F9C	0x347C ;oled_control_font_5x8+385
0x1F9D	0x3404 ;oled_control_font_5x8+386
0x1F9E	0x3418 ;oled_control_font_5x8+387
0x1F9F	0x3404 ;oled_control_font_5x8+388
0x1FA0	0x3478 ;oled_control_font_5x8+389
0x1FA1	0x347C ;oled_control_font_5x8+390
0x1FA2	0x3408 ;oled_control_font_5x8+391
0x1FA3	0x3404 ;oled_control_font_5x8+392
0x1FA4	0x3404 ;oled_control_font_5x8+393
0x1FA5	0x3478 ;oled_control_font_5x8+394
0x1FA6	0x3438 ;oled_control_font_5x8+395
0x1FA7	0x3444 ;oled_control_font_5x8+396
0x1FA8	0x3444 ;oled_control_font_5x8+397
0x1FA9	0x3444 ;oled_control_font_5x8+398
0x1FAA	0x3438 ;oled_control_font_5x8+399
0x1FAB	0x347C ;oled_control_font_5x8+400
0x1FAC	0x3414 ;oled_control_font_5x8+401
0x1FAD	0x3414 ;oled_control_font_5x8+402
0x1FAE	0x3414 ;oled_control_font_5x8+403
0x1FAF	0x3408 ;oled_control_font_5x8+404
0x1FB0	0x3408 ;oled_control_font_5x8+405
0x1FB1	0x3414 ;oled_control_font_5x8+406
0x1FB2	0x3414 ;oled_control_font_5x8+407
0x1FB3	0x3418 ;oled_control_font_5x8+408
0x1FB4	0x347C ;oled_control_font_5x8+409
0x1FB5	0x347C ;oled_control_font_5x8+410
0x1FB6	0x3408 ;oled_control_font_5x8+411
0x1FB7	0x3404 ;oled_control_font_5x8+412
0x1FB8	0x3404 ;oled_control_font_5x8+413
0x1FB9	0x3408 ;oled_control_font_5x8+414
0x1FBA	0x3448 ;oled_control_font_5x8+415
0x1FBB	0x3454 ;oled_control_font_5x8+416
0x1FBC	0x3454 ;oled_control_font_5x8+417
0x1FBD	0x3454 ;oled_control_font_5x8+418
0x1FBE	0x3420 ;oled_control_font_5x8+419
0x1FBF	0x3404 ;oled_control_font_5x8+420
0x1FC0	0x343F ;oled_control_font_5x8+421
0x1FC1	0x3444 ;oled_control_font_5x8+422
0x1FC2	0x3440 ;oled_control_font_5x8+423
0x1FC3	0x3420 ;oled_control_font_5x8+424
0x1FC4	0x343C ;oled_control_font_5x8+425
0x1FC5	0x3440 ;oled_control_font_5x8+426
0x1FC6	0x3440 ;oled_control_font_5x8+427
0x1FC7	0x3420 ;oled_control_font_5x8+428
0x1FC8	0x347C ;oled_control_font_5x8+429
0x1FC9	0x341C ;oled_control_font_5x8+430
0x1FCA	0x3420 ;oled_control_font_5x8+431
0x1FCB	0x3440 ;oled_control_font_5x8+432
0x1FCC	0x3420 ;oled_control_font_5x8+433
0x1FCD	0x341C ;oled_control_font_5x8+434
0x1FCE	0x343C ;oled_control_font_5x8+435
0x1FCF	0x3440 ;oled_control_font_5x8+436
0x1FD0	0x3430 ;oled_control_font_5x8+437
0x1FD1	0x3440 ;oled_control_font_5x8+438
0x1FD2	0x343C ;oled_control_font_5x8+439
0x1FD3	0x3444 ;oled_control_font_5x8+440
0x1FD4	0x3428 ;oled_control_font_5x8+441
0x1FD5	0x3410 ;oled_control_font_5x8+442
0x1FD6	0x3428 ;oled_control_font_5x8+443
0x1FD7	0x3444 ;oled_control_font_5x8+444
0x1FD8	0x340C ;oled_control_font_5x8+445
0x1FD9	0x3450 ;oled_control_font_5x8+446
0x1FDA	0x3450 ;oled_control_font_5x8+447
0x1FDB	0x3450 ;oled_control_font_5x8+448
0x1FDC	0x343C ;oled_control_font_5x8+449
0x1FDD	0x3444 ;oled_control_font_5x8+450
0x1FDE	0x3464 ;oled_control_font_5x8+451
0x1FDF	0x3454 ;oled_control_font_5x8+452
0x1FE0	0x344C ;oled_control_font_5x8+453
0x1FE1	0x3444 ;oled_control_font_5x8+454
0x1FE2	0x3400 ;oled_control_font_5x8+455
0x1FE3	0x3408 ;oled_control_font_5x8+456
0x1FE4	0x3436 ;oled_control_font_5x8+457
0x1FE5	0x3441 ;oled_control_font_5x8+458
0x1FE6	0x3400 ;oled_control_font_5x8+459
0x1FE7	0x3400 ;oled_control_font_5x8+460
0x1FE8	0x3400 ;oled_control_font_5x8+461
0x1FE9	0x347F ;oled_control_font_5x8+462
0x1FEA	0x3400 ;oled_control_font_5x8+463
0x1FEB	0x3400 ;oled_control_font_5x8+464
0x1FEC	0x3400 ;oled_control_font_5x8+465
0x1FED	0x3441 ;oled_control_font_5x8+466
0x1FEE	0x3436 ;oled_control_font_5x8+467
0x1FEF	0x3408 ;oled_control_font_5x8+468
0x1FF0	0x3400 ;oled_control_font_5x8+469
0x1FF1	0x3408 ;oled_control_font_5x8+470
0x1FF2	0x3408 ;oled_control_font_5x8+471
0x1FF3	0x342A ;oled_control_font_5x8+472
0x1FF4	0x341C ;oled_control_font_5x8+473
0x1FF5	0x3408 ;oled_control_font_5x8+474
0x1FF6	0x3408 ;oled_control_font_5x8+475
0x1FF7	0x341C ;oled_control_font_5x8+476
0x1FF8	0x342A ;oled_control_font_5x8+477
0x1FF9	0x3408 ;oled_control_font_5x8+478
0x1FFA	0x3408 ;oled_control_font_5x8+479
; end of oled_control_font_5x8
;main.c,0 :: ?ICS_Voltage_old
0x1FFB	0x3400 ;?ICS_Voltage_old+0
0x1FFC	0x3400 ;?ICS_Voltage_old+1
; end of ?ICS_Voltage_old
;main.c,0 :: ?ICS_btn_1_cnt
0x2000	0x3400 ;?ICS_btn_1_cnt+0
; end of ?ICS_btn_1_cnt
;main.c,0 :: ?ICS_btn_2_cnt
0x2001	0x3400 ;?ICS_btn_2_cnt+0
; end of ?ICS_btn_2_cnt
;oled_control.c,0 :: ?ICSoled_control_inversion
0x2002	0x3401 ;?ICSoled_control_inversion+0
; end of ?ICSoled_control_inversion
;oled_control.c,0 :: ?ICSoled_control_oled_addr
0x2003	0x3478 ;?ICSoled_control_oled_addr+0
0x2004	0x3400 ;?ICSoled_control_oled_addr+1
; end of ?ICSoled_control_oled_addr
;oled_control.c,0 :: ?ICSoled_control_oled_shift
0x2005	0x3402 ;?ICSoled_control_oled_shift+0
; end of ?ICSoled_control_oled_shift
;oled_control.c,0 :: ?ICSoled_control_shift_line
0x2006	0x3440 ;?ICSoled_control_shift_line+0
; end of ?ICSoled_control_shift_line
;main.c,0 :: ?ICS_Auto_delta
0x2007	0x3482 ;?ICS_Auto_delta+0
0x2008	0x3400 ;?ICS_Auto_delta+1
; end of ?ICS_Auto_delta
;main.c,0 :: ?ICS?lstr5_main
0x2009	0x343E ;?ICS?lstr5_main+0
0x200A	0x3400 ;?ICS?lstr5_main+1
; end of ?ICS?lstr5_main
;main.c,0 :: ?ICS?lstr6_main
0x200B	0x343D ;?ICS?lstr6_main+0
0x200C	0x3400 ;?ICS?lstr6_main+1
; end of ?ICS?lstr6_main
;main.c,0 :: ?ICS_Rel_Del
0x200D	0x3405 ;?ICS_Rel_Del+0
0x200E	0x3400 ;?ICS_Rel_Del+1
; end of ?ICS_Rel_Del
;main.c,0 :: ?ICS?lstr7_main
0x200F	0x344F ;?ICS?lstr7_main+0
0x2010	0x3456 ;?ICS?lstr7_main+1
0x2011	0x3445 ;?ICS?lstr7_main+2
0x2012	0x3452 ;?ICS?lstr7_main+3
0x2013	0x344C ;?ICS?lstr7_main+4
0x2014	0x344F ;?ICS?lstr7_main+5
0x2015	0x3441 ;?ICS?lstr7_main+6
0x2016	0x3444 ;?ICS?lstr7_main+7
0x2017	0x3420 ;?ICS?lstr7_main+8
0x2018	0x3400 ;?ICS?lstr7_main+9
; end of ?ICS?lstr7_main
;main.c,0 :: ?ICS_max_for_start
0x2019	0x3496 ;?ICS_max_for_start+0
0x201A	0x3400 ;?ICS_max_for_start+1
; end of ?ICS_max_for_start
;main.c,0 :: ?ICS?lstr18_main
0x201B	0x3452 ;?ICS?lstr18_main+0
0x201C	0x3445 ;?ICS?lstr18_main+1
0x201D	0x3453 ;?ICS?lstr18_main+2
0x201E	0x3445 ;?ICS?lstr18_main+3
0x201F	0x3454 ;?ICS?lstr18_main+4
0x2020	0x3420 ;?ICS?lstr18_main+5
0x2021	0x3420 ;?ICS?lstr18_main+6
0x2022	0x3420 ;?ICS?lstr18_main+7
0x2023	0x3420 ;?ICS?lstr18_main+8
0x2024	0x3400 ;?ICS?lstr18_main+9
; end of ?ICS?lstr18_main
;main.c,0 :: ?ICS?lstr19_main
0x2025	0x3453 ;?ICS?lstr19_main+0
0x2026	0x3457 ;?ICS?lstr19_main+1
0x2027	0x3452 ;?ICS?lstr19_main+2
0x2028	0x3420 ;?ICS?lstr19_main+3
0x2029	0x3420 ;?ICS?lstr19_main+4
0x202A	0x3400 ;?ICS?lstr19_main+5
; end of ?ICS?lstr19_main
;main.c,0 :: ?ICS_min_for_start
0x202B	0x340A ;?ICS_min_for_start+0
0x202C	0x3400 ;?ICS_min_for_start+1
; end of ?ICS_min_for_start
;main.c,0 :: ?ICS?lstr8_main
0x202D	0x3420 ;?ICS?lstr8_main+0
0x202E	0x3420 ;?ICS?lstr8_main+1
0x202F	0x3420 ;?ICS?lstr8_main+2
0x2030	0x3420 ;?ICS?lstr8_main+3
0x2031	0x3420 ;?ICS?lstr8_main+4
0x2032	0x3420 ;?ICS?lstr8_main+5
0x2033	0x3420 ;?ICS?lstr8_main+6
0x2034	0x3420 ;?ICS?lstr8_main+7
0x2035	0x3420 ;?ICS?lstr8_main+8
0x2036	0x3400 ;?ICS?lstr8_main+9
; end of ?ICS?lstr8_main
;main.c,0 :: ?ICS?lstr9_main
0x2037	0x3453 ;?ICS?lstr9_main+0
0x2038	0x3457 ;?ICS?lstr9_main+1
0x2039	0x3452 ;?ICS?lstr9_main+2
0x203A	0x3420 ;?ICS?lstr9_main+3
0x203B	0x3420 ;?ICS?lstr9_main+4
0x203C	0x3420 ;?ICS?lstr9_main+5
0x203D	0x3420 ;?ICS?lstr9_main+6
0x203E	0x3420 ;?ICS?lstr9_main+7
0x203F	0x3420 ;?ICS?lstr9_main+8
0x2040	0x3400 ;?ICS?lstr9_main+9
; end of ?ICS?lstr9_main
;main.c,0 :: ?ICS?lstr10_main
0x2041	0x343D ;?ICS?lstr10_main+0
0x2042	0x3400 ;?ICS?lstr10_main+1
; end of ?ICS?lstr10_main
;main.c,0 :: ?ICS_step_ind
0x2043	0x3400 ;?ICS_step_ind+0
; end of ?ICS_step_ind
;main.c,0 :: ?ICS?lstr13_main
0x2044	0x3420 ;?ICS?lstr13_main+0
0x2045	0x3420 ;?ICS?lstr13_main+1
0x2046	0x344C ;?ICS?lstr13_main+2
0x2047	0x344F ;?ICS?lstr13_main+3
0x2048	0x3457 ;?ICS?lstr13_main+4
0x2049	0x3420 ;?ICS?lstr13_main+5
0x204A	0x3442 ;?ICS?lstr13_main+6
0x204B	0x3441 ;?ICS?lstr13_main+7
0x204C	0x3454 ;?ICS?lstr13_main+8
0x204D	0x3454 ;?ICS?lstr13_main+9
0x204E	0x3420 ;?ICS?lstr13_main+10
0x204F	0x3400 ;?ICS?lstr13_main+11
; end of ?ICS?lstr13_main
;main.c,0 :: ?ICS_btn_cnt
0x2050	0x3400 ;?ICS_btn_cnt+0
0x2051	0x3400 ;?ICS_btn_cnt+1
0x2052	0x3400 ;?ICS_btn_cnt+2
0x2053	0x3400 ;?ICS_btn_cnt+3
; end of ?ICS_btn_cnt
;main.c,0 :: ?ICS?lstr14_main
0x2054	0x3420 ;?ICS?lstr14_main+0
0x2055	0x3450 ;?ICS?lstr14_main+1
0x2056	0x344F ;?ICS?lstr14_main+2
0x2057	0x3457 ;?ICS?lstr14_main+3
0x2058	0x3445 ;?ICS?lstr14_main+4
0x2059	0x3452 ;?ICS?lstr14_main+5
0x205A	0x3420 ;?ICS?lstr14_main+6
0x205B	0x344F ;?ICS?lstr14_main+7
0x205C	0x3446 ;?ICS?lstr14_main+8
0x205D	0x3446 ;?ICS?lstr14_main+9
0x205E	0x3420 ;?ICS?lstr14_main+10
0x205F	0x3400 ;?ICS?lstr14_main+11
; end of ?ICS?lstr14_main
;main.c,0 :: ?ICS?lstr12_main
0x2060	0x3430 ;?ICS?lstr12_main+0
0x2061	0x342E ;?ICS?lstr12_main+1
0x2062	0x3430 ;?ICS?lstr12_main+2
0x2063	0x3400 ;?ICS?lstr12_main+3
; end of ?ICS?lstr12_main
;main.c,0 :: ?ICS_Off_time
0x2064	0x3408 ;?ICS_Off_time+0
0x2065	0x3407 ;?ICS_Off_time+1
0x2066	0x3400 ;?ICS_Off_time+2
0x2067	0x3400 ;?ICS_Off_time+3
; end of ?ICS_Off_time
;main.c,0 :: ?ICS_ind
0x2068	0x3400 ;?ICS_ind+0
; end of ?ICS_ind
;main.c,0 :: ?ICS_SW
0x2069	0x3400 ;?ICS_SW+0
; end of ?ICS_SW
;main.c,0 :: ?ICS_cap
0x206A	0x3400 ;?ICS_cap+0
; end of ?ICS_cap
;main.c,0 :: ?ICS?lstr11_main
0x206B	0x3430 ;?ICS?lstr11_main+0
0x206C	0x342E ;?ICS?lstr11_main+1
0x206D	0x3430 ;?ICS?lstr11_main+2
0x206E	0x3430 ;?ICS?lstr11_main+3
0x206F	0x3400 ;?ICS?lstr11_main+4
; end of ?ICS?lstr11_main
;main.c,0 :: ?ICS_step_cap
0x2070	0x3400 ;?ICS_step_cap+0
; end of ?ICS_step_cap
;main.c,0 :: ?ICS?lstr15_main
0x2071	0x3454 ;?ICS?lstr15_main+0
0x2072	0x3455 ;?ICS?lstr15_main+1
0x2073	0x344E ;?ICS?lstr15_main+2
0x2074	0x3445 ;?ICS?lstr15_main+3
0x2075	0x3420 ;?ICS?lstr15_main+4
0x2076	0x3420 ;?ICS?lstr15_main+5
0x2077	0x3420 ;?ICS?lstr15_main+6
0x2078	0x3420 ;?ICS?lstr15_main+7
0x2079	0x3420 ;?ICS?lstr15_main+8
0x207A	0x3400 ;?ICS?lstr15_main+9
; end of ?ICS?lstr15_main
;main.c,0 :: ?ICS?lstr16_main
0x207B	0x3453 ;?ICS?lstr16_main+0
0x207C	0x3457 ;?ICS?lstr16_main+1
0x207D	0x3452 ;?ICS?lstr16_main+2
0x207E	0x3420 ;?ICS?lstr16_main+3
0x207F	0x3400 ;?ICS?lstr16_main+4
; end of ?ICS?lstr16_main
;main.c,0 :: ?ICS?lstr20_main
0x2080	0x343D ;?ICS?lstr20_main+0
0x2081	0x3400 ;?ICS?lstr20_main+1
; end of ?ICS?lstr20_main
;oled_control.c,19 :: oled_control_batt
0x2082	0x34F8 ;oled_control_batt+0
0x2083	0x34F8 ;oled_control_batt+1
0x2084	0x341F ;oled_control_batt+2
0x2085	0x341F ;oled_control_batt+3
0x2086	0x3403 ;oled_control_batt+4
0x2087	0x3403 ;oled_control_batt+5
0x2088	0x3403 ;oled_control_batt+6
0x2089	0x341F ;oled_control_batt+7
0x208A	0x341F ;oled_control_batt+8
0x208B	0x34F8 ;oled_control_batt+9
0x208C	0x34F8 ;oled_control_batt+10
0x208D	0x34FF ;oled_control_batt+11
0x208E	0x34FF ;oled_control_batt+12
0x208F	0x3400 ;oled_control_batt+13
0x2090	0x3400 ;oled_control_batt+14
0x2091	0x3400 ;oled_control_batt+15
0x2092	0x3400 ;oled_control_batt+16
0x2093	0x3400 ;oled_control_batt+17
0x2094	0x3400 ;oled_control_batt+18
0x2095	0x3400 ;oled_control_batt+19
0x2096	0x34FF ;oled_control_batt+20
0x2097	0x34FF ;oled_control_batt+21
0x2098	0x34FF ;oled_control_batt+22
0x2099	0x34FF ;oled_control_batt+23
0x209A	0x3400 ;oled_control_batt+24
0x209B	0x3400 ;oled_control_batt+25
0x209C	0x3400 ;oled_control_batt+26
0x209D	0x3400 ;oled_control_batt+27
0x209E	0x3400 ;oled_control_batt+28
0x209F	0x3400 ;oled_control_batt+29
0x20A0	0x3400 ;oled_control_batt+30
0x20A1	0x34FF ;oled_control_batt+31
0x20A2	0x34FF ;oled_control_batt+32
0x20A3	0x34FF ;oled_control_batt+33
0x20A4	0x34FF ;oled_control_batt+34
0x20A5	0x34C0 ;oled_control_batt+35
0x20A6	0x34C0 ;oled_control_batt+36
0x20A7	0x34C0 ;oled_control_batt+37
0x20A8	0x34C0 ;oled_control_batt+38
0x20A9	0x34C0 ;oled_control_batt+39
0x20AA	0x34C0 ;oled_control_batt+40
0x20AB	0x34C0 ;oled_control_batt+41
0x20AC	0x34FF ;oled_control_batt+42
0x20AD	0x34FF ;oled_control_batt+43
; end of oled_control_batt
;main.c,0 :: ?ICS?lstr23_main
0x20AE	0x3420 ;?ICS?lstr23_main+0
0x20AF	0x3446 ;?ICS?lstr23_main+1
0x20B0	0x3457 ;?ICS?lstr23_main+2
0x20B1	0x3420 ;?ICS?lstr23_main+3
0x20B2	0x3456 ;?ICS?lstr23_main+4
0x20B3	0x3445 ;?ICS?lstr23_main+5
0x20B4	0x3452 ;?ICS?lstr23_main+6
0x20B5	0x3453 ;?ICS?lstr23_main+7
0x20B6	0x3449 ;?ICS?lstr23_main+8
0x20B7	0x344F ;?ICS?lstr23_main+9
0x20B8	0x344E ;?ICS?lstr23_main+10
0x20B9	0x3420 ;?ICS?lstr23_main+11
0x20BA	0x3400 ;?ICS?lstr23_main+12
; end of ?ICS?lstr23_main
;main.c,0 :: ?ICS?lstr2_main
0x20BB	0x3453 ;?ICS?lstr2_main+0
0x20BC	0x3457 ;?ICS?lstr2_main+1
0x20BD	0x3452 ;?ICS?lstr2_main+2
0x20BE	0x3420 ;?ICS?lstr2_main+3
0x20BF	0x3420 ;?ICS?lstr2_main+4
0x20C0	0x3420 ;?ICS?lstr2_main+5
0x20C1	0x3420 ;?ICS?lstr2_main+6
0x20C2	0x3420 ;?ICS?lstr2_main+7
0x20C3	0x3420 ;?ICS?lstr2_main+8
0x20C4	0x3400 ;?ICS?lstr2_main+9
; end of ?ICS?lstr2_main
;main.c,0 :: ?ICS_Disp_time
0x20C5	0x342C ;?ICS_Disp_time+0
0x20C6	0x3401 ;?ICS_Disp_time+1
0x20C7	0x3400 ;?ICS_Disp_time+2
0x20C8	0x3400 ;?ICS_Disp_time+3
; end of ?ICS_Disp_time
;main.c,0 :: ?ICS_Tick
0x20C9	0x3400 ;?ICS_Tick+0
0x20CA	0x3400 ;?ICS_Tick+1
0x20CB	0x3400 ;?ICS_Tick+2
0x20CC	0x3400 ;?ICS_Tick+3
; end of ?ICS_Tick
;main.c,0 :: ?ICS_watch_cnt
0x20CD	0x3400 ;?ICS_watch_cnt+0
0x20CE	0x3400 ;?ICS_watch_cnt+1
0x20CF	0x3400 ;?ICS_watch_cnt+2
0x20D0	0x3400 ;?ICS_watch_cnt+3
; end of ?ICS_watch_cnt
;main.c,0 :: ?ICS_volt_cnt
0x20D1	0x3400 ;?ICS_volt_cnt+0
0x20D2	0x3400 ;?ICS_volt_cnt+1
0x20D3	0x3400 ;?ICS_volt_cnt+2
0x20D4	0x3400 ;?ICS_volt_cnt+3
; end of ?ICS_volt_cnt
;main.c,0 :: ?ICS?lstr4_main
0x20D5	0x343D ;?ICS?lstr4_main+0
0x20D6	0x3400 ;?ICS?lstr4_main+1
; end of ?ICS?lstr4_main
;main.c,0 :: ?ICS?lstr3_main
0x20D7	0x343D ;?ICS?lstr3_main+0
0x20D8	0x3400 ;?ICS?lstr3_main+1
; end of ?ICS?lstr3_main
;main.c,0 :: ?ICS_SWR_ind_old
0x20D9	0x340F ;?ICS_SWR_ind_old+0
0x20DA	0x3427 ;?ICS_SWR_ind_old+1
; end of ?ICS_SWR_ind_old
;main.c,0 :: ?ICS_PWR_fixed_old
0x20DB	0x340F ;?ICS_PWR_fixed_old+0
0x20DC	0x3427 ;?ICS_PWR_fixed_old+1
; end of ?ICS_PWR_fixed_old
;main.c,0 :: ?ICS_SWR_fixed_old
0x20DD	0x340F ;?ICS_SWR_fixed_old+0
0x20DE	0x3427 ;?ICS_SWR_fixed_old+1
; end of ?ICS_SWR_fixed_old
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [309]    _interupt
0x0139      [26]    _Soft_I2C_Start
0x0153      [55]    _Soft_I2C_Write
0x018A      [64]    _set_addressing
0x01CA      [20]    _Soft_I2C_Stop
0x01DE      [24]    _Mul_8X8_U
0x01F6       [7]    _RES032
0x01FD      [12]    _SETFUN32
0x0209      [54]    _Mul_32x32_U
0x023F      [55]    _oled_wr_str_s
0x0276       [6]    _Delay_22us
0x027C      [36]    _oled_clear
0x02A0       [4]    _FIXSIGN32
0x02A4      [16]    _send_command
0x02B4      [61]    _Greating
0x02F1      [59]    _ADC_Init_Advanced
0x032C     [321]    _oled_wr_str
0x046D      [53]    _oled_bat
0x04A2      [16]    _ADC_Get_Sample
0x04B2      [28]    _Div_16X16_U
0x04CE     [141]    _oled_init
0x055B       [2]    _Soft_I2C_Init
0x055D      [47]    _NRM3232
0x058C      [44]    _Div_16x16_S_L
0x05B8      [96]    _VDelay_ms
0x0618      [42]    _Mul_16X16_U
0x0642      [12]    _SETFOV32
0x064E      [13]    _SETIOV3224
0x065B     [102]    _Div_16x16_S
0x06C1      [28]    _get_batt
0x06DD     [193]    _oled_start
0x079E      [92]    _double2int
0x0800       [3]    _SETFDZ32
0x0803     [102]    _Mul_32x32_FP
0x0869      [31]    _int2double
0x0888      [98]    _NRM4032
0x08EA      [80]    _WordToStr
0x093A      [12]    _COMFREM
0x0946     [300]    _SDIV3232L
0x0A72     [180]    _Relay_set
0x0B26     [178]    _Div_32x32_S
0x0BD8     [186]    _Div_32x32_FP
0x0C92     [163]    _Add_32x32_FP
0x0D35     [154]    _get_reverse
0x0DCF      [99]    _power_off
0x0E32     [132]    _IntToStr
0x0EB6     [157]    _get_forward
0x0F53      [10]    _atu_reset
0x0F5D     [127]    _draw_power
0x0FDC      [19]    _Ext_long
0x0FEF       [9]    ___CC2DW
0x1000     [241]    _correction
0x10F1      [40]    _Btn_xlong
0x1119     [307]    _get_pwr
0x124C     [109]    _Btn_short
0x12B9     [100]    _get_swr
0x131D     [148]    _coarse_cap
0x13B1     [192]    _sharp_ind
0x1471     [159]    _coarse_tune
0x1510     [192]    _sharp_cap
0x15D0      [63]    _draw_swr
0x160F     [447]    _tune
0x17CE      [20]    _ADC_Init
0x1800     [386]    _oled_voltage
0x1982      [83]    _Btn_long
0x19D5     [597]    _watch_swr
0x1C2A     [153]    _Voltage_show
0x1CC3      [78]    _pic_init
0x1D11     [262]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF0
0x0001       [1]    INDF1
0x0003       [1]    STATUS
0x0004       [1]    FSR0L
0x0005       [1]    FSR0H
0x0006       [1]    FSR1L
0x0007       [1]    FSR1H
0x000A       [1]    PCLATH
0x000B       [0]    GIE_bit
0x000C       [1]    PORTA
0x000D       [1]    PORTB
0x000E       [1]    PORTC
0x000F       [1]    PORTD
0x0010       [1]    PORTE
0x0011       [1]    TRISA
0x0012       [1]    TRISB
0x0013       [1]    TRISC
0x0014       [1]    TRISD
0x0015       [1]    TRISE
0x0016       [0]    LATA2_bit
0x0016       [0]    LATA5_bit
0x0016       [0]    LATA6_bit
0x0016       [0]    C_100
0x0016       [1]    LATA
0x0016       [0]    LATA7_bit
0x0016       [0]    OLED_PWD
0x0016       [0]    LATA3_bit
0x0016       [0]    C_220
0x0016       [0]    C_22
0x0016       [0]    LATA4_bit
0x0017       [0]    Red
0x0017       [0]    Green
0x0017       [0]    LATB4_bit
0x0017       [0]    LATB3_bit
0x0017       [1]    LATB
0x0018       [0]    L_1000
0x0018       [0]    C_2200
0x0018       [0]    LATC7_bit
0x0018       [0]    C_1000
0x0018       [0]    LATC1_bit
0x0018       [0]    LATC0_bit
0x0018       [0]    Rel_to_plus_N
0x0018       [0]    LATC5_bit
0x0018       [0]    C_470
0x0018       [0]    LATC4_bit
0x0018       [0]    LATC2_bit
0x0018       [1]    LATC
0x0018       [0]    L_220
0x0018       [0]    L_450
0x0018       [0]    LATC6_bit
0x0019       [0]    LATD4_bit
0x0019       [0]    L_022
0x0019       [0]    LATD5_bit
0x0019       [0]    L_100
0x0019       [0]    L_010
0x0019       [1]    LATD
0x0019       [0]    LATD2_bit
0x0019       [0]    LATD6_bit
0x0019       [0]    LATD7_bit
0x0019       [0]    L_045
0x0019       [0]    Rel_to_gnd
0x0019       [0]    LATD3_bit
0x001A       [0]    C_47
0x001A       [0]    LATE1_bit
0x001A       [1]    LATE
0x001A       [0]    C_sw
0x001A       [0]    LATE0_bit
0x001C       [1]    TMR0L
0x001D       [1]    TMR0H
0x001E       [0]    T016BIT_bit
0x001E       [0]    T0EN_bit
0x001F       [0]    T0CS0_bit
0x001F       [0]    T0CS2_bit
0x001F       [0]    T0CS1_bit
0x0020       [1]    ___math_tempb
0x0021       [1]    __math_tempbD
0x002F       [1]    _step_ind
0x0030      [12]    ?lstr13_main
0x003C       [4]    _btn_cnt
0x0040      [12]    ?lstr14_main
0x004C       [4]    ?lstr12_main
0x0050       [4]    _Off_time
0x0054       [1]    _ind
0x0055       [1]    _SW
0x0056       [1]    _cap
0x0057       [5]    ?lstr11_main
0x005C       [1]    _step_cap
0x005D      [10]    ?lstr15_main
0x0067       [5]    ?lstr16_main
0x006C       [2]    ?lstr20_main
0x006E       [2]    ?lstr17_main
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x008C       [2]    ADRES
0x0093       [1]    ADCON0
0x0094       [1]    ADCON1
0x0095       [1]    ADCON2
0x0096       [1]    ADCON3
0x009A       [1]    ADREF
0x009E       [1]    ADPCH
0x00A0       [5]    ?lstr21_main
0x00A5       [1]    _btn_1_cnt
0x00A6       [1]    _btn_2_cnt
0x00A7       [1]    oled_control_inversion
0x00A8       [2]    oled_control_oled_addr
0x00AA       [1]    oled_control_oled_shift
0x00AB       [1]    oled_control_shift_line
0x00AC       [2]    _Auto_delta
0x00AE       [2]    ?lstr5_main
0x00B0       [2]    ?lstr6_main
0x00B2       [2]    _Rel_Del
0x00B4      [10]    ?lstr7_main
0x00BE       [2]    _max_for_start
0x00C0      [10]    ?lstr18_main
0x00CA       [6]    ?lstr19_main
0x00D0       [2]    _min_for_start
0x00D2      [10]    ?lstr8_main
0x00DC      [10]    ?lstr9_main
0x00E6       [2]    ?lstr10_main
0x00E8       [4]    ?lstr24_main
0x00EC       [2]    _SWR_ind
0x00EE       [2]    _Voltage_old
0x0120      [19]    ?lstr22_main
0x0133      [10]    ?lstr1_main
0x013D      [13]    ?lstr23_main
0x014A      [10]    ?lstr2_main
0x0154       [4]    _Disp_time
0x0158       [4]    _Tick
0x015C       [4]    _watch_cnt
0x0160       [4]    _volt_cnt
0x0164       [2]    ?lstr4_main
0x0166       [2]    ?lstr3_main
0x0168       [2]    _SWR_ind_old
0x016A       [2]    _PWR_fixed_old
0x016C       [2]    _SWR_fixed_old
0x016E       [2]    _PWR
0x01A0       [2]    _Voltage
0x01A2       [4]    _off_cnt
0x01A6       [0]    _gre
0x01A6       [0]    _E_long
0x01A6       [0]    _B_short
0x01A6       [0]    _B_long
0x01A6       [0]    _E_short
0x01A6       [0]    _B_xlong
0x01A6       [0]    _Overflow
0x01A7       [8]    _txt_2
0x01AF       [2]    _SWR
0x01B1       [8]    _txt
0x01B9       [4]    _tune_cnt
0x01BD       [4]    _ADC_Get_Sample_Ptr
0x01C1       [4]    _disp_cnt
0x01C5       [1]    watch_swr_peak_cnt_L0
0x01C6       [1]    watch_swr_cnt_L0
0x01C7       [2]    watch_swr_delta_L0
0x01C9       [2]    watch_swr_PWR_fixed_L0
0x01CB       [2]    watch_swr_SWR_fixed_L0
0x01CD       [2]    FARG_oled_voltage_Voltage
0x01CF       [1]    oled_voltage_i_L0
0x01D0       [1]    oled_voltage_v_L0
0x01D1       [1]    oled_voltage_u0_L0
0x01D2       [1]    oled_voltage_u1_L0
0x01D3       [1]    oled_voltage_u2_L0
0x01D4       [1]    oled_voltage_u3_L0
0x01D5       [1]    oled_voltage_m_L0
0x01D6       [2]    FARG_draw_swr_s
0x01D6       [2]    tune_swr_mem_L0
0x01D8       [2]    tune_ind_mem_L0
0x01DA       [2]    tune_cap_mem_L0
0x01DC       [1]    coarse_tune_count_L0
0x01DC       [1]    sharp_cap_range_L0
0x01DC       [1]    sharp_ind_range_L0
0x01DD       [1]    sharp_cap_count_L0
0x01DD       [1]    sharp_ind_count_L0
0x01DD       [1]    coarse_tune_mem_cap_L0
0x01DE       [1]    coarse_tune_mem_step_cap_L0
0x01DE       [1]    sharp_ind_max_range_L0
0x01DE       [1]    sharp_cap_max_range_L0
0x01DF       [1]    sharp_cap_min_range_L0
0x01DF       [1]    sharp_ind_min_range_L0
0x01DF       [2]    coarse_tune_min_swr_L0
0x01E0       [2]    sharp_ind_min_SWR_L0
0x01E0       [2]    sharp_cap_min_swr_L0
0x01E1       [1]    coarse_tune_step_L0
0x01E2       [1]    coarse_cap_count_L0
0x01E3       [2]    coarse_cap_min_swr_L0
0x01E5       [1]    coarse_cap_step_L0
0x01E6       [2]    FARG_draw_power_p
0x01E6       [4]    get_pwr_Forward_L0
0x01EA       [4]    get_pwr_Reverse_L0
0x01EE       [2]    get_forward_v_L0
0x01EE       [2]    FARG_correction_input
0x01EE       [2]    get_reverse_v_L0
0x01EE       [1]    power_off_btn_cnt_L0
0x01EE       [2]    IntToStr_i_L0
0x0220       [4]    FLOC__get_forward
0x0220       [6]    FLOC__get_reverse
0x0220       [2]    FARG_IntToStr_input
0x0222       [2]    FARG_IntToStr_output
0x0224       [2]    IntToStr_negative_L0
0x0226       [2]    IntToStr_inword_L0
0x0228       [2]    FARG_WordToStr_input
0x0228       [1]    FARG_Relay_set_L
0x0229       [1]    FARG_Relay_set_C
0x022A       [2]    FARG_WordToStr_output
0x022A       [1]    FARG_Relay_set_I
0x022C       [1]    WordToStr_len_L0
0x022D       [2]    FLOC__WordToStr
0x022F       [1]    FARG_ADC_Init_Advanced_reference
0x022F       [2]    FARG_VDelay_ms_Time_ms
0x022F       [1]    FARG_oled_wr_str_page
0x022F       [1]    oled_bat_i_L0
0x022F       [1]    FARG_ADC_Get_Sample_channel
0x0230       [1]    oled_bat_g_L0
0x0230       [1]    FARG_oled_wr_str_col
0x0231       [2]    FARG_oled_wr_str_str
0x0231       [4]    VDelay_ms_NumberOfCyc_L0
0x0233       [1]    FARG_oled_wr_str_leng
0x0234       [1]    oled_wr_str_i_L0
0x0235       [1]    oled_wr_str_h_L0
0x0236       [1]    oled_wr_str_g_L0
0x0237       [1]    oled_wr_str_w1_L0
0x0238       [1]    oled_wr_str_w2_L0
0x0239       [1]    oled_clear_i_L0
0x0239       [1]    FARG_oled_wr_str_s_page
0x0239       [1]    FARG_send_command_oled_command
0x023A       [1]    oled_clear_r_L0
0x023A       [1]    FARG_oled_wr_str_s_col
0x023B       [2]    FARG_oled_wr_str_s_str
0x023D       [1]    FARG_oled_wr_str_s_len
0x023E       [1]    oled_wr_str_s_i_L0
0x023F       [1]    oled_wr_str_s_h_L0
0x0240       [1]    oled_wr_str_s_g_L0
0x0241       [1]    FARG_set_addressing_pagenum
0x0242       [1]    FARG_set_addressing_c_start
0x0243       [1]    set_addressing_a_L0
0x0244       [1]    set_addressing_b_L0
0x0245       [1]    set_addressing_c_L0
0x0246       [1]    FARG_Soft_I2C_Write_d
0x070C       [0]    TMR0IF_bit
0x0716       [0]    IOCIE_bit
0x0716       [0]    TMR0IE_bit
0x0796       [1]    PMD0
0x0796       [0]    SYSCMD_bit
0x0797       [1]    PMD1
0x0798       [1]    PMD2
0x0799       [1]    PMD3
0x079A       [1]    PMD4
0x079B       [1]    PMD5
0x090C       [1]    FVRCON
0x0990       [0]    C1ON_bit
0x0994       [0]    C2ON_bit
0x1F38       [1]    ANSELA
0x1F3A       [0]    ODCA2_bit
0x1F3A       [0]    ODCA3_bit
0x1F43       [0]    ANSB0_bit
0x1F43       [0]    ANSB1_bit
0x1F43       [0]    ANSB2_bit
0x1F43       [1]    ANSELB
0x1F49       [0]    IOCBN5_bit
0x1F4A       [0]    IOCBF5_bit
0x1F4E       [1]    ANSELC
0x1F59       [1]    ANSELD
0x1F5B       [0]    ODCD2_bit
0x1F5B       [0]    ODCD1_bit
0x1F64       [1]    ANSELE
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x07FA       [5]    ?ICS?lstr21_main
0x0FF8       [4]    ?ICS?lstr24_main
0x0FFC       [2]    ?ICS?lstr17_main
0x0FFE       [2]    ?ICS_SWR_ind
0x17E2      [19]    ?ICS?lstr22_main
0x17F5      [10]    ?ICS?lstr1_main
0x1E1B     [480]    oled_control_font_5x8
0x1FFB       [2]    ?ICS_Voltage_old
0x2000       [1]    ?ICS_btn_1_cnt
0x2001       [1]    ?ICS_btn_2_cnt
0x2002       [1]    ?ICSoled_control_inversion
0x2003       [2]    ?ICSoled_control_oled_addr
0x2005       [1]    ?ICSoled_control_oled_shift
0x2006       [1]    ?ICSoled_control_shift_line
0x2007       [2]    ?ICS_Auto_delta
0x2009       [2]    ?ICS?lstr5_main
0x200B       [2]    ?ICS?lstr6_main
0x200D       [2]    ?ICS_Rel_Del
0x200F      [10]    ?ICS?lstr7_main
0x2019       [2]    ?ICS_max_for_start
0x201B      [10]    ?ICS?lstr18_main
0x2025       [6]    ?ICS?lstr19_main
0x202B       [2]    ?ICS_min_for_start
0x202D      [10]    ?ICS?lstr8_main
0x2037      [10]    ?ICS?lstr9_main
0x2041       [2]    ?ICS?lstr10_main
0x2043       [1]    ?ICS_step_ind
0x2044      [12]    ?ICS?lstr13_main
0x2050       [4]    ?ICS_btn_cnt
0x2054      [12]    ?ICS?lstr14_main
0x2060       [4]    ?ICS?lstr12_main
0x2064       [4]    ?ICS_Off_time
0x2068       [1]    ?ICS_ind
0x2069       [1]    ?ICS_SW
0x206A       [1]    ?ICS_cap
0x206B       [5]    ?ICS?lstr11_main
0x2070       [1]    ?ICS_step_cap
0x2071      [10]    ?ICS?lstr15_main
0x207B       [5]    ?ICS?lstr16_main
0x2080       [2]    ?ICS?lstr20_main
0x2082      [44]    oled_control_batt
0x20AE      [13]    ?ICS?lstr23_main
0x20BB      [10]    ?ICS?lstr2_main
0x20C5       [4]    ?ICS_Disp_time
0x20C9       [4]    ?ICS_Tick
0x20CD       [4]    ?ICS_watch_cnt
0x20D1       [4]    ?ICS_volt_cnt
0x20D5       [2]    ?ICS?lstr4_main
0x20D7       [2]    ?ICS?lstr3_main
0x20D9       [2]    ?ICS_SWR_ind_old
0x20DB       [2]    ?ICS_PWR_fixed_old
0x20DD       [2]    ?ICS_SWR_fixed_old
